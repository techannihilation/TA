#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"


piece  base, body, glow, dome1, dome2, dome3, 
	 emp1, glow1, tubing, tube1, tube2, armor, 
	 arm1_1, arm1_2, arm1_3, arm1_4, arm1_5, arm1_6, arm1_7, 
	 arm2_1, arm2_2, arm2_3, arm2_4, arm2_5, arm2_6, arm2_7, 
	 arm3_1, arm3_2, arm3_3, arm3_4, arm3_5, arm3_6, arm3_7, 
	 this, ball1, ball2, ball3 ;

static-var shared, upgraded ; 

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	
	/*
	turn body to y-axis <-45.00> now;
	turn dome1 to y-axis <45.00> now;
	turn dome2 to y-axis <45.00> now;
	turn dome3 to y-axis <45.00> now;

	*/
	set ARMORED to 1;
	dont-shade ball1;
	dont-shade ball2;
	dont-shade ball3;
	dont-cache ball1;
	dont-cache ball2;
	dont-cache ball3;

	dont-shade glow;
	dont-shade dome1;
	dont-shade dome2;
	dont-shade dome3;
	dont-shade tube1;
	dont-shade tube2;



	
	set INBUILDSTANCE to 1;
	
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}

	start-script SmokeUnit();
	
	spin ball1 around y-axis speed <-30.000000>;
	spin ball2 around y-axis speed <-30.000000>;
	spin ball2 around y-axis speed <-30.000000>;
	spin dome1 around y-axis speed <60.000000>;
	spin dome2 around y-axis speed <60.000000>;
	spin dome3 around y-axis speed <60.000000>;
	

}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( upgraded == 1 )
	{
		if( severity <= 80 )
		{
			corpsetype = 1;
			explode base type BITMAPONLY | BITMAP1;
			return (0);
		}
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		return (0);
	}
	corpsetype = 4;
	explode base type BITMAPONLY | BITMAP1;
}
