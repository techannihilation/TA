#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, pelvis, chest, lbody, lshoulder, larm, lhand, lathe1,
       lathe2, lathe3, lathe4, lpada, lpadb, rockfire1, rockfire3, rockfire5,
       rockfire7, rbody, rshoulder, rarm, barrel, rfire,
       rpada, rpadb, rockfire2, rockfire4,
       rockfire6, rockfire8, torsocover, back, lthigh, lleg, lfoot, lftoes,
       lleftoe, rthigh, rleg, rfoot, rftoes, rrightoe, headrest, head,
       headfire, headsupport, rshoulderholder;

static-var  unitviewer, Main_Gun_Heading, bShield,
            gun_1, msl_1, bMoving, bAiming, spray, bBuilding;

// Signal definitions
#define SIG_AIM_1			2
#define SIG_AIM_2			4
#define SIG_AIM_3			8
#define SIG_AIM_4			16
#define SIG_MOVE			32


Walk()
{
	while( bMoving )
	{
		turn rthigh to x-axis <-35.000000> speed <103.390110>;
		turn rftoes to x-axis <25.000000> speed <48.000000>;
		turn rleg to x-axis <20.000000> speed <32.000000>;
		
		if( !bAiming )
		{
			move rbody to y-axis [0.300000] speed [0.400000];
			turn rshoulder to x-axis <20.000000> speed <30.192308>;
			move head to y-axis [0.269983] speed [0.400000];
			turn lshoulder to x-axis <-25.000000> speed <35.192308>;
			turn larm to x-axis <-5.000000> speed <5.000000>;
			turn lhand to x-axis <-2.000000> speed <2.000000>;
			turn rarm to x-axis <0.000000> speed <15.000000>;
			move head to x-axis [0.250000] speed [0.300000];
		}
		
		turn rfoot to x-axis <12.000000> speed <16.791209>;
		turn lthigh to x-axis <43.000000> speed <55.791209>;
		turn lleg to x-axis <-8.000000> speed <10.791209>;
		turn lfoot to x-axis <-15.000000> speed <29.049451>;
		turn lftoes to x-axis <-14.000000> speed <18.236264>;
		sleep 250;

		if( !bAiming )
		{
			move head to y-axis [0.000000] speed [0.400000];
			move rbody to y-axis [0.000000] speed [0.229999];
		}
		sleep 250;
		turn rthigh to x-axis <-8.000000> speed <72.000000>;
		turn rleg to x-axis <8.000000> speed <16.071429>;
		turn rfoot to x-axis <0.000000> speed <32.000000>;
		turn rftoes to x-axis <0.000000> speed <66.670330>;
		turn lthigh to x-axis <44.000000> speed <2.659341>;
		turn lleg to x-axis <12.000000> speed <53.324176>;
		turn lfoot to x-axis <5.000000> speed <53.324176>;
		turn lftoes to x-axis <40.000000> speed <90.000000>;
		sleep 375;
		turn lthigh to x-axis <-35.000000> speed <99.967033>;
		turn lftoes to x-axis <25.000000> speed <48.000000>;
		turn lleg to x-axis <20.000000> speed <32.000000>;
		turn lfoot to x-axis <12.000000> speed <16.791209>;
		turn rthigh to x-axis <43.000000> speed <55.791209>;
		turn rleg to x-axis <-8.000000> speed <10.791209>;
		turn rfoot to x-axis <-15.000000> speed <29.049451>;
		turn rftoes to x-axis <-14.000000> speed <18.236264>;
		
		if( !bAiming )
		{
				turn chest to y-axis <5.000000> speed <2.000000>;
				move lbody to y-axis [0.300000] speed [0.500000];
				turn lshoulder to x-axis <16.000000> speed <10.192308>;
				turn lhand to x-axis <8.000000> speed <6.000000>;
				move head to y-axis [0.269983] speed [0.439972];
				move lshoulder to y-axis [0.500000] speed [0.400000];
				turn rshoulder to x-axis <-25.000000> speed <10.192308>;
				turn rarm to x-axis <-5.000000> speed <5.000000>;
				turn larm to x-axis <0.000000> speed <15.000000>;
				turn lhand to x-axis <0.000000> speed <14.000000>;
				move head to x-axis [0.250000] speed [0.150000];
		}

		sleep 250;
		
		if( !bAiming )
		{
			turn rarm to x-axis <-15.000000> speed <20.390110>;
		}
		
		sleep 250;
		
		if( !bAiming )
		{
			move head to y-axis [0.000000] speed [0.400000];
			move lbody to y-axis [0.000000] speed [0.229999];
		}
		sleep 250;
		turn lthigh to x-axis <-8.000000> speed <72.000000>;
		turn lleg to x-axis <8.000000> speed <16.071429>;
		turn lfoot to x-axis <0.000000> speed <32.000000>;
		turn lftoes to x-axis <0.000000> speed <66.670330>;
		turn rthigh to x-axis <44.000000> speed <2.659341>;
		turn rleg to x-axis <12.000000> speed <53.324176>;
		turn rfoot to x-axis <5.000000> speed <53.324176>;
		turn rftoes to x-axis <40.000000> speed <90.000000>;
		sleep 250;
		
		if ( !bMoving )
		{
			turn lthigh to x-axis <0.000000> speed <50.0>;
			turn lleg to x-axis <0.000000> speed <50.0>;
			turn lfoot to x-axis <0.000000> speed <50.0>;
			turn lftoes to x-axis <0.000000> speed <0.0>;
			turn rthigh to x-axis <0.000000> speed <50.0>;
			turn rleg to x-axis <0.000000> speed <50.0>;
			turn rfoot to x-axis <0.000000> speed <50.0>;
			turn rftoes to x-axis <0.000000> speed <90.0>;
		
		}
		
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from chest;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	sleep 200;
	bMoving = 1;
	start-script Walk();
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	bMoving = 0;
	turn rthigh to x-axis <0.000000> speed <135.000000>;
	turn rleg to x-axis <0.000000> speed <80.000000>;
	turn rfoot to x-axis <0.000000> speed <150.000000>;
	turn rftoes to x-axis <0.000000> speed <180.000000>;
	turn lthigh to x-axis <0.000000> speed <135.000000>;
	turn lleg to x-axis <0.000000> speed <80.000000>;
	turn lfoot to x-axis <0.000000> speed <150.000000>;
	turn lftoes to x-axis <0.000000> speed <180.000000>;
	move rbody to y-axis [0.000000] speed [1.000000];
	move head to y-axis [0.000000] speed [3.000000];
	move head to x-axis [0.000000] speed [2.000000];
	if( !bAiming )
	{
		turn chest to y-axis <0.000000> speed <10.000000>;
		turn rshoulder to x-axis <0.000000> speed <100.000000>;
		turn lshoulder to x-axis <0.000000> speed <100.000000>;
		turn larm to x-axis <0.000000> speed <45.000000>;
		turn lhand to x-axis <0.000000> speed <45.000000>;
		turn rarm to x-axis <0.000000> speed <45.000000>;
		turn lhand to z-axis <0.000000> speed <50.000000>;
	}
}

Create()
{
	unitviewer = FALSE;	
	gun_1 = 1;
	msl_1 = 1;
	bMoving = 0;
	bAiming = 0;
	spray = 1;
	bBuilding = 0;
	Main_Gun_Heading = 0;
	bShield = 1;
	start-script SmokeUnit();
}

RestorePrimary()
{
	sleep 3000;
	turn chest to y-axis <0.000000> speed <60.000000>;
}

RestoreSecondary()
{
	sleep 2000;
	turn rarm to x-axis <0.000000> speed <65.000000>;	
	turn rshoulder to x-axis <0.000000> speed <50.000000>;
	bAiming = 0;
}

RestoreWeapon4()
{
	sleep 2000;
	turn chest to y-axis <0.000000> speed <60.000000>;
	turn rarm to x-axis <0.000000> speed <65.000000>;	
	turn rshoulder to x-axis <0.000000> speed <50.000000>;
	bAiming = 0;
}

RestorePosition()
{
	sleep 1000;
	if( !bBuilding )
	{
		turn lshoulder to x-axis <0.000000> speed <40.000000>;
		turn larm to x-axis <0.000000> speed <40.000000>;
		turn chest to y-axis <0.000000> speed <60.000000>;
	}
}

Demo()
{
	unitviewer = TRUE;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

AimFromWeapon1(piecenum)
{
	piecenum = chest;
}

AimWeapon1(heading, pitch)
{
	if( bAiming == 1 )
	{
		return (0);
	}
	signal SIG_AIM_1;
	set-signal-mask SIG_AIM_1;
	while( bBuilding)
	{
		sleep 500;
	}
	Main_Gun_Heading = heading;
	turn chest to y-axis heading speed <250.000000>;
	wait-for-turn chest around y-axis;
	start-script RestorePrimary();
	return (1);
}

FireWeapon1()
{
	while(TRUE)
	{
		sleep 125;	
		++msl_1;
		if (msl_1 == 5)
		{
			return (0);		
		}
		if (msl_1 == 9)
		{
			msl_1 = 1;
			return (0);		
		}
	}
}

QueryWeapon1(piecenum)
{
	if( msl_1 == 1 )
	{
		piecenum = rockfire1;
	}
	if( msl_1 == 2 )
	{
		piecenum = rockfire3;
	}
	if( msl_1 == 3 )
	{
		piecenum = rockfire5;
	}
	if( msl_1 == 4 )
	{
		piecenum = rockfire7;
	}
	if( msl_1 == 5 )
	{
		piecenum = rockfire2;
	}
	if( msl_1 == 6 )
	{
		piecenum = rockfire4;
	}
	if( msl_1 == 7 )
	{
		piecenum = rockfire6;
	}
	if( msl_1 == 8 )
	{
		piecenum = rockfire8;
	}
}

AimFromWeapon2(piecenum)
{
	piecenum = rarm;
}

AimWeapon2(heading, pitch)
{
	if( bAiming == 1 )
	{
		return (0);
	}
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	while( bBuilding )
	{
		sleep 500;
	}
	if (heading > (Main_Gun_Heading + 3000) or heading < (Main_Gun_Heading - 3000))
	{
		return (0);
	}
	turn rarm to x-axis <-45.000000> speed <65.000000>;	
	turn rshoulder to x-axis <-45.000000> - pitch speed <50.000000>;
	wait-for-turn chest around y-axis;
	wait-for-turn rarm around x-axis;	
	wait-for-turn rshoulder around x-axis;
	start-script RestoreSecondary();
	return (1);
}

FireWeapon2()
{
	move barrel to y-axis [1.7500000] speed [500.000000];
	sleep 150;
	move barrel to y-axis [0.000000] speed [0.75];
}

QueryWeapon2(piecenum)
{
	piecenum = rfire;
}

// SEALASER

AimFromWeapon4(piecenum)
{
	piecenum = rarm;
}

AimWeapon4(heading, pitch)
{
	if( get PIECE_Y(head) > -7 )
	{
		return (0);
	}
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	while( bBuilding )
	{
		sleep 500;
	}
	Main_Gun_Heading = heading;
	turn chest to y-axis heading speed <250.000000>;
	turn rarm to x-axis <-45.000000> speed <65.000000>;	
	turn rshoulder to x-axis <-45.000000> - pitch speed <50.000000>;
	wait-for-turn chest around y-axis;
	wait-for-turn rarm around x-axis;	
	wait-for-turn rshoulder around x-axis;
	start-script RestoreWeapon4();
	return (1);
}

FireWeapon4()
{
	sleep 150;
}

QueryWeapon4(piecenum)
{
	piecenum = rfire;
}

AimFromTertiary(piecenum)
{
	piecenum = head;
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	bAiming = 1;
	turn chest to y-axis heading speed <120.000000>;	
	wait-for-turn chest around y-axis;
	start-script RestorePrimary();
	start-script RestoreSecondary();
	return (1);
}

FireTertiary()
{
	show headfire;
	sleep 180;
	hide headfire;
	bAiming = 0;
}

QueryTertiary(piecenum)
{
	piecenum = headfire;
}

//SHIELD
Shield()
{
	bShield = !bShield;
}

AimFromWeapon5(piecenum)
{
	piecenum = pelvis;
}

QueryWeapon5(piecenum)
{
	piecenum = pelvis;
}

AimWeapon5(heading, pitch)
{
	if( bShield )
	{
		return (1);
	}
	else
	{
		return (0);
	}
}

QueryNanoPiece(piecenum)
{
	if( spray == 1 )
	{
		spray = 2;
		piecenum = lathe1;
		return (0);
	}
	if( spray == 2 )
	{
		spray = 3;
		piecenum = lathe2;
		return (0);
	}
	if( spray == 3 )
	{
		spray = 4;
		piecenum = lathe3;
		return (0);
	}
	if( spray == 4 )
	{
		spray = 1;
		piecenum = lathe4;
		return (0);
	}
}

StartBuilding(Func_Var_1, Func_Var_2)
{
	signal SIG_AIM_1;
	signal SIG_AIM_2;
	bBuilding = 1;
	turn rarm to x-axis <0.000000> speed <15.000000>;
	turn rshoulder to x-axis <0.000000> speed <15.000000>;
	turn larm to x-axis <-60.000000> speed <70.000000>;
	wait-for-turn larm around x-axis;
	turn lhand to z-axis <-10.000000> speed <30.000000>;
	turn lshoulder to x-axis <0.000000> - Func_Var_2 speed <40.000000>;
	turn chest to y-axis Func_Var_1 speed <250.000000>;
	wait-for-turn chest around y-axis;
	wait-for-turn lshoulder around x-axis;
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	set INBUILDSTANCE to 0;
	bBuilding = 0;
	signal SIG_AIM_1;
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	call-script RestorePosition();
}

Killed(severity, corpsetype)
{
	corpsetype = 1;
	return (corpsetype);
}
