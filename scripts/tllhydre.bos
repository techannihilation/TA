#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, turret, holster, cholster_front, cholster_back, rholster, lholster, sleevea, sleeveb, sleevee,
       sleevef, sleevec,
       sleeved, sleeveg, sleeveh, shella, shellb, Barrel01, Barrel02, Barrel03, Barrel04, Flare01, Flare02, Flare03, Flare04, aimpoint, Shell01, Shell02, Shell03, Shell04 ;

static-var  Static_Var_1;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

Create()
{
	Static_Var_1 = 1;
	hide Flare01;
	hide Flare02;
	hide Flare03;
	hide Flare04;
	hide Shell01;
	hide Shell02;
	hide Shell03;
	hide Shell04;
	dont-cache sleevea;
	dont-cache sleeveb;
	dont-cache sleevec;
	dont-cache sleeved;
	dont-cache sleevee;
	dont-cache sleevef;
	dont-cache sleeveg;
	dont-cache sleeveh;
	dont-cache turret;
	dont-cache rholster;
	dont-cache lholster;
	dont-shade shella;
	dont-shade shellb;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn turret to y-axis heading speed <15.000000>;
	turn holster to x-axis <0.000000> - pitch speed <6.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn turret around x-axis;
	return (1);
}


FirePrimary()
{
	if( Static_Var_1 == 1 )
	{
		move Barrel01 to z-axis [-5.000000] now;
		emit-sfx 1024 + 0 from Flare01;
		sleep 100;
		explode Shell01 type NOHEATCLOUD | FALL;
		move Barrel01 to z-axis [0.000000] speed [20.000000];
		Static_Var_1 = 3;
		return (0);
	}
		if( Static_Var_1 == 2 )
	{
		move Barrel02 to z-axis [-5.000000] now;
		emit-sfx 1024 + 0 from Flare02;
		sleep 100;
		explode Shell02 type NOHEATCLOUD | FALL;
		move Barrel02 to z-axis [0.000000] speed [20.000000];
		Static_Var_1 = 4;
		return (0);
	}
		if( Static_Var_1 == 3 )
	{
		move Barrel03 to z-axis [-5.000000] now;
	
		emit-sfx 1024 + 0 from Flare03;
		sleep 100;
		explode Shell03 type NOHEATCLOUD | FALL;
		move Barrel03 to z-axis [0.000000] speed [20.000000];
		Static_Var_1 = 2;
		return (0);
	}
		if( Static_Var_1 == 4 )
	{
		move Barrel04 to z-axis [-5.000000] now;
		
		emit-sfx 1024 + 0 from Flare04;
		sleep 100;
		explode Shell04 type NOHEATCLOUD | FALL;
		move Barrel04 to z-axis [0.000000] speed [20.000000];
		Static_Var_1 = 1;
		return (0);
	}
}

AimFromPrimary(piecenum)
{
	piecenum = aimpoint;
}

QueryPrimary(piecenum)
{
	if( Static_Var_1 == 1 )
	{
		piecenum = Flare01;
	}
	if( Static_Var_1 == 2 )
	{
		piecenum = Flare02;
	}
	if( Static_Var_1 == 3 )
	{
		piecenum = Flare03;
	}
	if( Static_Var_1 == 4 )
	{
		piecenum = Flare04;
	}
}

SweetSpot(piecenum)
{
	piecenum = turret;
}

Killed(severity, corpsetype)
{
	hide Flare01;

	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode rholster type NOHEATCLOUD;
		explode lholster type NOHEATCLOUD;
		explode shella type NOHEATCLOUD;
		explode shellb type NOHEATCLOUD;
		explode sleevea type NOHEATCLOUD;
		explode sleeveb type NOHEATCLOUD;
		explode sleevec type NOHEATCLOUD;
		explode sleeved type NOHEATCLOUD;
		explode sleevee type NOHEATCLOUD;
		explode sleevef type NOHEATCLOUD;
		explode sleeveg type NOHEATCLOUD;
		explode sleeveh type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD | FALL;
		explode rholster type NOHEATCLOUD | FALL;
		explode lholster type NOHEATCLOUD | FALL;
		explode shella type NOHEATCLOUD | FALL;
		explode shellb type NOHEATCLOUD | FALL;
		explode sleevea type NOHEATCLOUD | FALL;
		explode sleeveb type NOHEATCLOUD | FALL;
		explode sleevec type NOHEATCLOUD | FALL;
		explode sleeved type NOHEATCLOUD | FALL;
		explode sleevee type NOHEATCLOUD | FALL;
		explode sleevef type NOHEATCLOUD | FALL;
		explode sleeveg type NOHEATCLOUD | FALL;
		explode sleeveh type NOHEATCLOUD | FALL;
		explode turret type NOHEATCLOUD | FALL;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rholster type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lholster type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode shella type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode shellb type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleevea type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeveb type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleevec type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeved type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleevee type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleevef type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeveg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeveh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret type NOHEATCLOUD  | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rholster type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lholster type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode shella type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode shellb type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleevea type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeveb type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleevec type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeved type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleevee type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleevef type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeveg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeveh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
