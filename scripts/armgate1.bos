#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, gun, tower, pipe1, pipe2, pipe3, 
		emitter1, emitter2, emitter3, emitter4, emitter5, emitter6,
		block1, block2, block3, light1, light2, light3,
		petal1,petal2, petal3, petal4, petal5, petal6;

static-var  Static_Var_1, statechg_DesiredState, statechg_StateChanging;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

ShieldOn()
{
	Static_Var_1 = 1;
	move tower to y-axis [5] speed [4];
	wait-for-move tower along y-axis;
	sleep 150;
	turn emitter1 to x-axis <60.000000> speed <15.000000>;
	turn emitter2 to x-axis <60.000000> speed <15.000000>;
	turn emitter3 to x-axis <60.000000> speed <15.000000>;
	turn emitter4 to x-axis <60.000000> speed <15.000000>;
	turn emitter5 to x-axis <60.000000> speed <15.000000>;	
	turn emitter6 to x-axis <60.000000> speed <15.000000>;
}

ShieldOff()
{
	Static_Var_1 = 0;
	turn emitter1 to x-axis <60.000000> speed <15.000000>;
	turn emitter2 to x-axis <60.000000> speed <15.000000>;
	turn emitter3 to x-axis <60.000000> speed <15.000000>;
	turn emitter4 to x-axis <60.000000> speed <15.000000>;
	turn emitter5 to x-axis <60.000000> speed <15.000000>;	
	turn emitter6 to x-axis <60.000000> speed <15.000000>;
	wait-for-turn emitter1 around x-axis;
	sleep 150;
	move tower to y-axis [5] speed [4];	
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script ShieldOn();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script ShieldOff();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}
/*
OpenClose()
{
	while(TRUE)
		{
		while( Static_Var_1 )
		{
				sleep 500;
		}
			while( !Static_Var_1 )
		{
				call-script ShieldOff();
				sleep 500;
		}
		sleep 500;
	}
}
*/
Create()
{
	turn petal1 to y-axis <0.000000> now;
	turn petal2 to y-axis <60.000000> now;
	turn petal3 to y-axis <120.000000> now;
	turn petal4 to y-axis <180.000000> now;
	turn petal5 to y-axis <240.000000> now;
	turn petal6 to y-axis <300.000000> now;
	Static_Var_1 = 1;
	start-script SmokeUnit();
	call-script InitState();
	//start-script OpenClose();
}

AimPrimary(heading, pitch)
{
	sleep 100;
	return (Static_Var_1);
}

FirePrimary()
{
	explode gun type NOHEATCLOUD | FALL;
	sleep 100;
}

QueryPrimary(piecenum)
{
	piecenum = base;
}

AimFromPrimary(piecenum)
{
	piecenum = base;
}

AimSecondary(heading, pitch)
{
	sleep 100;
	return (Static_Var_1);
}

FireSecondary()
{
	explode gun type NOHEATCLOUD | FALL;
	sleep 100;
}

QuerySecondary(piecenum)
{
	piecenum = base;
}

AimFromSecondary(piecenum)
{
	piecenum = base;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		explode pipe1 type NOHEATCLOUD;
		explode pipe3 type NOHEATCLOUD;
		explode tower type NOHEATCLOUD;
		explode emitter2 type NOHEATCLOUD;
		explode emitter5 type NOHEATCLOUD;
		explode emitter6 type NOHEATCLOUD;
		explode gun type NOHEATCLOUD;
		explode block1 type NOHEATCLOUD;
		explode block2 type NOHEATCLOUD;
		explode block3 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode pipe1 type NOHEATCLOUD;
		explode pipe3 type NOHEATCLOUD;
		explode tower type NOHEATCLOUD;
		explode emitter2 type NOHEATCLOUD;
		explode emitter5 type NOHEATCLOUD;
		explode emitter6 type NOHEATCLOUD;
		explode gun type NOHEATCLOUD;
		explode block1 type NOHEATCLOUD;
		explode block2 type NOHEATCLOUD;
		explode block3 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode pipe1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode pipe3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode tower type NOHEATCLOUD;
		explode emitter2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode emitter5 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode emitter6 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode gun type NOHEATCLOUD;
		explode block1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode block2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode block3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode pipe1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode pipe3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode tower type NOHEATCLOUD;
	explode emitter2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode emitter5 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode emitter6 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode gun type NOHEATCLOUD;
	explode block1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode block2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode block3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
