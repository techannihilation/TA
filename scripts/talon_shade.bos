#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  bombay1, bombay2, bombay3, bombay4, base, body, winga, wingb;

static-var  Static_Var_1, Static_Var_2, Static_Var_3;

// Signal definitions
#define SIG_AIM				2

activatescr()
{
	if( TRUE )
	{
		turn winga to z-axis <-1.> speed <1.>;
		turn wingb to z-axis <-1.> speed <1.>;
		wait-for-turn wingb around z-axis;
		turn body to z-axis <1.> speed <1.>;
		wait-for-turn body around z-axis;
		turn body to z-axis <1.> speed <1.>;
		wait-for-turn body around z-axis;
		turn body to z-axis <-1.> speed <1.>;
		sleep 1000;
	}
	sleep 23;
}

deactivatescr()
{
	if( TRUE )
	{
		turn winga to z-axis <-1.> speed <1.>;
		turn wingb to z-axis <1.> speed <1.>;
		sleep 1445;
	}
	sleep 24;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

InitState()
{
	Static_Var_2 = 1;
	Static_Var_3 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_3 )
	{
		Static_Var_2 = requestedstate;
		return (0);
	}
	Static_Var_3 = 1;
	currentstate = Static_Var_2;
	Static_Var_2 = requestedstate;
	while( Static_Var_2 != currentstate )
	{
		if( Static_Var_2 == 0 )
		{
			call-script activatescr();
			currentstate = 0;
		}
		if( Static_Var_2 == 1 )
		{
			call-script deactivatescr();
			currentstate = 1;
		}
	}
	Static_Var_3 = 0;
}

MoveRate2()
{
	if( Rand( 1, 10 ) == 1 AND !Static_Var_1 )
	{
		Static_Var_1 = 1;
		turn base to z-axis <1.> speed <1.>;
		wait-for-turn base around z-axis;
		turn base to z-axis <1.> speed <1.>;
		wait-for-turn base around z-axis;
		turn base to z-axis <-1.> speed <1.>;
		Static_Var_1 = 0;
	}
}

Create()
{
	Static_Var_1 = 0;
	call-script InitState();
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

AimFromPrimary(piecenum)
{
	piecenum = body;
}

AimPrimary() 
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
}

FirePrimary() 
{

}

QueryPrimary(piecenum)
{
	Static_Var_1 = Rand( 1, 5 );
	if( Static_Var_1 == 1 )
	{
		piecenum = bombay1;
	}
	if( Static_Var_1 == 2 )
	{
		piecenum = bombay2;
	}
	if( Static_Var_1 == 3 )
	{
		piecenum = bombay3;
	}
	if( Static_Var_1 == 4 )
	{
		piecenum = bombay4;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode bombay1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode bombay2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode bombay3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode bombay4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode winga type NOHEATCLOUD;
		explode wingb type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD | BITMAP1;
		explode bombay1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode bombay2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode bombay3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode bombay4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode winga type SHATTER | NOHEATCLOUD;
		explode wingb type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD | BITMAP1;
		explode bombay1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode bombay2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode bombay3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode bombay4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode winga type SHATTER | NOHEATCLOUD;
		explode wingb type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD | BITMAP1;
	explode bombay1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode bombay2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode bombay3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode bombay4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode winga type SHATTER | NOHEATCLOUD;
	explode wingb type NOHEATCLOUD;
	return (corpsetype);
}
