#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, pelvis, torso, shield_pos,
		ruparm, Rarm, rhand, Rweapon, rminigun1, rflare1, rminigun2, rflare2,
		luparm, Larm, lhand, Lweapon, lminigun1, lflare1, lminigun2, lflare2,
       
       Rhileg, Rleg, Rdownleg, Rfoot, Rbackfing, Rfinger, Rfinger1, Rfinger2,
       Lhileg, Lleg, Ldownleg, Lfoot, Lbackfing, Lfinger, Lfinger1, Lfinger2,
       head, Raim, Rbarrl, Rheadflare, Laim, Lbarrl, Lheadflare, luparmhold,
       ruparmhold;

static-var shield_onoff, gun_1, bMoving, bAiming;

// Signal definitions
#define SIG_AIM_1			2
#define SIG_AIM_2			4
#define SIG_AIM_3			8
#define SIG_AIM_4			16
#define SIG_AIM_5			32
#define SIG_MOVE			64

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	while( TRUE )
	{
		Func_Var_4 = Rand( 1, 4 );
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from pelvis;
			}
			else if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from Rarm;
			}
			else if( Func_Var_4 == 3 )
			{
				emit-sfx smoketype from Rfoot;
			}
			else
			{
				emit-sfx smoketype from Lweapon;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Walk()
{
	while( bMoving )
	{
			turn Rhileg to x-axis <-7.000000> speed <10.000000>;
			turn Rleg to x-axis <-28.000000> speed <28.000000>;
			turn Rdownleg to x-axis <15.000000> speed <15.000000>;
			turn Rfoot to x-axis <5.000000> speed <5.000000>;
			turn Rfinger to x-axis <40.000000> speed <50.000000>;
			turn Rfinger1 to x-axis <40.000000> speed <60.000000>;
			turn Rfinger2 to x-axis <40.000000> speed <60.000000>;
			turn Rbackfing to x-axis <-50.000000> speed <70.000000>;

		if( !bAiming )
		{
			turn luparm to x-axis <-6.000000> speed <16.000000>;
			turn lhand to y-axis <5.000000> speed <5.000000>;
			turn rhand to y-axis <0.000000> speed <12.000000>;
			turn Larm to x-axis <-10.000000> speed <10.000000>;
			turn ruparm to x-axis <6.000000> speed <8.000000>;
			turn Rarm to x-axis <9.000000> speed <12.000000>;
			turn torso to y-axis <4.000000> speed <9.000000>;
			turn head to y-axis <3.000000> speed <7.000000>;
			turn torso to z-axis <2.000000> speed <2.000000>;
			move torso to y-axis [1.000000] speed [1.500000];
			move head to y-axis [1.500000] speed [1.875000];
		}
		turn Lhileg to x-axis <8.000000> speed <8.000000>;
		turn Lleg to x-axis <20.000000> speed <30.000000>;
		turn Ldownleg to x-axis <-5.000000> speed <15.000000>;
		turn Lfoot to x-axis <-15.000000> speed <15.000000>;
		turn Lfinger to x-axis <-13.000000> speed <13.000000>;
		turn Lfinger1 to x-axis <-13.000000> speed <13.000000>;
		turn Lfinger2 to x-axis <-13.000000> speed <13.000000>;
		turn Lbackfing to x-axis <-25.000000> speed <25.000000>;
		sleep 800;
		if( !bAiming )
		{
			turn lhand to y-axis <-15.000000> speed <15.000000>;
			turn Rarm to x-axis <10.000000> speed <30.000000>;
			move torso to y-axis [0.000000] speed [0.750000];
			move head to y-axis [1.500000] speed [1.000000];
		}
		sleep 200;
		turn Rhileg to x-axis <0.000000> speed <14.000000>;
		turn Rleg to x-axis <-10.000000> speed <28.000000>;
		turn Rdownleg to x-axis <10.000000> speed <12.000000>;
		turn Rfoot to x-axis <0.000000> speed <5.000000>;
		turn Rfinger to x-axis <0.000000> speed <80.000000>;
		turn Rfinger1 to x-axis <0.000000> speed <80.000000>;
		turn Rfinger2 to x-axis <0.000000> speed <80.000000>;
		turn Rbackfing to x-axis <0.000000> speed <100.000000>;
		turn Lhileg to x-axis <10.000000> speed <4.000000>;
		turn Ldownleg to x-axis <10.000000> speed <30.000000>;
		turn Lfinger to x-axis <-18.000000> speed <16.659341>;
		turn Lfinger1 to x-axis <-18.000000> speed <16.659341>;
		turn Lfinger2 to x-axis <-18.000000> speed <16.659341>;
		turn Lbackfing to x-axis <-30.000000> speed <16.659341>;
		sleep 300;
		turn Lfinger to x-axis <40.000000> speed <80.000000>;
		turn Lfinger1 to x-axis <40.000000> speed <80.000000>;
		turn Lfinger2 to x-axis <40.000000> speed <80.000000>;
		turn Lbackfing to x-axis <-20.000000> speed <35.000000>;
		sleep 200;
		turn Lhileg to x-axis <-7.000000> speed <20.000000>;
		turn Lleg to x-axis <-28.000000> speed <48.000000>;
		turn Ldownleg to x-axis <15.000000> speed <21.000000>;
		turn Rhileg to x-axis <8.000000> speed <8.000000>;
		turn Rleg to x-axis <20.000000> speed <30.000000>;
		turn Rdownleg to x-axis <-5.000000> speed <15.000000>;
		turn Rfoot to x-axis <-15.000000> speed <15.000000>;
		turn Rfinger to x-axis <-13.000000> speed <13.000000>;
		turn Rfinger1 to x-axis <-13.000000> speed <13.000000>;
		turn Rfinger2 to x-axis <-13.000000> speed <13.000000>;
		turn Rbackfing to x-axis <-25.000000> speed <25.000000>;
		if( !bAiming )
		{
			turn ruparm to x-axis <-6.000000> speed <16.000000>;
			turn rhand to y-axis <5.000000> speed <5.000000>;
			turn lhand to y-axis <0.000000> speed <12.000000>;
			turn Rarm to x-axis <-10.000000> speed <10.000000>;
			turn luparm to x-axis <6.000000> speed <8.000000>;
			turn Larm to x-axis <9.000000> speed <12.000000>;
			turn torso to y-axis <-4.000000> speed <9.000000>;
			turn head to y-axis <-3.000000> speed <7.000000>;
			turn torso to z-axis <-2.000000> speed <2.000000>;
			move torso to y-axis [1.000000] speed [1.500000];
			move head to y-axis [1.500000] speed [1.875000];
		}
		sleep 800;
		if( !bAiming )
		{
			turn rhand to y-axis <15.000000> speed <15.000000>;
			turn Larm to x-axis <10.000000> speed <30.000000>;
			move torso to y-axis [0.000000] speed [0.750000];
			move head to y-axis [0.000000] speed [1.000000];
		}
		sleep 200;
		turn Lhileg to x-axis <0.000000> speed <14.000000>;
		turn Lleg to x-axis <-10.000000> speed <28.000000>;
		turn Ldownleg to x-axis <10.000000> speed <12.000000>;
		turn Lfoot to x-axis <0.000000> speed <5.000000>;
		turn Lfinger to x-axis <0.000000> speed <80.000000>;
		turn Lfinger1 to x-axis <0.000000> speed <80.000000>;
		turn Lfinger2 to x-axis <0.000000> speed <80.000000>;
		turn Lbackfing to x-axis <0.000000> speed <100.000000>;
		turn Rhileg to x-axis <10.000000> speed <4.000000>;
		turn Rdownleg to x-axis <10.000000> speed <30.000000>;
		turn Rfinger to x-axis <-18.000000> speed <16.659341>;
		turn Rfinger1 to x-axis <-18.000000> speed <16.659341>;
		turn Rfinger2 to x-axis <-18.000000> speed <16.659341>;
		turn Rbackfing to x-axis <-30.000000> speed <16.659341>;
		sleep 300;
		turn Rfinger to x-axis <40.000000> speed <80.000000>;
		turn Rfinger1 to x-axis <40.000000> speed <80.000000>;
		turn Rfinger2 to x-axis <40.000000> speed <80.000000>;
		turn Rbackfing to x-axis <-20.000000> speed <35.000000>;
		sleep 200;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	bMoving = TRUE;
	sleep 200;
	start-script Walk();
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	bMoving = FALSE;
	turn Rhileg to x-axis <0.000000> speed <40.000000>;
	turn Rleg to x-axis <0.000000> speed <60.000000>;
	turn Rdownleg to x-axis <0.000000> speed <50.000000>;
	turn Rfoot to x-axis <0.000000> speed <35.000000>;
	turn Rfinger to x-axis <0.000000> speed <60.000000>;
	turn Rfinger1 to x-axis <0.000000> speed <60.000000>;
	turn Rfinger2 to x-axis <0.000000> speed <60.000000>;
	turn Rbackfing to x-axis <0.000000> speed <60.000000>;
	turn Lhileg to x-axis <0.000000> speed <40.000000>;
	turn Lleg to x-axis <0.000000> speed <60.000000>;
	turn Ldownleg to x-axis <0.000000> speed <50.000000>;
	turn Lfoot to x-axis <0.000000> speed <35.000000>;
	turn Lfinger to x-axis <0.000000> speed <60.000000>;
	turn Lfinger1 to x-axis <0.000000> speed <60.000000>;
	turn Lfinger2 to x-axis <0.000000> speed <60.000000>;
	turn Lbackfing to x-axis <0.000000> speed <60.000000>;
	move head to x-axis [0.000000] speed [12.500000];
	move torso to x-axis [0.000000] speed [17.500000];
	turn torso to z-axis <0.000000> speed <9002.192308>;
	move head to y-axis [0.000000] speed [2.500000];
	if( !bAiming )
	{
		turn torso to y-axis <0.000000> speed <80.000000>;
		turn ruparm to x-axis <0.000000> speed <65.000000>;
		turn rhand to x-axis <0.000000> speed <60.000000>;
		turn head to y-axis <0.000000> speed <50.000000>;
		turn luparm to x-axis <0.000000> speed <65.000000>;
		turn lhand to x-axis <0.000000> speed <60.000000>;
		turn lhand to y-axis <0.000000> speed <50.000000>;
		turn rhand to y-axis <0.000000> speed <50.000000>;
		turn Rarm to y-axis <0.000000> speed <40.000000>;
		turn Larm to y-axis <0.000000> speed <40.000000>;
		turn Rarm to x-axis <0.000000> speed <30.000000>;
		turn Larm to x-axis <0.000000> speed <30.000000>;
	}
}


Shield()
{
	shield_onoff = !shield_onoff;
}


Create()
{
	gun_1 = 0;
	shield_onoff = 1;
	bMoving = FALSE;
	bAiming = FALSE;
	start-script SmokeUnit();
}

RestoreAfterDelay()
{

	sleep 500;
	spin lminigun1 around z-axis speed <500.0> accelerate <-100.0>;
	spin rminigun1 around z-axis speed <500.0> accelerate <-100.0>;
	spin lminigun2 around z-axis speed <500.0> accelerate <-100.0>;
	spin rminigun2 around z-axis speed <500.0> accelerate <-100.0>;
	
	sleep 350;
	spin lminigun1 around z-axis speed <350.0> accelerate <-75.0>;
	spin rminigun1 around z-axis speed <350.0> accelerate <-75.0>;
	spin lminigun2 around z-axis speed <350.0> accelerate <-75.0>;
	spin rminigun2 around z-axis speed <350.0> accelerate <-75.0>;
	
	sleep 350;
	spin lminigun1 around z-axis speed <150.0> accelerate <-50.0>;
	spin rminigun1 around z-axis speed <150.0> accelerate <-50.0>;
	spin lminigun2 around z-axis speed <150.0> accelerate <-50.0>;
	spin rminigun2 around z-axis speed <150.0> accelerate <-50.0>;
	
	sleep 350;
	spin lminigun1 around z-axis speed <0.0> accelerate <-25.0>;
	spin rminigun1 around z-axis speed <0.0> accelerate <-25.0>;
	spin lminigun2 around z-axis speed <0.0> accelerate <-25.0>;
	spin rminigun2 around z-axis speed <0.0> accelerate <-25.0>;
	
	sleep 4000;
	turn torso to y-axis <0.000000> speed <45.000000>;
	turn ruparm to x-axis <0.000000> speed <60.000000>;
	turn luparm to x-axis <0.000000> speed <60.000000>;
	turn lhand to y-axis <0.000000> speed <40.000000>;
	turn rhand to y-axis <0.000000> speed <40.000000>;
	turn ruparmhold to x-axis <0.000000> speed <60.000000>;
	turn luparmhold to x-axis <0.000000> speed <60.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn lhand around y-axis;
	wait-for-turn ruparmhold around x-axis;
	bAiming = FALSE;	
}

RestoreHead()
{
	sleep 5000;
	turn head to y-axis <0.000000> speed <45.000000>;
	wait-for-turn head around y-axis;
}


// Head

QueryWeapon1(piecenum)
{
	if( gun_1 )
	{
		piecenum = Lheadflare;
	}
	else
	{
		piecenum = Rheadflare;
	}
}

AimFromWeapon1(piecenum)
{
	piecenum = head;
}

AimWeapon1(heading, pitch)
{
	signal SIG_AIM_1;
	set-signal-mask SIG_AIM_1;
	turn head to y-axis heading speed <45.000000>;
	wait-for-turn head around y-axis;
	start-script RestoreHead();
	return (1);
}

FireWeapon1()
{
	gun_1 = !gun_1;
}

AimFromWeapon2(piecenum)
{
	piecenum = torso;
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	bAiming = TRUE;
	turn torso to y-axis heading speed <45.000000>;
	turn ruparm to x-axis <0.000000> - pitch speed <45.000000>;
	turn luparm to x-axis <0.000000> - pitch speed <45.000000>;
	turn ruparmhold to x-axis <0.000000> speed <45.000000>;
	turn luparmhold to x-axis <0.000000> speed <45.000000>;
	turn rhand to y-axis <0.000000> speed <45.000000>;
	turn lhand to y-axis <0.000000> speed <45.000000>;
	turn rhand to x-axis <0.000000> speed <45.000000>;
	turn lhand to x-axis <0.000000> speed <45.000000>;
	turn Larm to x-axis <0.000000> speed <45.000000>;
	turn Rarm to x-axis <0.000000> speed <45.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn ruparmhold around x-axis;
	wait-for-turn luparmhold around x-axis;
	wait-for-turn lhand around y-axis;
	wait-for-turn rhand around y-axis;
	wait-for-turn Larm around x-axis;
	wait-for-turn Rarm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn ruparmhold around x-axis;
	wait-for-turn luparmhold around x-axis;
	wait-for-turn lhand around y-axis;
	wait-for-turn rhand around y-axis;
	wait-for-turn Larm around x-axis;
	wait-for-turn Rarm around x-axis;
	return (1);
}

AimWeapon4(heading, pitch)
{
	signal SIG_AIM_4;
	set-signal-mask SIG_AIM_4;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn ruparmhold around x-axis;
	wait-for-turn luparmhold around x-axis;
	wait-for-turn lhand around y-axis;
	wait-for-turn rhand around y-axis;
	wait-for-turn Larm around x-axis;
	wait-for-turn Rarm around x-axis;
	return (1);
}

AimWeapon5(heading, pitch)
{
	signal SIG_AIM_5;
	set-signal-mask SIG_AIM_5;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn ruparmhold around x-axis;
	wait-for-turn luparmhold around x-axis;
	wait-for-turn lhand around y-axis;
	wait-for-turn rhand around y-axis;
	wait-for-turn Larm around x-axis;
	wait-for-turn Rarm around x-axis;
	return (1);
}

FireWeapon2()
{
	emit-sfx 1024 + 0 from rflare1;
	spin rminigun1 around z-axis speed <750.0>;
}

FireWeapon3()
{
	emit-sfx 1024 + 0 from lflare1;
	spin lminigun1 around z-axis speed <750.0>;
}

FireWeapon4()
{
	emit-sfx 1024 + 0 from rflare2;
	spin rminigun2 around z-axis speed <750.0>;
}

FireWeapon5()
{
	emit-sfx 1024 + 0 from lflare2;
	spin lminigun2 around z-axis speed <750.0>;
}

QueryWeapon2(piecenum)
{
	piecenum = rflare1;
}

QueryWeapon3(piecenum)
{
	piecenum = lflare1;
}

QueryWeapon4(piecenum)
{
	piecenum = rflare2;
}

QueryWeapon5(piecenum)
{
	piecenum = lflare2;
}

AimWeapon6(heading, pitch)
{
	return (shield_onoff);
}

AimFromWeapon6(piecenum)
{
	piecenum = shield_pos;
}

QueryWeapon6(piecenum)
{
	piecenum = shield_pos;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode torso type NOHEATCLOUD;
		explode ruparm type NOHEATCLOUD;
		explode Rarm type NOHEATCLOUD;
		explode rhand type NOHEATCLOUD;
		explode Rweapon type NOHEATCLOUD | SHATTER;
		explode luparm type NOHEATCLOUD;
		explode Larm type NOHEATCLOUD;
		explode lhand type NOHEATCLOUD;
		explode Lweapon type NOHEATCLOUD;
		explode pelvis type NOHEATCLOUD;
		explode Rhileg type NOHEATCLOUD;
		explode Rleg type NOHEATCLOUD;
		explode Rdownleg type NOHEATCLOUD;
		explode Rfoot type NOHEATCLOUD;
		explode Rbackfing type NOHEATCLOUD;
		explode Rfinger type NOHEATCLOUD;
		explode Rfinger1 type NOHEATCLOUD;
		explode Rfinger2 type NOHEATCLOUD;
		explode Lhileg type NOHEATCLOUD;
		explode Lleg type NOHEATCLOUD;
		explode Ldownleg type NOHEATCLOUD;
		explode Lfoot type NOHEATCLOUD;
		explode Lbackfing type NOHEATCLOUD;
		explode Lfinger type NOHEATCLOUD;
		explode Lfinger1 type NOHEATCLOUD;
		explode Lfinger2 type NOHEATCLOUD;
		explode head type NOHEATCLOUD;
		explode Raim type NOHEATCLOUD;
		explode Rbarrl type NOHEATCLOUD;
		explode Rheadflare type NOHEATCLOUD;
		explode Laim type NOHEATCLOUD;
		explode Lbarrl type NOHEATCLOUD;
		explode Lheadflare type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode torso type NOHEATCLOUD | SHATTER;
		explode ruparm type NOHEATCLOUD | SHATTER;
		explode Rarm type NOHEATCLOUD | SHATTER;
		explode rhand type NOHEATCLOUD | SHATTER;
		explode Rweapon type NOHEATCLOUD | SHATTER;
		explode luparm type NOHEATCLOUD | SHATTER;
		explode Larm type NOHEATCLOUD | SHATTER;
		explode lhand type NOHEATCLOUD | SHATTER;
		explode Lweapon type NOHEATCLOUD | SHATTER;
		explode pelvis type NOHEATCLOUD | SHATTER;
		explode Rhileg type NOHEATCLOUD | SHATTER;
		explode Rleg type NOHEATCLOUD | SHATTER;
		explode Rdownleg type NOHEATCLOUD | SHATTER;
		explode Rfoot type NOHEATCLOUD | SHATTER;
		explode Rbackfing type NOHEATCLOUD | SHATTER;
		explode Rfinger type NOHEATCLOUD | SHATTER;
		explode Rfinger1 type NOHEATCLOUD | SHATTER;
		explode Rfinger2 type NOHEATCLOUD | SHATTER;
		explode Lhileg type NOHEATCLOUD | SHATTER;
		explode Lleg type NOHEATCLOUD | SHATTER;
		explode Ldownleg type NOHEATCLOUD | SHATTER;
		explode Lfoot type NOHEATCLOUD | SHATTER;
		explode Lbackfing type NOHEATCLOUD | SHATTER;
		explode Lfinger type NOHEATCLOUD | SHATTER;
		explode Lfinger1 type NOHEATCLOUD | SHATTER;
		explode Lfinger2 type NOHEATCLOUD | SHATTER;
		explode head type NOHEATCLOUD | SHATTER;
		explode Raim type NOHEATCLOUD | SHATTER;
		explode Rbarrl type NOHEATCLOUD | SHATTER;
		explode Rheadflare type NOHEATCLOUD | SHATTER;
		explode Laim type NOHEATCLOUD | SHATTER;
		explode Lbarrl type NOHEATCLOUD | SHATTER;
		explode Lheadflare type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	corpsetype = 3;
	explode torso type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode ruparm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rarm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rhand type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rweapon type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode luparm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Larm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lhand type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lweapon type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode pelvis type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rhileg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rdownleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rbackfing type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rfinger type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rfinger1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rfinger2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lhileg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Ldownleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lbackfing type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lfinger type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lfinger1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lfinger2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode head type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Raim type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rbarrl type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rheadflare type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Laim type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lbarrl type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lheadflare type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
