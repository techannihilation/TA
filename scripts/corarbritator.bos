#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, legs, rupleg1, rupleg2, rupleg3, lupleg1, lupleg2, lupleg3,
	   butt, top, emit;

static-var  moving, turning;

// Signal definitions
#define SIG_AIM			2
#define SIG_MOVE		32


walk()
{
	if(( moving || turning ))
	{
		turn rupleg1 to y-axis <0> speed <50>;
		turn rupleg1 to z-axis <0> speed <50>;
		turn rupleg2 to z-axis <15> speed <50>;
		turn rupleg3 to y-axis <16.5> speed <50>;
		turn rupleg3 to z-axis <0> speed <50>;
		turn lupleg1 to y-axis <-19.5> speed <50>;
		turn lupleg1 to z-axis <0> speed <50>;
		turn lupleg2 to y-axis <0> speed <50>;
		turn lupleg2 to z-axis <0> speed <50>;
		turn lupleg3 to y-axis <-14.5> speed <50>;
		turn lupleg3 to z-axis <-22.5> speed <50>;
		sleep 120;
	}
	if(( moving || turning ))
	{
		turn rupleg2 to y-axis <16.5> speed <50>;
		turn rupleg2 to z-axis <15> speed <50>;
		turn lupleg1 to y-axis <0> speed <50>;
		turn lupleg2 to z-axis <-15> speed <50>;
		turn lupleg3 to z-axis <1> speed <50>;
		turn rupleg1 to z-axis <15> speed <50>;
		turn rupleg3 to y-axis <0> speed <50>;
		turn rupleg3 to z-axis <0> speed <50>;
		sleep 120;
	}
	if(( moving || turning ))
	{
		turn lupleg2 to y-axis <-15> speed <50>;
		turn lupleg2 to z-axis <-15> speed <50>;
		turn lupleg3 to y-axis <1.5> speed <50>;
		turn rupleg2 to y-axis <16.5> speed <50>;
		turn rupleg2 to z-axis <0> speed <50>;
		turn rupleg3 to z-axis <15> speed <50>;
		turn rupleg1 to y-axis <27> speed <50>;
		turn rupleg1 to z-axis <15> speed <50>;
		turn lupleg1 to y-axis <0> speed <50>;
		turn lupleg1 to z-axis <-15> speed <50>;
		sleep 120;
	}
	if(( moving || turning ))
	{
		turn lupleg2 to y-axis <-18> speed <50>;
		turn lupleg2 to z-axis <0> speed <50>;
		turn lupleg3 to y-axis <0> speed <50>;
		turn lupleg3 to z-axis <-22.5> speed <50>;
		turn rupleg2 to y-axis <0> speed <50>;
		turn rupleg2 to z-axis <0> speed <50>;
		turn rupleg3 to y-axis <16.5> speed <50>;
		turn rupleg1 to y-axis <21> speed <50>;
		turn rupleg1 to z-axis <0> speed <50>;
		turn rupleg3 to z-axis <15> speed <50>;
		turn lupleg1 to y-axis <-19.5> speed <50>;
		turn lupleg1 to z-axis <-15> speed <50>;
		sleep 120;
	}
}

MotionControl(Func_Var_1)
{
	var preang;
	var ang;
	while( TRUE )
	{
		ang = get XZ_ATAN(-419);
		turning = 0;
		if (ang != preang)
		{
			turning = 1;
		}
		sleep 100;
		preang = ang;
		
		Func_Var_1 = moving;
		if( Func_Var_1 )
		{
			call-script walk();
		}
		if( !Func_Var_1 )
		{
			sleep 100;
		}
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	moving = 0;
	turning = 0;
	start-script SmokeUnit();
}

StartMoving()
{
	moving=1;
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
}


StopMoving()
{
	moving=0;
	signal SIG_MOVE;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	return (1);
}

FirePrimary()
{

}

QueryPrimary(piecenum)
{
	piecenum = emit;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		explode lupleg1 type  NOHEATCLOUD;
		explode lupleg2 type NOHEATCLOUD;
		explode lupleg3 type NOHEATCLOUD;
		explode rupleg1 type NOHEATCLOUD;
		explode rupleg2 type NOHEATCLOUD;
		explode rupleg3 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD;
		explode lupleg1 type FALL | NOHEATCLOUD;
		explode lupleg2 type FALL | NOHEATCLOUD;
		explode lupleg3 type FALL | NOHEATCLOUD;
		explode rupleg1 type FALL | NOHEATCLOUD;
		explode rupleg2 type FALL | NOHEATCLOUD;
		explode rupleg3 type FALL | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD;
	explode lupleg1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lupleg2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lupleg3 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rupleg1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rupleg2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rupleg3 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	return (corpsetype);
}
