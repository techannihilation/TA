#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  missle1, missle2, base, body, winga, wingb, wingc, wingd,
       topa, topb;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4;


activatescr()
{
	if( TRUE )
	{
		show wingc;
		show wingd;
		turn winga to z-axis <0.> speed <60.>;
		turn wingb to z-axis <0.> speed <60.>;
		turn wingc to y-axis <0.> speed <30.>;
		turn wingd to y-axis <0.> speed <30.>;
		wait-for-turn wingb around z-axis;
		wait-for-turn wingc around y-axis;
		hide topa;
		hide topb;
		turn body to z-axis <240.> speed <120.>;
		wait-for-turn body around z-axis;
		turn body to z-axis <120.> speed <180.>;
		wait-for-turn body around z-axis;
		turn body to z-axis <0.> speed <120.>;
		sleep 1000;
	}
	sleep 23;
}

deactivatescr()
{
	if( TRUE )
	{
		show topa;
		show topb;
		turn winga to z-axis <-135.> speed <60.>;
		turn wingb to z-axis <135.> speed <60.>;
		turn wingc to y-axis <-63.> speed <30.>;
		turn wingd to y-axis <63.> speed <30.>;
		wait-for-turn wingb around z-axis;
		wait-for-turn wingc around y-axis;
		hide wingc;
		hide wingd;
		sleep 1445;
	}
	sleep 24;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

InitState()
{
	Static_Var_3 = 1;
	Static_Var_4 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_4 )
	{
		Static_Var_3 = requestedstate;
		return (0);
	}
	Static_Var_4 = 1;
	currentstate = Static_Var_3;
	Static_Var_3 = requestedstate;
	while( Static_Var_3 != currentstate )
	{
		if( Static_Var_3 == 0 )
		{
			call-script activatescr();
			currentstate = 0;
		}
		if( Static_Var_3 == 1 )
		{
			call-script deactivatescr();
			currentstate = 1;
		}
	}
	Static_Var_4 = 0;
}

MoveRate2()
{
	if( Rand( 1, 10 ) == 1 AND !Static_Var_1 )
	{
		Static_Var_1 = 1;
		turn base to z-axis <240.> speed <120.>;
		wait-for-turn base around z-axis;
		turn base to z-axis <120.> speed <180.>;
		wait-for-turn base around z-axis;
		turn base to z-axis <0.> speed <120.>;
		Static_Var_1 = 0;
	}
}

Create()
{
	Static_Var_1 = 0;
	Static_Var_2 = 0;
	call-script InitState();
	start-script SmokeUnit();
	hide topa;
	hide topb;
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

FirePrimary(Func_Var_1)
{
	Static_Var_2 = !Static_Var_2;
}

QueryPrimary(piecenum)
{
	piecenum = Static_Var_2;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode missle1 type NOHEATCLOUD;
		explode missle2 type NOHEATCLOUD;
		explode winga type NOHEATCLOUD;
		explode wingb type NOHEATCLOUD;
		explode wingc type NOHEATCLOUD;
		explode wingd type NOHEATCLOUD;
		explode body type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode topa type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode topb type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD;
		explode missle1 type NOHEATCLOUD;
		explode missle2 type NOHEATCLOUD;
		explode winga type NOHEATCLOUD;
		explode wingb type NOHEATCLOUD;
		explode wingc type NOHEATCLOUD;
		explode wingd type NOHEATCLOUD;
		explode body type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode topa type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode topb type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD;
		explode missle1 type NOHEATCLOUD;
		explode missle2 type NOHEATCLOUD;
		explode winga type NOHEATCLOUD;
		explode wingb type NOHEATCLOUD;
		explode wingc type NOHEATCLOUD;
		explode wingd type NOHEATCLOUD;
		explode body type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode topa type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode topb type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD;
	explode missle1 type NOHEATCLOUD;
	explode missle2 type NOHEATCLOUD;
	explode winga type NOHEATCLOUD;
	explode wingb type NOHEATCLOUD;
	explode wingc type NOHEATCLOUD;
	explode wingd type NOHEATCLOUD;
	explode body type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode topa type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode topb type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	return (corpsetype);
