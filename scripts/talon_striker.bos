#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  gun1, gun2, turret, flare1, flare2, torso, rshoulder, lshoulder,
       pelvis, lthigh, rthigh, rknee, rfoot, lknee, lfoot, lelbow,
       lhand, relbow, rhand, base;

static-var  Static_Var_1, Static_Var_2;


walk()
{
	while( TRUE )
	{
		if( TRUE )
		{
			move torso to y-axis [0.] speed [1.];
			move rshoulder to y-axis [0.] speed [1.];
			move rshoulder to z-axis [0.] now;
			move lshoulder to y-axis [-0.] speed [2.];
			move lshoulder to z-axis [0.] speed [2.];
			turn pelvis to z-axis <-4.> speed <14.>;
			turn torso to z-axis <5.> speed <32.>;
			turn lthigh to x-axis <54.> speed <44.>;
			turn rthigh to x-axis <0.> speed <208.>;
			turn rknee to x-axis <43.> speed <30.>;
			turn rfoot to x-axis <-32.> speed <330.>;
			turn lknee to x-axis <7.> speed <62.>;
			turn lfoot to x-axis <-12.> speed <40.>;
			turn lshoulder to x-axis <-71.> speed <250.>;
			turn lelbow to x-axis <41.> speed <480.>;
			turn lhand to x-axis <36.> speed <420.>;
			turn rshoulder to x-axis <20.> speed <15.>;
			turn relbow to x-axis <9.> speed <92.>;
			turn rhand to x-axis <-17.> speed <95.>;
			sleep 130 / 1;
		}
		if( TRUE )
		{
			move torso to y-axis [0.] speed [1.];
			move rshoulder to y-axis [1.] speed [5.];
			move rshoulder to z-axis [-0.] speed [3.];
			move lshoulder to y-axis [0.] speed [2.];
			move lshoulder to z-axis [0.] speed [1.];
			turn pelvis to z-axis <-2.> speed <10.>;
			turn torso to z-axis <2.> speed <25.>;
			turn lthigh to x-axis <67.> speed <115.>;
			turn rthigh to x-axis <7.> speed <55.>;
			turn rknee to x-axis <-29.> speed <580.>;
			turn rfoot to x-axis <17.> speed <385.>;
			turn lknee to x-axis <-6.> speed <115.>;
			turn lfoot to x-axis <0.> speed <92.>;
			turn lshoulder to x-axis <-49.> speed <155.>;
			turn lelbow to x-axis <14.> speed <60.>;
			turn lhand to x-axis <16.> speed <155.>;
			turn rshoulder to x-axis <11.> speed <70.>;
			turn relbow to x-axis <0.> speed <70.>;
			turn rhand to x-axis <117.> speed <1038.>;
			sleep 130 / 1;
		}
		if( TRUE )
		{
			move torso to y-axis [0.] speed [2.];
			move rshoulder to z-axis [-0.] speed [2.];
			move lshoulder to z-axis [0.] speed [2.];
			turn pelvis to z-axis <-1.> speed <10.>;
			turn torso to z-axis <-1.> speed <28.>;
			turn lthigh to x-axis <71.> speed <30.>;
			turn rthigh to x-axis <9.> speed <23.>;
			turn rknee to x-axis <11.> speed <315.>;
			turn rfoot to x-axis <-10.> speed <210.>;
			turn lknee to x-axis <0.> speed <47.>;
			turn lfoot to x-axis <21.> speed <160.>;
			turn lshoulder to x-axis <0.> speed <280.>;
			turn lelbow to x-axis <0.> speed <105.>;
			turn lhand to x-axis <0.> speed <123.>;
			turn rshoulder to x-axis <-29.> speed <194.>;
			turn relbow to x-axis <-29.> speed <223.>;
			turn rhand to x-axis <149.> speed <255.>;
			sleep 130 / 1;
		}
		if( TRUE )
		{
			move torso to y-axis [0.] speed [1.];
			move rshoulder to z-axis [0.] speed [2.];
			turn pelvis to z-axis <2.> speed <24.>;
			turn torso to z-axis <-5.> speed <28.>;
			turn lthigh to x-axis <1.> speed <385.>;
			turn rthigh to x-axis <41.> speed <125.>;
			turn rknee to x-axis <4.> speed <54.>;
			turn rfoot to x-axis <-15.> speed <38.>;
			turn lknee to x-axis <56.> speed <430.>;
			turn lfoot to x-axis <1.> speed <170.>;
			turn rshoulder to x-axis <-41.> speed <92.>;
			turn relbow to x-axis <-41.> speed <92.>;
			turn rhand to x-axis <90.> speed <461.>;
			turn lshoulder to x-axis <18.> speed <138.>;
			turn lelbow to x-axis <-3.> speed <25.>;
			turn lhand to x-axis <-5.> speed <42.>;
			sleep 130 / 1;
		}
		if( TRUE )
		{
			move torso to y-axis [0.] speed [2.];
			move rshoulder to y-axis [-0.] speed [2.];
			move rshoulder to z-axis [0.] speed [2.];
			turn pelvis to z-axis <4.> speed <10.>;
			turn torso to z-axis <-5.> speed <4.>;
			turn lthigh to x-axis <-16.> speed <115.>;
			turn rthigh to x-axis <56.> speed <155.>;
			turn rfoot to x-axis <-9.> speed <39.>;
			turn lknee to x-axis <55.> now;
			turn lfoot to x-axis <-22.> speed <155.>;
			turn lshoulder to x-axis <20.> speed <15.>;
			turn lelbow to x-axis <9.> speed <92.>;
			turn lhand to x-axis <-17.> speed <95.>;
			turn rshoulder to x-axis <-71.> speed <230.>;
			turn relbow to x-axis <41.> speed <480.>;
			turn rhand to x-axis <36.> speed <420.>;
			sleep 130 / 1;
		}
		if( TRUE )
		{
			move torso to y-axis [0.] speed [1.];
			move rshoulder to y-axis [0.] speed [2.];
			move rshoulder to z-axis [0.] speed [1.];
			move lshoulder to y-axis [1.] speed [5.];
			turn pelvis to z-axis <2.> speed <11.>;
			turn torso to z-axis <-2.> speed <17.>;
			turn lthigh to x-axis <0.> speed <143.>;
			turn rthigh to x-axis <66.> speed <105.>;
			turn rfoot to x-axis <6.> speed <115.>;
			turn lknee to x-axis <0.> speed <423.>;
			turn lfoot to x-axis <0.> speed <170.>;
			turn lshoulder to x-axis <11.> speed <70.>;
			turn lelbow to x-axis <0.> speed <70.>;
			turn lhand to x-axis <117.> speed <1038.>;
			turn rshoulder to x-axis <-49.> speed <155.>;
			turn relbow to x-axis <14.> speed <60.>;
			turn rhand to x-axis <16.> speed <155.>;
			sleep 130 / 1;
		}
		if( TRUE )
		{
			move torso to y-axis [0.] speed [2.];
			move rshoulder to z-axis [0.] speed [2.];
			move lshoulder to y-axis [1.] speed [1.];
			turn pelvis to z-axis <1.> speed <10.>;
			turn torso to z-axis <1.> speed <28.>;
			turn lthigh to x-axis <11.> speed <85.>;
			turn rthigh to x-axis <60.> speed <115.>;
			turn rfoot to x-axis <11.> speed <38.>;
			turn lknee to x-axis <13.> speed <100.>;
			turn lfoot to x-axis <-15.> speed <115.>;
			turn lshoulder to x-axis <-9.> speed <154.>;
			turn lelbow to x-axis <-29.> speed <223.>;
			turn lhand to x-axis <149.> speed <255.>;
			turn rshoulder to x-axis <0.> speed <300.>;
			turn relbow to x-axis <0.> speed <105.>;
			turn rhand to x-axis <0.> speed <123.>;
			sleep 130 / 1;
		}
		move torso to y-axis [0.] speed [1.];
		move rshoulder to z-axis [0.] speed [1.];
		move lshoulder to y-axis [0.] speed [5.];
		turn pelvis to z-axis <-2.> speed <21.>;
		turn torso to z-axis <5.> speed <31.>;
		turn lthigh to x-axis <57.> speed <300.>;
		turn rthigh to x-axis <27.> speed <255.>;
		turn rknee to x-axis <39.> speed <142.>;
		turn lknee to x-axis <-0.> speed <104.>;
		turn lfoot to x-axis <-17.> speed <15.>;
		turn lshoulder to x-axis <-41.> speed <192.>;
		turn lelbow to x-axis <-41.> speed <92.>;
		turn lhand to x-axis <90.> speed <461.>;
		turn rshoulder to x-axis <18.> speed <138.>;
		turn relbow to x-axis <-3.> speed <25.>;
		turn rhand to x-axis <-5.> speed <42.>;
		sleep 130 / 1;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flare1;
	hide flare2;
	dont-cache flare1;
	dont-cache flare2;
	Static_Var_2 = 0;
	Static_Var_1 = 3000;
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	Static_Var_1 = Func_Var_1 * 2;
}

StartMoving()
{
	signal 2;
	set-signal-mask 2;
	start-script walk();
}

StopMoving()
{
	signal 2;
	move torso to y-axis [0.] speed [2.];
	move rshoulder to z-axis [0.] speed [1.];
	move lshoulder to y-axis [0.] speed [1.];
	turn pelvis to z-axis <0.> speed <10.>;
	turn torso to z-axis <0.> speed <28.>;
	turn lthigh to x-axis <0.> speed <85.>;
	turn rthigh to x-axis <0.> speed <115.>;
	turn rfoot to x-axis <0.> speed <38.>;
	turn lknee to x-axis <0.> speed <100.>;
	turn lfoot to x-axis <0.> speed <115.>;
	turn rshoulder to x-axis <0.> speed <300.>;
	turn lshoulder to x-axis <0.> speed <154.>;
	turn lelbow to x-axis <0.> speed <223.>;
	turn lhand to x-axis <0.> speed <255.>;
	turn relbow to x-axis <0.> speed <155.>;
	turn rhand to x-axis <0.> speed <105.>;
}

SweetSpot(piecenum)
{
	piecenum = gun1;
}

RestoreAfterDelay()
{
	sleep Static_Var_1;
	turn turret to y-axis <0.> speed <90.>;
	turn turret to x-axis <0.> speed <50.>;
	turn gun2 to x-axis <0.> speed <50.>;
	wait-for-turn turret around y-axis;
	wait-for-turn gun2 around x-axis;
}

AimPrimary(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	turn turret to y-axis heading speed <270.>;
	turn turret to x-axis <0.> - pitch speed <100.>;
	wait-for-turn turret around y-axis;
	wait-for-turn turret around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( Static_Var_2 )
	{
		show flare1;
		move gun1 to z-axis [-2.] speed [500.];
		sleep 200;
		move gun1 to z-axis [0.] speed [2.];
		hide flare1;
	}
	if( !Static_Var_2 )
	{
		show flare2;
		move gun2 to z-axis [-2.] speed [500.];
		sleep 200;
		move gun2 to z-axis [0.] speed [2.];
		hide flare2;
	}
	Static_Var_2 = 1 - Static_Var_2;
}

QueryPrimary(piecenum)
{
	if( Static_Var_2 )
	{
		piecenum = flare1;
	}
	if( !Static_Var_2 )
	{
		piecenum = flare2;
	}
}

Killed(severity, corpsetype)
{
	hide flare1;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode flare1 type NOHEATCLOUD;
		explode gun1 type NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode lfoot type NOHEATCLOUD;
		explode lhand type NOHEATCLOUD;
		explode lknee type NOHEATCLOUD;
		explode lelbow type NOHEATCLOUD;
		explode lthigh type NOHEATCLOUD;
		explode lshoulder type NOHEATCLOUD;
		explode pelvis type NOHEATCLOUD;
		explode rfoot type NOHEATCLOUD;
		explode rhand type NOHEATCLOUD;
		explode rknee type NOHEATCLOUD;
		explode relbow type NOHEATCLOUD;
		explode rthigh type NOHEATCLOUD;
		explode rshoulder type NOHEATCLOUD;
		explode torso type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode flare1 type FALL | NOHEATCLOUD;
		explode gun1 type SHATTER | NOHEATCLOUD;
		explode base type FALL | NOHEATCLOUD;
		explode lfoot type FALL | NOHEATCLOUD;
		explode lhand type FALL | NOHEATCLOUD;
		explode lknee type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode lelbow type FALL | NOHEATCLOUD;
		explode lthigh type FALL | NOHEATCLOUD;
		explode lshoulder type FALL | NOHEATCLOUD;
		explode pelvis type  NOHEATCLOUD;
		explode rfoot type FALL | NOHEATCLOUD;
		explode rhand type FALL | NOHEATCLOUD;
		explode rknee type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode relbow type FALL | NOHEATCLOUD;
		explode rthigh type FALL | NOHEATCLOUD;
		explode rshoulder type FALL | NOHEATCLOUD;
		explode torso type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode flare1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode gun1 type SHATTER | NOHEATCLOUD;
		explode base type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode lhand type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode lknee type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode lelbow type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode lshoulder type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode pelvis type NOHEATCLOUD;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode rhand type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode rknee type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode relbow type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode rshoulder type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode torso type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode flare1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode gun1 type SHATTER | NOHEATCLOUD;
	explode base type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lhand type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lknee type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lelbow type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lshoulder type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode pelvis type NOHEATCLOUD;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rhand type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rknee type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode relbow type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rshoulder type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode torso type NOHEATCLOUD;
	explode turret type NOHEATCLOUD;
	return (corpsetype);
}