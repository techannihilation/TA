#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, hip, torso, luparm, larm, lgun, lflare, ruparm,
       rarm, rgun, rflare, gunsar, ported, porteg, missil, mlunch,
       rthigh, rleg, rtoes, lthigh, lleg, ltoes, head;

static-var  bMoving, bAiming, Static_Var_3, Static_Var_4, Static_Var_5,
            restore_delay, gun_1;

// Signal definitions
#define SIG_AIM				4


walk()
{
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn hip to x-axis <6.000000> now;
		turn torso to y-axis <-5.000000> now;
		turn rthigh to x-axis <0.000000> now;
		turn lthigh to x-axis <16.000000> now;
		turn lleg to x-axis <80.016484> now;
		turn rleg to x-axis <26.005495> now;
		turn rtoes to x-axis <-25.005495> now;
		turn ruparm to x-axis <14.000000> now;
		turn luparm to x-axis <-2.000000> now;
		turn larm to x-axis <-100.016484> now;
		turn lgun to y-axis <-48.005495> now;
		turn rarm to x-axis <-82.016484> now;
		sleep 60;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn torso to y-axis <-3.000000> now;
		turn rthigh to x-axis <9.000000> now;
		turn lthigh to x-axis <3.000000> now;
		turn lleg to x-axis <116.027473> now;
		turn rleg to x-axis <13.000000> now;
		turn rtoes to x-axis <-23.005495> now;
		turn ruparm to x-axis <7.000000> now;
		turn luparm to x-axis <3.000000> now;
		turn larm to x-axis <-93.016484> now;
		turn lgun to y-axis <-48.005495> now;
		turn rarm to x-axis <-80.016484> now;
		sleep 70;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn torso to y-axis <0.000000> now;
		turn rthigh to x-axis <14.000000> now;
		turn lthigh to x-axis <-19.000000> now;
		turn rleg to x-axis <17.000000> now;
		turn rtoes to x-axis <-19.000000> now;
		turn ruparm to x-axis <0.000000> now;
		turn luparm to x-axis <18.000000> now;
		turn larm to x-axis <-84.016484> now;
		turn lgun to y-axis <-48.005495> now;
		sleep 60;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn torso to y-axis <3.000000> now;
		turn rthigh to x-axis <21.000000> now;
		turn lthigh to x-axis <-40.005495> now;
		turn lleg to x-axis <108.016484> now;
		turn ruparm to x-axis <-8.000000> now;
		turn luparm to x-axis <26.005495> now;
		turn lgun to y-axis <-48.005495> now;
		sleep 50;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn torso to y-axis <5.000000> now;
		turn rthigh to x-axis <23.005495> now;
		turn lthigh to x-axis <-54.005495> now;
		turn lleg to x-axis <80.016484> now;
		turn ruparm to x-axis <-31.005495> now;
		turn luparm to x-axis <35.005495> now;
		turn larm to x-axis <-74.016484> now;
		sleep 40;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn torso to y-axis <7.000000> now;
		turn rthigh to x-axis <29.005495> now;
		turn lthigh to x-axis <-43.005495> now;
		turn lleg to x-axis <34.005495> now;
		turn ltoes to x-axis <-7.000000> now;
		turn rleg to x-axis <46.005495> now;
		turn rtoes to x-axis <-12.000000> now;
		turn ruparm to x-axis <-40.005495> now;
		turn luparm to x-axis <45.005495> now;
		turn larm to x-axis <-73.016484> now;
		turn lgun to y-axis <-42.005495> now;
		sleep 30;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn torso to y-axis <8.000000> now;
		turn rthigh to x-axis <18.000000> now;
		turn lthigh to x-axis <-41.005495> now;
		turn lleg to x-axis <46.005495> now;
		turn ltoes to x-axis <-11.000000> now;
		turn rleg to x-axis <84.016484> now;
		turn ruparm to x-axis <-31.005495> now;
		turn luparm to x-axis <69.016484> now;
		turn larm to x-axis <-84.016484> now;
		turn lgun to y-axis <-36.005495> now;
		sleep 40;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn hip to x-axis <6.000000> now;
		turn torso to y-axis <7.000000> now;
		turn rthigh to x-axis <12.000000> now;
		turn lthigh to x-axis <-33.005495> now;
		turn ltoes to x-axis <-17.000000> now;
		turn rleg to x-axis <90.016484> now;
		turn ruparm to x-axis <-22.000000> now;
		turn luparm to x-axis <48.005495> now;
		turn lgun to y-axis <-29.005495> now;
		sleep 50;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn hip to x-axis <6.000000> now;
		turn torso to y-axis <5.000000> now;
		turn rthigh to x-axis <2.000000> now;
		turn lthigh to x-axis <-22.000000> now;
		turn ltoes to x-axis <-24.005495> now;
		turn rleg to x-axis <99.016484> now;
		turn ruparm to x-axis <-17.000000> now;
		turn luparm to x-axis <30.005495> now;
		turn lgun to y-axis <-28.005495> now;
		sleep 60;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn torso to y-axis <3.000000> now;
		turn rthigh to x-axis <-16.000000> now;
		turn lthigh to x-axis <-3.000000> now;
		turn lleg to x-axis <31.005495> now;
		turn ltoes to x-axis <-25.005495> now;
		turn rleg to x-axis <111.016484> now;
		turn ruparm to x-axis <-11.000000> now;
		turn luparm to x-axis <18.000000> now;
		turn lgun to y-axis <-32.005495> now;
		sleep 70;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn torso to y-axis <0.000000> now;
		turn rthigh to x-axis <-31.005495> now;
		turn lthigh to x-axis <4.000000> now;
		turn lleg to x-axis <24.005495> now;
		turn ltoes to x-axis <-14.000000> now;
		turn ruparm to x-axis <-2.000000> now;
		turn luparm to x-axis <5.000000> now;
		turn lgun to y-axis <-44.005495> now;
		sleep 60;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn torso to y-axis <-3.000000> now;
		turn rthigh to x-axis <-45.005495> now;
		turn lthigh to x-axis <12.000000> now;
		turn lleg to x-axis <29.005495> now;
		turn ltoes to x-axis <-20.000000> now;
		turn ruparm to x-axis <8.000000> now;
		turn luparm to x-axis <0.000000> now;
		turn lgun to y-axis <-45.005495> now;
		sleep 50;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn torso to y-axis <-5.000000> now;
		turn rthigh to x-axis <-49.005495> now;
		turn lthigh to x-axis <17.000000> now;
		turn ltoes to x-axis <-12.000000> now;
		turn rleg to x-axis <62.005495> now;
		turn ruparm to x-axis <19.000000> now;
		turn luparm to x-axis <-12.000000> now;
		turn lgun to y-axis <-48.005495> now;
		sleep 40;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] - [0.000031] now;
		turn torso to y-axis <-7.000000> now;
		turn lthigh to x-axis <24.005495> now;
		turn rleg to x-axis <37.005495> now;
		turn ruparm to x-axis <31.005495> now;
		turn luparm to x-axis <-16.000000> now;
		turn larm to x-axis <-90.016484> now;
		turn lgun to y-axis <-48.005495> now;
		sleep 30;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn torso to y-axis <-8.000000> now;
		turn rthigh to x-axis <-41.005495> now;
		turn lthigh to x-axis <20.000000> now;
		turn lleg to x-axis <54.005495> now;
		turn rleg to x-axis <43.005495> now;
		turn rtoes to x-axis <-7.000000> now;
		turn ruparm to x-axis <25.005495> now;
		turn luparm to x-axis <-25.005495> now;
		turn larm to x-axis <-102.016484> now;
		turn lgun to y-axis <-48.005495> now;
		sleep 40;
	}
	move hip to y-axis [0.000000] now;
	turn torso to y-axis <-7.000000> now;
	turn rthigh to x-axis <-29.005495> now;
	turn lthigh to x-axis <16.000000> now;
	turn lleg to x-axis <68.016484> now;
	turn rleg to x-axis <41.005495> now;
	turn rtoes to x-axis <-17.000000> now;
	turn ruparm to x-axis <23.005495> now;
	turn luparm to x-axis <-21.000000> now;
	turn larm to x-axis <-101.016484> now;
	turn lgun to y-axis <-48.005495> now;
	sleep 50;
}

walklegs()
{
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn hip to x-axis <6.000000> now;
		turn rthigh to x-axis <0.000000> now;
		turn lthigh to x-axis <16.000000> now;
		turn lleg to x-axis <80.016484> now;
		turn rleg to x-axis <26.005495> now;
		turn rtoes to x-axis <-25.005495> now;
		sleep 60;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn rthigh to x-axis <9.000000> now;
		turn lthigh to x-axis <3.000000> now;
		turn lleg to x-axis <116.027473> now;
		turn rleg to x-axis <13.000000> now;
		turn rtoes to x-axis <-23.005495> now;
		sleep 70;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn rthigh to x-axis <14.000000> now;
		turn lthigh to x-axis <-19.000000> now;
		turn rleg to x-axis <17.000000> now;
		turn rtoes to x-axis <-19.000000> now;
		sleep 60;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn rthigh to x-axis <21.000000> now;
		turn lthigh to x-axis <-40.005495> now;
		turn lleg to x-axis <108.016484> now;
		sleep 50;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn rthigh to x-axis <23.005495> now;
		turn lthigh to x-axis <-54.005495> now;
		turn lleg to x-axis <80.016484> now;
		sleep 40;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn rthigh to x-axis <29.005495> now;
		turn lthigh to x-axis <-43.005495> now;
		turn lleg to x-axis <34.005495> now;
		turn ltoes to x-axis <-7.000000> now;
		turn rleg to x-axis <46.005495> now;
		turn rtoes to x-axis <-12.000000> now;
		sleep 30;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn rthigh to x-axis <18.000000> now;
		turn lthigh to x-axis <-41.005495> now;
		turn lleg to x-axis <46.005495> now;
		turn ltoes to x-axis <-11.000000> now;
		turn rleg to x-axis <84.016484> now;
		sleep 40;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn hip to x-axis <6.000000> now;
		turn rthigh to x-axis <12.000000> now;
		turn lthigh to x-axis <-33.005495> now;
		turn ltoes to x-axis <-17.000000> now;
		turn rleg to x-axis <90.016484> now;
		sleep 50;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn hip to x-axis <6.000000> now;
		turn rthigh to x-axis <2.000000> now;
		turn lthigh to x-axis <-22.000000> now;
		turn ltoes to x-axis <-24.005495> now;
		turn rleg to x-axis <99.016484> now;
		sleep 60;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn rthigh to x-axis <-16.000000> now;
		turn lthigh to x-axis <-3.000000> now;
		turn lleg to x-axis <31.005495> now;
		turn ltoes to x-axis <-25.005495> now;
		turn rleg to x-axis <111.016484> now;
		sleep 70;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn rthigh to x-axis <-31.005495> now;
		turn lthigh to x-axis <4.000000> now;
		turn lleg to x-axis <24.005495> now;
		turn ltoes to x-axis <-14.000000> now;
		sleep 60;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn rthigh to x-axis <-45.005495> now;
		turn lthigh to x-axis <12.000000> now;
		turn lleg to x-axis <29.005495> now;
		turn ltoes to x-axis <-20.000000> now;
		sleep 50;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn rthigh to x-axis <-49.005495> now;
		turn lthigh to x-axis <17.000000> now;
		turn ltoes to x-axis <-12.000000> now;
		turn rleg to x-axis <62.005495> now;
		sleep 40;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] - [0.000031] now;
		turn lthigh to x-axis <24.005495> now;
		turn rleg to x-axis <37.005495> now;
		sleep 30;
	}
	if( bMoving )
	{
		move hip to y-axis [0.000000] now;
		turn rthigh to x-axis <-41.005495> now;
		turn lthigh to x-axis <20.000000> now;
		turn lleg to x-axis <54.005495> now;
		turn rleg to x-axis <43.005495> now;
		turn rtoes to x-axis <-7.000000> now;
		sleep 40;
	}
	move hip to y-axis [0.000000] now;
	turn rthigh to x-axis <-29.005495> now;
	turn lthigh to x-axis <16.000000> now;
	turn lleg to x-axis <68.016484> now;
	turn rleg to x-axis <41.005495> now;
	turn rtoes to x-axis <-17.000000> now;
	sleep 50;
}

drawgun()
{
	if( TRUE )
	{
		turn luparm to x-axis <-20.000000> speed <150.000000>;
		turn larm to x-axis <-70.016484> speed <150.000000>;
		turn ruparm to x-axis <-20.000000> speed <150.000000>;
		turn rarm to x-axis <-70.016484> speed <150.000000>;
		sleep 300;
		turn luparm to x-axis <264.060440> speed <150.000000>;
		turn luparm to z-axis <-10.000000> speed <150.000000>;
		turn larm to y-axis <-12.000000> speed <150.000000>;
		turn larm to x-axis <-68.016484> speed <150.000000>;
		turn ruparm to x-axis <264.060440> speed <150.000000>;
		turn ruparm to z-axis <10.000000> speed <150.000000>;
		turn rarm to y-axis <12.000000> speed <150.000000>;
		turn rarm to x-axis <-68.016484> speed <150.000000>;
		sleep 200;
		turn luparm to x-axis <168.038462> speed <150.000000>;
		turn luparm to z-axis <-20.000000> speed <150.000000>;
		turn larm to y-axis <-25.005495> speed <150.000000>;
		turn larm to x-axis <-136.027473> speed <150.000000>;
		turn ruparm to x-axis <168.038462> speed <150.000000>;
		turn ruparm to z-axis <20.000000> speed <150.000000>;
		turn rarm to y-axis <25.005495> speed <150.000000>;
		turn rarm to x-axis <-136.027473> speed <150.000000>;
		wait-for-turn luparm around x-axis;
		wait-for-turn luparm around z-axis;
		wait-for-turn larm around y-axis;
		wait-for-turn larm around x-axis;
		wait-for-turn ruparm around x-axis;
		wait-for-turn ruparm around z-axis;
		wait-for-turn rarm around y-axis;
		wait-for-turn rarm around x-axis;
		hide gunsar;
		show rgun;
		show lgun;
		turn luparm to x-axis <264.060440> speed <150.000000>;
		turn luparm to z-axis <-10.000000> speed <150.000000>;
		turn larm to y-axis <-12.000000> speed <150.000000>;
		turn larm to x-axis <-68.016484> speed <150.000000>;
		turn ruparm to x-axis <264.060440> speed <150.000000>;
		turn ruparm to z-axis <10.000000> speed <150.000000>;
		turn rarm to y-axis <12.000000> speed <150.000000>;
		turn rarm to x-axis <-68.016484> speed <150.000000>;
		sleep 200;
		turn luparm to x-axis <-20.000000> speed <150.000000>;
		turn larm to x-axis <-70.016484> speed <150.000000>;
		turn ruparm to x-axis <-20.000000> speed <150.000000>;
		turn rarm to x-axis <-70.016484> speed <150.000000>;
		turn luparm to z-axis <0.000000> speed <150.000000>;
		turn larm to y-axis <0.000000> speed <150.000000>;
		turn ruparm to z-axis <0.000000> speed <150.000000>;
		turn rarm to y-axis <0.000000> speed <150.000000>;
		wait-for-turn luparm around x-axis;
		wait-for-turn luparm around z-axis;
		wait-for-turn larm around y-axis;
		wait-for-turn larm around x-axis;
		wait-for-turn ruparm around x-axis;
		wait-for-turn ruparm around z-axis;
		wait-for-turn rarm around y-axis;
		wait-for-turn rarm around x-axis;
	}
	sleep 70;
}

holstgun()
{
	if( TRUE )
	{
		turn luparm to x-axis <264.060440> speed <100.000000>;
		turn luparm to z-axis <-10.000000> speed <100.000000>;
		turn larm to y-axis <-12.000000> speed <100.000000>;
		turn larm to x-axis <-68.016484> speed <100.000000>;
		turn ruparm to x-axis <264.060440> speed <100.000000>;
		turn ruparm to z-axis <10.000000> speed <100.000000>;
		turn rarm to y-axis <12.000000> speed <100.000000>;
		turn rarm to x-axis <-68.016484> speed <100.000000>;
		sleep 200;
		turn luparm to x-axis <168.038462> speed <100.000000>;
		turn luparm to z-axis <-20.000000> speed <100.000000>;
		turn larm to y-axis <-25.005495> speed <100.000000>;
		turn larm to x-axis <-136.027473> speed <100.000000>;
		turn ruparm to x-axis <168.038462> speed <100.000000>;
		turn ruparm to z-axis <20.000000> speed <100.000000>;
		turn rarm to y-axis <25.005495> speed <100.000000>;
		turn rarm to x-axis <-136.027473> speed <100.000000>;
		wait-for-turn luparm around x-axis;
		wait-for-turn luparm around z-axis;
		wait-for-turn larm around y-axis;
		wait-for-turn larm around x-axis;
		wait-for-turn ruparm around x-axis;
		wait-for-turn ruparm around z-axis;
		wait-for-turn rarm around y-axis;
		wait-for-turn rarm around x-axis;
		hide rgun;
		hide lgun;
		show gunsar;
		turn luparm to x-axis <264.060440> speed <100.000000>;
		turn luparm to z-axis <-10.000000> speed <100.000000>;
		turn larm to y-axis <-12.000000> speed <100.000000>;
		turn larm to x-axis <-68.016484> speed <100.000000>;
		turn ruparm to x-axis <264.060440> speed <100.000000>;
		turn ruparm to z-axis <10.000000> speed <100.000000>;
		turn rarm to y-axis <12.000000> speed <100.000000>;
		turn rarm to x-axis <-68.016484> speed <100.000000>;
		sleep 200;
		turn luparm to x-axis <0.000000> speed <100.000000>;
		turn luparm to z-axis <0.000000> speed <100.000000>;
		turn larm to y-axis <0.000000> speed <100.000000>;
		turn larm to x-axis <0.000000> speed <100.000000>;
		turn ruparm to x-axis <0.000000> speed <100.000000>;
		turn ruparm to z-axis <0.000000> speed <100.000000>;
		turn rarm to y-axis <0.000000> speed <100.000000>;
		turn rarm to x-axis <0.000000> speed <100.000000>;
		turn torso to y-axis <0.000000> speed <100.000000>;
		wait-for-turn luparm around x-axis;
		wait-for-turn luparm around z-axis;
		wait-for-turn larm around y-axis;
		wait-for-turn larm around x-axis;
		wait-for-turn ruparm around x-axis;
		wait-for-turn ruparm around z-axis;
		wait-for-turn rarm around y-axis;
		wait-for-turn rarm around x-axis;
	}
	sleep 30;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				move hip to y-axis [0.000000] speed [0.000000];
				turn hip to x-axis <0.000000> speed <200.000000>;
				turn rthigh to x-axis <0.000000> speed <200.000000>;
				turn rleg to x-axis <0.000000> speed <200.000000>;
				turn rtoes to x-axis <0.000000> speed <200.000000>;
				turn lthigh to x-axis <0.000000> speed <200.000000>;
				turn lleg to x-axis <0.000000> speed <200.000000>;
				turn ltoes to x-axis <0.000000> speed <200.000000>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.000000>;
					turn rarm to x-axis <0.000000> speed <200.000000>;
					turn ruparm to x-axis <0.000000> speed <200.000000>;
					turn larm to x-axis <0.000000> speed <200.000000>;
					turn luparm to x-axis <0.000000> speed <200.000000>;
					turn lgun to x-axis <0.000000> speed <200.000000>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	hide rgun;
	hide lgun;
	hide rflare;
	hide lflare;
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	Static_Var_4 = 1;
	Static_Var_5 = 0;
	gun_1 = base;
	restore_delay = 2000;
	start-script MotionControl();
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn torso to y-axis <0.000000> speed <90.000000>;
	set-signal-mask 0;
	Static_Var_5 = 1;
	start-script holstgun();
	sleep 530;
	sleep 640;
	Static_Var_4 = 1;
	Static_Var_5 = 0;
	wait-for-turn torso around y-axis;
	bAiming = FALSE;
}

AimSecondary(Func_Var_1, Func_Var_2)
{
	signal 8;
	set-signal-mask 8;
	move porteg to x-axis [-1.000000] speed [5.000000];
	move ported to x-axis [1.000000] speed [5.000000];
	turn head to y-axis Func_Var_1 speed <200.000000>;
	wait-for-move porteg along x-axis;
	wait-for-move ported along x-axis;
	return (1);
}

AimPrimary(heading, pitch)
{
	var Func_Var_3;
	Func_Var_3 = 0;
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !Static_Var_3 )
	{
		if( Static_Var_5 )
		{
			Func_Var_3 = 1;
		}
		sleep 100;
	}
	while( Static_Var_5 )
	{
		if( Static_Var_5 )
		{
			Func_Var_3 = 1;
		}
		sleep 100;
	}
	if( Func_Var_3 )
	{
		set-signal-mask 0;
		signal SIG_AIM;
		set-signal-mask SIG_AIM;
	}
	turn torso to y-axis heading speed <150.000000>;
	if( Static_Var_4 )
	{
		set-signal-mask 0;
		Static_Var_5 = 1;
		start-script drawgun();
		sleep 3000;
		Static_Var_4 = 0;
		Static_Var_5 = 0;
		set-signal-mask SIG_AIM;
	}
	wait-for-turn torso around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimFromSecondary(piecenum)
{
	piecenum = head;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QuerySecondary(piecenum)
{
	piecenum = mlunch;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = rflare;
	}
	if( gun_1 == 1 )
	{
		piecenum = lflare;
	}
}

FireSecondary()
{
	hide missil;
	sleep 750;
	move porteg to x-axis [0.000000] speed [5.000000];
	move ported to x-axis [0.000000] speed [5.000000];
	sleep 500;
	show missil;
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		turn rarm to x-axis <-95.016484> speed <300.000000>;
		turn ruparm to x-axis <0.000000> speed <300.000000>;
		show rflare;
		sleep 150;
		hide rflare;
		turn rarm to x-axis <-70.016484> speed <100.000000>;
		turn ruparm to x-axis <-20.000000> speed <100.000000>;
		gun_1 = hip;
		return (0);
	}
	if( gun_1 == 1 )
	{
		turn larm to x-axis <-95.016484> speed <300.000000>;
		turn luparm to x-axis <0.000000> speed <300.000000>;
		show lflare;
		sleep 150;
		hide lflare;
		turn larm to x-axis <-70.016484> speed <100.000000>;
		turn luparm to x-axis <-20.000000> speed <100.000000>;
		gun_1 = base;
		return (0);
	}
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode hip type NOHEATCLOUD;
		explode torso type NOHEATCLOUD;
		explode luparm type NOHEATCLOUD;
		explode larm type NOHEATCLOUD;
		explode lgun type NOHEATCLOUD;
		explode lflare type NOHEATCLOUD;
		explode ruparm type NOHEATCLOUD;
		explode rarm type NOHEATCLOUD;
		explode rgun type NOHEATCLOUD;
		explode rflare type NOHEATCLOUD;
		explode gunsar type NOHEATCLOUD;
		explode ported type NOHEATCLOUD;
		explode porteg type NOHEATCLOUD;
		explode missil type NOHEATCLOUD;
		explode mlunch type NOHEATCLOUD;
		explode rthigh type NOHEATCLOUD;
		explode rleg type NOHEATCLOUD;
		explode rtoes type NOHEATCLOUD;
		explode lthigh type NOHEATCLOUD;
		explode lleg type NOHEATCLOUD;
		explode ltoes type NOHEATCLOUD;
		explode head type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD;
		explode hip type NOHEATCLOUD | SHATTER;
		explode torso type NOHEATCLOUD | SHATTER;
		explode luparm type NOHEATCLOUD | SHATTER;
		explode larm type NOHEATCLOUD | SHATTER;
		explode lgun type NOHEATCLOUD | SHATTER;
		explode lflare type NOHEATCLOUD | SHATTER;
		explode ruparm type NOHEATCLOUD | SHATTER;
		explode rarm type NOHEATCLOUD | SHATTER;
		explode rgun type NOHEATCLOUD | SHATTER;
		explode rflare type NOHEATCLOUD | SHATTER;
		explode gunsar type NOHEATCLOUD;
		explode ported type NOHEATCLOUD | SHATTER;
		explode porteg type NOHEATCLOUD | SHATTER;
		explode missil type NOHEATCLOUD | SHATTER;
		explode mlunch type NOHEATCLOUD | SHATTER;
		explode rthigh type NOHEATCLOUD | SHATTER;
		explode rleg type NOHEATCLOUD | SHATTER;
		explode rtoes type NOHEATCLOUD | SHATTER;
		explode lthigh type NOHEATCLOUD | SHATTER;
		explode lleg type NOHEATCLOUD | SHATTER;
		explode ltoes type NOHEATCLOUD | SHATTER;
		explode head type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD;
		explode hip type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode torso type NOHEATCLOUD | SHATTER;
		explode luparm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode larm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lgun type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lflare type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode ruparm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rarm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rgun type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rflare type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode gunsar type NOHEATCLOUD;
		explode ported type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode porteg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode missil type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode mlunch type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rthigh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rtoes type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lthigh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode ltoes type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode head type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD;
	explode hip type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode torso type NOHEATCLOUD | SHATTER;
	explode luparm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode larm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lgun type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lflare type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode ruparm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rarm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rgun type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rflare type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode gunsar type NOHEATCLOUD;
	explode ported type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode porteg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode missil type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode mlunch type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rthigh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rtoes type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lthigh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode ltoes type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode head type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
