#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, turret, pitchturret, rsleeve, rbarrel, rbarrel2, rflare, rsupport,
       lsleeve, lbarrel, lbarrel2, lflare, lsupport, centerpiece;

static-var  gun_1;

// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from pitchturret;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

SmokeLeft()
{
	sleep 250;
	emit-sfx 256 | 2 from lflare;
	emit-sfx 256 | 1 from lflare;
	sleep 250;
	emit-sfx 256 | 2 from lflare;
	emit-sfx 256 | 1 from lflare;
	sleep 250;
	emit-sfx 256 | 2 from lflare;
	emit-sfx 256 | 1 from lflare;
	sleep 250;
	emit-sfx 256 | 2 from lflare;
	emit-sfx 256 | 1 from lflare;
	sleep 250;
}

SmokeRight()
{
	sleep 250;
	emit-sfx 256 | 2 from rflare;
	emit-sfx 256 | 1 from rflare;
	sleep 250;
	emit-sfx 256 | 2 from rflare;
	emit-sfx 256 | 1 from rflare;
	sleep 250;
	emit-sfx 256 | 2 from rflare;
	emit-sfx 256 | 1 from rflare;
	sleep 250;
	emit-sfx 256 | 2 from rflare;
	emit-sfx 256 | 1 from rflare;
	sleep 250;
}

Create()
{
	hide rflare;
	hide lflare;
	gun_1 = 0;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask 0;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <45.000000>;
	turn pitchturret to x-axis <0.000000> - pitch speed <100.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn pitchturret around x-axis;
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		move rsleeve to z-axis [-1.000000] speed [10.000000];
		move rbarrel to z-axis [-5.000000] speed [120.000000];
		move rbarrel2 to z-axis [-7.000000] speed [350.000000];
		show rflare;
		sleep 150;
		hide rflare;
		move rsleeve to z-axis [0.000000] speed [1.000000];
		move rbarrel to z-axis [0.000000] speed [3.000000];
		move rbarrel2 to z-axis [0.000000] speed [2.000000];
		gun_1 = 1;
		return (0);
	}
	if( gun_1 == 1 )
	{
		move lsleeve to z-axis [-1.000000] speed [10.000000];
		move lbarrel to z-axis [-5.000000] speed [120.000000];
		move lbarrel2 to z-axis [-7.000000] speed [350.000000];
		show lflare;
		sleep 150;
		hide lflare;
		move lsleeve to z-axis [0.000000] speed [1.000000];
		move lbarrel to z-axis [0.000000] speed [3.000000];
		move lbarrel2 to z-axis [0.000000] speed [2.000000];
		gun_1 = 0;
		return (0);
	}
}

AimFromPrimary(piecenum)
{
	piecenum = centerpiece;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = rflare;
	}
	if( gun_1 == 1 )
	{
		piecenum = lflare;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide rflare;
	hide lflare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		explode pitchturret type NOHEATCLOUD;
		explode centerpiece type NOHEATCLOUD | SHATTER;
		explode lsleeve type NOHEATCLOUD;
		explode rsleeve type NOHEATCLOUD;
		explode lbarrel type NOHEATCLOUD;
		explode lbarrel2 type NOHEATCLOUD;
		explode rbarrel type NOHEATCLOUD;
		explode rbarrel2 type NOHEATCLOUD;
		explode lsupport type NOHEATCLOUD;
		explode rsupport type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD | SHATTER;
		explode turret type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
		explode pitchturret type NOHEATCLOUD;
		explode centerpiece type NOHEATCLOUD;
		explode lsleeve type NOHEATCLOUD;
		explode rsleeve type NOHEATCLOUD;
		explode lbarrel type NOHEATCLOUD;
		explode lbarrel2 type NOHEATCLOUD | FALL | SMOKE | EXPLODE_ON_HIT;
		explode rbarrel type NOHEATCLOUD;
		explode rbarrel2 type NOHEATCLOUD | FALL | SMOKE | EXPLODE_ON_HIT;
		explode lsupport type NOHEATCLOUD;
		explode rsupport type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode turret type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode pitchturret type NOHEATCLOUD;
	explode centerpiece type NOHEATCLOUD;
	explode lsleeve type NOHEATCLOUD;
	explode rsleeve type NOHEATCLOUD;
	explode lbarrel type NOHEATCLOUD;
	explode lbarrel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rbarrel type NOHEATCLOUD;
	explode rbarrel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lsupport type NOHEATCLOUD;
	explode rsupport type NOHEATCLOUD;
	return (corpsetype);
}
