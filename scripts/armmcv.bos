#define TA

#include "sfxtype.h"
#include "exptype.h"


piece 	flare1a, flare1b, flare1c, flare2a, flare2b, flare2c, 
		r1, r2, r3, r4, r5, r6, base, turret1, sleeves1, barrel1a, barrel1b, barrel1c,  
		turret2, sleeves2, barrel2a, barrel2b, barrel2c, w1, w2, w3, w4, w5, w6, w7, w8, blast;
		

static-var is_moving, gun_1, gun_2, gun_missile, wait, aimback, brb, amphib, open, dontpop ;


#define SIG_AIM 	2
#define SIG_AIM2 	4
#define SIG_AIM3 	8

track_tracks()
{
	var pre;
	var now;
	pre = get XZ_ATAN(-419);
	var dif;
	
	var preang;
	var prepos;
	var ang;
	var pos;
	
	preang = get XZ_ATAN(-419);
	prepos = get PIECE_XZ(base);
	
	var counter;
	var g;
	
	counter = 0;

	while(1)
	{
		now = get XZ_ATAN(-419);
		dif = pre - now;
		if(dif > <2>)
		{
//			turning = 1;			
		}
		if(dif < <-2>)
		{
//			turning = 1;
		}
		if(dif <= <2> && dif >= <-2>)
		{
//			turning = 0;
		}

		if( is_moving && amphib == 3)
		{
			emit-sfx 259 from w1;
			emit-sfx 259 from w2;
			emit-sfx 259 from w3;
			emit-sfx 259 from w4;
			emit-sfx 259 from w5;
			emit-sfx 259 from w6;
			emit-sfx 259 from w7;
			emit-sfx 259 from w8;
		}
		if( is_moving && amphib == 2)
		{
			emit-sfx 259 from w1;
			emit-sfx 259 from w2;
			emit-sfx 259 from w3;
			emit-sfx 259 from w4;
			emit-sfx 259 from w5;
			emit-sfx 259 from w6;
			emit-sfx 259 from w7;
			emit-sfx 259 from w8;
		}
		if( is_moving && amphib == 1)
		{
			emit-sfx 259 from w1;
			emit-sfx 259 from w2;
			emit-sfx 259 from w3;
			emit-sfx 259 from w4;
			emit-sfx 259 from w5;
			emit-sfx 259 from w6;
			emit-sfx 259 from w7;
			emit-sfx 259 from w8;
		}
		ang = get XZ_ATAN(-419);
		pos = get PIECE_XZ(base);
		
		is_moving = 0;
		
		if (ang != preang)
		{
			is_moving = 1;
		}
		if(pos != prepos)
		{
			is_moving = 1;
		}
		sleep 200;
		prepos = pos;
		preang = ang;
		pre = now;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	set ARMORED to 1;
	dontpop=1;
	
	hide blast;
	hide flare1a;
	hide flare1b;
	hide flare1c;
	hide flare2a;
	hide flare2b;
	hide flare2c;

	
	dont-cache flare1a;
	dont-cache flare1b;
	dont-cache flare1c;
	dont-cache flare2a;
	dont-cache flare2b;
	dont-cache flare2c;

		
	gun_1 = 0;
	gun_2 = 0;
	gun_missile = 0;

	set ACTIVATION to TRUE;
		
	while(get BUILD_PERCENT_LEFT)
	{
		sleep 100;
	}

	start-script SmokeUnit();
	start-script track_tracks();

}

setSFXoccupy(Func_Var_1)
{
	amphib = Func_Var_1;
}


RestorePrimary()
{
	sleep 3000;
	turn turret1 to y-axis <0.000000> speed <60.000000>;
	turn sleeves1 to x-axis <0.000000> speed <60.000000>;
}

RestoreSecondary()
{
	sleep 3000;
	turn turret2 to y-axis <0.000000> speed <60.000000>;
	turn sleeves2 to x-axis <0.000000> speed <60.000000>;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	
	turn turret1 to y-axis heading speed <60>;
	turn sleeves1 to x-axis <0.000000> - pitch speed <60>;
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeves1 around x-axis;
	
	Start-script RestorePrimary();
	return (1);
}


AimSecondary(heading, pitch)
{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2;
	
	turn turret2 to y-axis heading speed <60>;
	turn sleeves2 to x-axis <0.000000> - pitch speed <60>;
	wait-for-turn turret2 around y-axis;
	wait-for-turn sleeves2 around x-axis;
	
	Start-script RestoreSecondary();
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		emit-sfx 1024 from flare1a;
		move barrel1a to z-axis [-2.400000] speed [500.000000];
		wait-for-move barrel1a along z-axis;
		move barrel1a to z-axis [0.000000] speed [3.000000];

	}
	if( gun_1 == 1 )
	{
		emit-sfx 1024 from flare1b;
		move barrel1b to z-axis [-2.400000] speed [500.000000];
		wait-for-move barrel1b along z-axis;
		move barrel1b to z-axis [0.000000] speed [3.000000];

	}
	if( gun_1 == 2 )
	{
		emit-sfx 1024 from flare1c;
		move barrel1c to z-axis [-2.400000] speed [500.000000];
		wait-for-move barrel1c along z-axis;
		move barrel1c to z-axis [0.000000] speed [3.000000];
	}
	
	++gun_1;
	if( gun_1 == 3 )
	{
		gun_1 = 0;
	
	}
}

FireSecondary()
{

		if( gun_2 == 0 )
		{
			emit-sfx 1024 from flare2a;
			move barrel2a to z-axis [-2.400000] speed [500.000000];
			wait-for-move barrel2a along z-axis;
			move barrel2a to z-axis [0.000000] speed [3.000000];
		}
		if( gun_2 == 1 )
		{
			emit-sfx 1024 from flare2b;
			move barrel2b to z-axis [-2.400000] speed [500.000000];
			wait-for-move barrel2b along z-axis;
			move barrel2b to z-axis [0.000000] speed [3.000000];
		}
		if( gun_2 == 2 )
		{
			emit-sfx 1024 from flare2c;
			move barrel2c to z-axis [-2.400000] speed [500.000000];
			wait-for-move barrel2c along z-axis;
			move barrel2c to z-axis [0.000000] speed [3.000000];
		}
	++gun_2;
	if( gun_2 == 3 )
	{
		gun_2 = 0;
	
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret1;
}

AimFromSecondary(piecenum)
{
	piecenum = turret2;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare1a;
	}
	if( gun_1 == 1 )
	{
		piecenum = flare1b;
	}
	if( gun_1 == 2 )
	{
		piecenum = flare1c;
	}
}

QuerySecondary(piecenum)
{
	if( gun_2 == 0 )
	{
		piecenum = flare2a;
	}
	if( gun_2 == 1 )
	{
		piecenum = flare2b;
	}
	if( gun_2 == 2 )
	{
		piecenum = flare2c;
	}
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3;
	
	while (amphib == 3)
	{ 
		sleep 1000;
	}	

	return (1);
}


FireTertiary()
{
	++gun_missile;
	if (gun_missile == 7)
	{
		gun_missile = 1;
	}
}

AimFromTertiary(piecenum)
{
	piecenum = base;
}


QueryTertiary(piecenum)
{
	if (gun_missile == 1)
	{
		piecenum = r1;
	}
	if (gun_missile == 2)
	{
		piecenum = r2;
	}
	if (gun_missile == 3)
	{
		piecenum = r3;
	}
	if (gun_missile == 4)
	{
		piecenum = r4;
	}
	if (gun_missile == 5)
	{
		piecenum = r5;
	}
	if (gun_missile == 6)
	{
		piecenum = r6;
	}
}


SweetSpot(piecenum)
{
	piecenum = base;
}


Killed(severity, corpsetype)
{
	hide flare1a;
	hide flare1b;
	hide flare1c;
	hide flare2a;
	hide flare2b;
	hide flare2c;

	if( severity <= 25 )
	{
		corpsetype = 1;
		explode turret1 type NOHEATCLOUD;
		explode turret2 type NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode sleeves1 type NOHEATCLOUD;
		explode barrel1a type NOHEATCLOUD;
		explode barrel1c type NOHEATCLOUD;
		explode barrel2a type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode turret1 type NOHEATCLOUD | FALL;
		explode turret2 type NOHEATCLOUD | FALL;
		explode base type NOHEATCLOUD | FALL;
		explode flare1a type NOHEATCLOUD | FALL;
		explode flare2b type NOHEATCLOUD | FALL;
		explode sleeves1 type NOHEATCLOUD | FALL;
		explode barrel1a type NOHEATCLOUD | FALL;
		explode barrel1c type NOHEATCLOUD | FALL;
		explode barrel2b type NOHEATCLOUD | FALL;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode turret1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode base type NOHEATCLOUD | BITMAP1;
		explode flare1a type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode flare2b type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeves1 type NOHEATCLOUD | FALL;
		explode barrel1a type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel1c type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel1b type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
		corpsetype = 3;
		explode turret1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode base type NOHEATCLOUD | BITMAP1;
		explode flare1a type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode flare2b type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeves1 type NOHEATCLOUD | FALL;
		explode barrel1a type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel1c type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel1b type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
}