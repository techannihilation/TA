#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, Wing1a, Wing1b, Wing2a, Wing2b, Link, flare1,
       flare2, flare3, flare4, smokey1, smokey2, smokey3, smokey4, smokey5;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, bMoving,
            Static_Var_6, Static_Var_7, Static_Var_8;


HitByWeapon(anglex, anglez)
{
	if( Static_Var_4 == 0 )
	{
		turn base to z-axis anglez speed <105.000000>;
		turn base to x-axis anglex speed <105.000000>;
		wait-for-turn base around z-axis;
		wait-for-turn base around x-axis;
		turn base to z-axis <0.000000> speed <30.000000>;
		turn base to x-axis <0.000000> speed <30.000000>;
	}
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_3 )
	{
		Static_Var_2 = requestedstate;
		return (0);
	}
	Static_Var_3 = 1;
	currentstate = Static_Var_2;
	Static_Var_2 = requestedstate;
	while( Static_Var_2 != currentstate )
	{
		if( !Static_Var_2 )
		{
			turn Wing1b to z-axis <-30.000000> speed <40.000000>;
			turn Wing2b to z-axis <30.000000> speed <40.000000>;
			sleep 1337;
			Static_Var_4 = 1;
			currentstate = 0;
		}
		if( Static_Var_2 )
		{
			turn Wing1b to z-axis <0.000000> speed <45.000000>;
			turn Wing2b to z-axis <0.000000> speed <45.000000>;
			sleep 1340;
			Static_Var_4 = 0;
			currentstate = 1;
		}
	}
	Static_Var_3 = 0;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	Static_Var_1 = 0;
	Static_Var_2 = 1;
	Static_Var_3 = 0;
	Static_Var_4 = 0;
	bMoving = FALSE;
	Static_Var_6 = 0;
	Static_Var_7 = 0;
	Static_Var_8 = 0;
	start-script SmokeUnit();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

QueryTransport(Func_Var_1, Func_Var_2)
{
	Func_Var_1 = 6;
}

BeginTransport(Func_Var_1)
{
	move Link to y-axis [0.000000] - Func_Var_1 now;
	move body to y-axis [3.500000] speed [3.500000];
	start-script RequestState(0);
}

EndTransport()
{
	start-script RequestState(1);
}

Smog()
{
	set-signal-mask 8;
	while( bMoving == 1 )
	{
		if( Static_Var_4 == 1 )
		{
			Static_Var_6 = 1;
		}
		if( Static_Var_4 == 0 )
		{
			Static_Var_6 = Rand( 1, 2 );
		}
		Static_Var_8 = Rand( 1, 5 );
		Static_Var_7 = Rand( 1, 40 );
		sleep 10;
		if( Static_Var_4 == 1 )
		{
			if( Static_Var_7 == 1 )
			{
				emit-sfx 0 from flare1;
				sleep 30;
				emit-sfx 256 | 1 from smokey1;
				sleep 10;
				emit-sfx 0 from flare2;
				sleep 20;
				emit-sfx 0 from flare3;
				sleep 15;
				emit-sfx 256 | 1 from smokey2;
				sleep 15;
				emit-sfx 256 | 1 from smokey3;
				sleep 10;
				emit-sfx 0 from flare4;
				sleep 20;
				emit-sfx 256 | 1 from smokey4;
				sleep 25;
				emit-sfx 256 | 1 from smokey5;
				sleep 20;
				emit-sfx 0 from flare1;
				sleep 25;
				emit-sfx 256 | 1 from smokey1;
				sleep 10;
				emit-sfx 0 from flare2;
				sleep 15;
				emit-sfx 0 from flare3;
				sleep 15;
				emit-sfx 256 | 1 from smokey2;
				sleep 15;
				emit-sfx 256 | 1 from smokey3;
				sleep 10;
				emit-sfx 0 from flare4;
				sleep 20;
				emit-sfx 256 | 1 from smokey4;
				sleep 25;
				emit-sfx 256 | 1 from smokey5;
			}
		}
		if( Static_Var_6 == 1 )
		{
			emit-sfx 1 from flare1;
			if( Static_Var_8 == 1 )
			{
				emit-sfx 256 | 1 from smokey1;
			}
		}
		sleep 10;
	}
}

StartMoving()
{
	bMoving = TRUE;
	move Wing1a to x-axis [2.500000] speed [3.000000];
	move Wing2a to x-axis [-2.500000] speed [3.000000];
}

StopMoving()
{
	signal 8;
	bMoving = FALSE;
	move Wing1a to x-axis [0.000000] speed [2.500000];
	move Wing2a to x-axis [0.000000] speed [2.500000];
	Static_Var_1 = 0;
}

MoveRate1()
{
	signal 8;
	set-signal-mask 8;
	Static_Var_1 = 1;
	//start-script Smog();
}

MoveRate2()
{
	signal 8;
	set-signal-mask 8;
	Static_Var_1 = 2;
	//start-script Smog();
}

MoveRate3()
{
	signal 8;
	set-signal-mask 8;
	Static_Var_1 = 3;
	//start-script Smog();
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode Link type NOHEATCLOUD;
		explode Wing1a type NOHEATCLOUD | SHATTER;
		explode Wing1b type NOHEATCLOUD | SHATTER;
		explode Wing2a type NOHEATCLOUD | SHATTER;
		explode Wing2b type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD;
		explode Link type NOHEATCLOUD | FALL;
		explode Wing1a type NOHEATCLOUD | SHATTER;
		explode Wing1b type NOHEATCLOUD | SHATTER;
		explode Wing2a type NOHEATCLOUD | SHATTER;
		explode Wing2b type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD;
		explode Link type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode Wing1a type NOHEATCLOUD | SHATTER;
		explode Wing1b type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode Wing2a type NOHEATCLOUD | SHATTER;
		explode Wing2b type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD;
	explode Link type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Wing1a type NOHEATCLOUD | SHATTER;
	explode Wing1b type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Wing2a type NOHEATCLOUD | SHATTER;
	explode Wing2b type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
