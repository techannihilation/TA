#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, flare3, flare4, flare5, barrel1, barrel2, barrel3,
       barrel4, barrel5, base, body, bigturret, bigsleeve, lilturret, lilsleeve,
       w1, w2, w3, w4, w5, w6, w7, w8,
       w9, w10, w11, w12, wakes, depthpoint;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7;


RockOnWaves()
{
	while( TRUE )
	{
		turn base to x-axis <1.> speed <2.>;
		move base to y-axis [0.] speed [0.];
		wait-for-turn base around x-axis;
		turn base to x-axis <-1.> speed <2.>;
		move base to y-axis [-0.] speed [0.];
		wait-for-move base along y-axis;
		move base to y-axis [0.] speed [0.];
		wait-for-turn base around x-axis;
		turn base to x-axis <1.> speed <2.>;
		move base to y-axis [-0.] speed [0.];
		wait-for-move base along y-axis;
	}
}

ProjXPW(Func_Var_1, Func_Var_2)
{
	if( Func_Var_2 < -21840 )
	{
		Static_Var_6 = Func_Var_1 * ( Func_Var_2 + 32760 ) / 10920;
	}
	else if( Func_Var_2 > 21840 )
	{
		Static_Var_6 = Func_Var_1 * ( 32760 - Func_Var_2 ) / 10920;
	}
	else if( Func_Var_2 < -10920 )
	{
		Static_Var_6 = 0 - Func_Var_1;
	}
	else if( Func_Var_2 > 10920 )
	{
		Static_Var_6 = Func_Var_1;
	}
	else
	{
		Static_Var_6 = Func_Var_1 * Func_Var_2 / 10920;
	}
}

RockZ(Func_Var_1, Func_Var_2)
{
	signal 16;
	set-signal-mask 16;
	call-script ProjXPW(10920 / Func_Var_2,Func_Var_1);
	Static_Var_7 = Static_Var_7 + Static_Var_6;
	Static_Var_6 = get ABS(Static_Var_7);
	while( Static_Var_6 > 91 )
	{
		turn base to z-axis Static_Var_7 speed Static_Var_6 * <0.>;
		wait-for-turn base around z-axis;
		Static_Var_7 = Static_Var_7 * -1 / 2;
		Static_Var_6 = get ABS(Static_Var_7);
	}
	turn base to z-axis <0.> speed <2.>;
}

RockUnit(anglex, anglez)
{
	signal 8;
	set-signal-mask 8;
	turn body to x-axis anglex speed <50.>;
	turn body to z-axis anglez speed <50.>;
	wait-for-turn body around z-axis;
	wait-for-turn body around x-axis;
	turn body to z-axis <0.> speed <20.>;
	turn body to x-axis <0.> speed <20.>;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flare1;
	hide flare2;
	hide flare3;
	hide flare4;
	hide flare5;
	Static_Var_3 = 0;
	Static_Var_4 = 3000;
	start-script SmokeUnit();
	start-script RockOnWaves();
	Static_Var_1 = 0;
	Static_Var_2 = 3;
}

SetMaxReloadTime(Func_Var_1)
{
	Static_Var_4 = Func_Var_1 * 2;
}

RestoreAfterDelay()
{
	sleep Static_Var_4;
	turn lilsleeve to x-axis <0.> speed <35.>;
	turn lilturret to y-axis <0.> speed <15.>;
	turn bigsleeve to x-axis <0.> speed <35.>;
	turn bigturret to y-axis <0.> speed <15.>;
}

StartMoving()
{
	signal 16;
	set-signal-mask 16;
	while( TRUE )
	{
		emit-sfx 3 from w1;
		emit-sfx 3 from w2;
		emit-sfx 3 from w3;
		emit-sfx 3 from w4;
		emit-sfx 3 from w5;
		emit-sfx 3 from w6;
		emit-sfx 3 from w7;
		emit-sfx 3 from w8;
		emit-sfx 3 from w9;
		emit-sfx 3 from w10;
		emit-sfx 3 from w11;
		emit-sfx 3 from w12;
		emit-sfx 5 from w1;
		emit-sfx 5 from w2;
		emit-sfx 5 from w3;
		emit-sfx 5 from w4;
		emit-sfx 5 from w5;
		emit-sfx 5 from w6;
		emit-sfx 5 from w7;
		emit-sfx 5 from w8;
		emit-sfx 5 from w9;
		emit-sfx 5 from w10;
		emit-sfx 5 from w11;
		emit-sfx 5 from w12;
		sleep 250;
	}
}

StopMoving()
{
	signal 16;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn bigturret to y-axis heading speed <60.>;
	turn bigsleeve to x-axis <0.> - pitch speed <60.>;
	wait-for-turn bigturret around y-axis;
	wait-for-turn bigsleeve around x-axis;
	start-script RestoreAfterDelay();
	Static_Var_5 = heading;
	return (1);
}

FirePrimary()
{
	start-script RockZ(-5,Static_Var_5);
	if( Static_Var_1 == 0 )
	{
		emit-sfx 1025 from flare1;
		move barrel1 to z-axis [-2.5] now;
		sleep 150;
		move barrel1 to z-axis [0.] speed [2.];
		sleep 150;
		Static_Var_1 = 1;
	}
	else if( Static_Var_1 == 1 )
	{
		emit-sfx 1025 from flare2;
		move barrel2 to z-axis [-2.5] now;
		sleep 150;
		move barrel2 to z-axis [0.] speed [2.];
		sleep 150;
		Static_Var_1 = 2;
	}
	else if( Static_Var_1 == 2 )
	{
		emit-sfx 1025 from flare3;
		move barrel3 to z-axis [-3.] now;
		sleep 150;
		move barrel3 to z-axis [0.] speed [2.];
		sleep 150;
		Static_Var_1 = 0;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = bigturret;
}

QueryPrimary(piecenum)
{
	piecenum = Static_Var_1;
}

AimWeapon2(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	turn lilturret to y-axis heading speed <30.>;
	turn lilsleeve to x-axis <0.> - pitch speed <30.>;
	wait-for-turn lilturret around y-axis;
	wait-for-turn lilsleeve around x-axis;
	start-script RestoreAfterDelay();
	Static_Var_5 = heading;
	return (1);
}

FireWeapon2()
{
	start-script RockZ(-5,Static_Var_5);
	if( Static_Var_2 == 3 )
	{
		emit-sfx 1026 from flare4;
		move barrel4 to z-axis [-3.] now;
		sleep 150;
		move barrel4 to z-axis [0.] speed [1.];
		sleep 150;
		Static_Var_2 = 4;
	}
	else if( Static_Var_2 == 4 )
	{
		emit-sfx 1026 from flare5;
		move barrel5 to z-axis [-3.] now;
		sleep 150;
		move barrel5 to z-axis [0.] speed [1.];
		sleep 150;
		Static_Var_2 = 3;
	}
}

AimFromWeapon2(piecenum)
{
	piecenum = lilturret;
}

QueryWeapon2(piecenum)
{
	piecenum = Static_Var_2;
}

abaim()
{
	sleep 1000;
	signal 8;
}

AimTertiary(heading, pitch)
{
	signal 8;
	set-signal-mask 8;
	start-script abaim();
	return (1);
}

QueryTertiary(piecenum)
{
	piecenum = depthpoint;
}

AimFromTertiary(piecenum)
{
	piecenum = depthpoint;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode body type NOHEATCLOUD;
		explode lilsleeve type NOHEATCLOUD;
		explode lilturret type NOHEATCLOUD;
		explode bigsleeve type NOHEATCLOUD;
		explode bigturret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode body type NOHEATCLOUD;
		explode lilsleeve type NOHEATCLOUD;
		explode lilturret type NOHEATCLOUD;
		explode bigsleeve type NOHEATCLOUD;
		explode bigturret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode body type NOHEATCLOUD;
		explode lilsleeve type NOHEATCLOUD;
		explode lilturret type NOHEATCLOUD;
		explode bigsleeve type NOHEATCLOUD;
		explode bigturret type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode barrel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode barrel3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode barrel4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode barrel5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode base type NOHEATCLOUD;
	explode body type NOHEATCLOUD;
	explode lilsleeve type NOHEATCLOUD;
	explode lilturret type NOHEATCLOUD;
	explode bigsleeve type NOHEATCLOUD;
	explode bigturret type NOHEATCLOUD;
	return (corpsetype);
}
