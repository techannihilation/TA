#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, flare, turret, barrel, launcher;

static-var  Static_Var_1;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flare;
	dont-cache barrel;
	dont-cache launcher;
	dont-cache turret;
	dont-cache flare;
	dont-shade barrel;
	dont-shade launcher;
	dont-shade turret;
	dont-shade flare;
	Static_Var_1 = 1;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	if( Static_Var_1 == 1 )
	{
		turn barrel to z-axis <0.> speed <400.>;
	}
	if( Static_Var_1 == 2 )
	{
		turn barrel to z-axis <120.> speed <400.>;
	}
	if( Static_Var_1 == 3 )
	{
		turn barrel to z-axis <0.> - <120.> speed <400.>;
	}
	turn turret to y-axis heading speed <250.>;
	turn launcher to x-axis <0.> - pitch speed <250.>;
	wait-for-turn barrel around z-axis;
	wait-for-turn turret around y-axis;
	wait-for-turn launcher around x-axis;
	return (1);
}

FirePrimary()
{
	++Static_Var_1;
	if( Static_Var_1 == 4 )
	{
		Static_Var_1 = 1;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel type NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode flare type NOHEATCLOUD;
		explode launcher type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrel type FALL | NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode flare type FALL | NOHEATCLOUD;
		explode launcher type SHATTER | NOHEATCLOUD;
		explode turret type FALL | NOHEATCLOUD;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode barrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode launcher type SHATTER | NOHEATCLOUD;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		return (0);
	}
	corpsetype = 3;
	explode barrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode base type NOHEATCLOUD;
	explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode launcher type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
}
