#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  ground, leg1, leg2, leg3, leg4, base;

static-var  bMoving;


walkscr()
{
	while( bMoving )
	{
		if( bMoving )
		{
			turn leg1 to z-axis <0.000000> now;
			turn leg1 to z-axis <-38.005495> speed <262.000000>;
			turn leg2 to y-axis <55.346154> now;
			turn leg2 to y-axis <55.005495> speed <0.000000>;
			turn leg2 to z-axis <38.247253> now;
			turn leg2 to z-axis <0.000000> speed <262.000000>;
			turn leg3 to y-axis <0.000000> now;
			turn leg3 to y-axis <60.005495> speed <413.000000>;
			turn leg3 to z-axis <37.791209> speed <205.593407>;
			turn leg4 to y-axis <-60.302198> now;
			turn leg4 to y-axis <0.000000> speed <413.000000>;
			turn leg4 to z-axis <0.000000> now;
			turn leg4 to z-axis <0.000000> speed <0.000000>;
			sleep 146;
		}
		if( bMoving )
		{
			turn leg1 to y-axis <-55.005495> speed <377.000000>;
			turn leg1 to z-axis <-38.005495> speed <0.000000>;
			turn leg2 to y-axis <0.000000> speed <377.000000>;
			turn leg2 to z-axis <0.000000> speed <0.000000>;
			turn leg3 to z-axis <0.000000> speed <258.000000>;
			turn leg4 to z-axis <-38.005495> speed <261.000000>;
			sleep 147;
		}
		if( bMoving )
		{
			turn leg1 to y-axis <-55.005495> speed <0.000000>;
			turn leg1 to z-axis <0.000000> speed <262.000000>;
			turn leg2 to z-axis <38.005495> speed <262.000000>;
			turn leg3 to y-axis <0.000000> speed <413.000000>;
			turn leg3 to z-axis <0.000000> speed <0.000000>;
			turn leg4 to y-axis <-60.005495> speed <413.000000>;
			turn leg4 to z-axis <-38.005495> speed <0.000000>;
			sleep 146;
		}
		turn leg1 to y-axis <0.000000> speed <377.000000>;
		turn leg1 to z-axis <0.000000> speed <0.000000>;
		turn leg2 to y-axis <55.005495> speed <377.000000>;
		turn leg2 to z-axis <38.005495> speed <0.000000>;
		turn leg3 to z-axis <37.005495> speed <258.000000>;
		turn leg4 to y-axis <-60.005495> speed <0.000000>;
		turn leg4 to z-axis <0.000000> speed <261.000000>;
		sleep 147;
	}
}

MotionControl(Func_Var_1)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		if( Func_Var_1 )
		{
			call-script walkscr();
		}
		else
		{
			sleep 100;
		}
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	bMoving = FALSE;
	start-script SmokeUnit();
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

FireWeapon1()
{
	emit-sfx 4097 from leg1;
}

QueryWeapon1(piecenum)
{
	piecenum = base;
}

AimFromWeapon1(piecenum)
{
	piecenum = base;
}

QueryWeapon2(piecenum)
{
	piecenum = base;
}

AimFromWeapon2(piecenum)
{
	piecenum = base;
}

FireWeapon2()
{
}

SweetSpot(piecenum)
{
	piecenum = leg1;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode ground type NOHEATCLOUD;
		explode leg1 type NOHEATCLOUD;
		explode leg2 type NOHEATCLOUD;
		explode leg3 type NOHEATCLOUD;
		explode leg4 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode ground type NOHEATCLOUD;
		explode leg1 type NOHEATCLOUD | SHATTER;
		explode leg2 type NOHEATCLOUD | FALL;
		explode leg3 type NOHEATCLOUD | FALL;
		explode leg4 type NOHEATCLOUD | FALL;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode ground type NOHEATCLOUD;
		explode leg1 type NOHEATCLOUD | SHATTER;
		explode leg2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode leg3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode leg4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode ground type NOHEATCLOUD;
	explode leg1 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode leg2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode leg3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode leg4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
