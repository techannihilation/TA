#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1a, flare1b, flare2a, flare2b, base, body, gun,
       turret, sleeve1, sleeve2, wake1, wake2,
       barrel1a, barrel1b, barrel2a, barrel2b;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7, Static_Var_8, Static_Var_9, shieldonoff, 
            ignite1, ignite2, ignite3;


SetDirection(heading)
{
	var Func_Var_2;
	Func_Var_2 = get ABS(heading);
	turn body to y-axis heading speed Func_Var_2;
	turn base to y-axis <0.> - heading speed Func_Var_2;
}

RockOnWaves()
{
	while( TRUE )
	{
		turn body to x-axis <1.> speed <1.>;
		move body to y-axis [0.] speed [0.];
		wait-for-turn body around x-axis;
		turn body to x-axis <-1.> speed <1.>;
		move body to y-axis [0.] speed [0.];
		wait-for-move body along y-axis;
		move body to y-axis [0.] speed [0.];
		wait-for-turn body around x-axis;
		turn body to x-axis <1.> speed <1.>;
		move body to y-axis [0.] speed [0.];
		wait-for-move body along y-axis;
	}
}

ProjXPW(Func_Var_1, Func_Var_2)
{
	if( Func_Var_2 < -21840 )
	{
		Static_Var_8 = Func_Var_1 * ( Func_Var_2 + 32760 ) / 10920;
	}
	else if( Func_Var_2 > 21840 )
	{
		Static_Var_8 = Func_Var_1 * ( 32760 - Func_Var_2 ) / 10920;
	}
	else if( Func_Var_2 < -10920 )
	{
		Static_Var_8 = 0 - Func_Var_1;
	}
	else if( Func_Var_2 > 10920 )
	{
		Static_Var_8 = Func_Var_1;
	}
	else
	{
		Static_Var_8 = Func_Var_1 * Func_Var_2 / 10920;
	}
}

RockZ(Func_Var_1, Func_Var_2)
{
	signal 16;
	set-signal-mask 16;
	call-script ProjXPW(10920 / Func_Var_2,Func_Var_1);
	Static_Var_9 = Static_Var_9 + Static_Var_8;
	Static_Var_8 = get ABS(Static_Var_9);
	while( Static_Var_8 > 91 )
	{
		turn base to z-axis Static_Var_9 speed Static_Var_8 * <0.>;
		wait-for-turn base around z-axis;
		Static_Var_9 = Static_Var_9 * -1 / 2;
		Static_Var_8 = get ABS(Static_Var_9);
	}
	turn base to z-axis <0.> speed <2.>;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Shield()
{
	shieldonoff = !shieldonoff;
}

Create()
{
	shieldonoff = 1;
	hide flare1a;
	hide flare1b;
	hide flare2a;
	hide flare2b;	
	Static_Var_1 = 1;
	Static_Var_2 = 1;
	Static_Var_4 = 0;
	Static_Var_5 = 0;
	Static_Var_6 = 0;
	Static_Var_3 = 3000;
	Static_Var_9 = 0;
	start-script SmokeUnit();
	start-script RockOnWaves();
}

SetMaxReloadTime(Func_Var_1)
{
	Static_Var_3 = Func_Var_1 * 8;
}

RestoreAfterDelay()
{
	sleep Static_Var_3;
	turn turret to y-axis <0.> speed <20.>;
	turn sleeve1 to x-axis <0.> speed <15.>;
	turn sleeve2 to x-axis <0.> speed <15.>;
	Static_Var_1 = 0;
}

StartMoving()
{
	signal 8;
	set-signal-mask 8;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		sleep 150;
	}
}

StopMoving()
{
	signal 8;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	Static_Var_1 = 0;
	turn turret to y-axis heading speed <20.>;
	turn sleeve1 to x-axis <0.> - pitch speed <15.>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve1 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimSecondary(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	Static_Var_1 = 1;
	turn sleeve2 to x-axis <0.> - pitch speed <15.>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve2 around x-axis;
	return (1);
}

AimWeapon3(heading, pitch)
{
	sleep 100;
	return (Static_Var_1);
}

FirePrimary()
{
	start-script RockZ(-5,Static_Var_7);
	if( Static_Var_4 == 0 )
	{
		emit-sfx 1024 from flare1a;
		move barrel1a to z-axis [-1.] speed [500.];
		sleep 150;
		move barrel1a to z-axis [0.] speed [3.];
		Static_Var_4 = 1;
		return (0);
	}
	if( Static_Var_4 == 1 )
	{
		emit-sfx 1024 from flare1b;
		move barrel1b to z-axis [-1.] speed [500.];
		sleep 150;
		move barrel1b to z-axis [0.] speed [3.];
		Static_Var_4 = 0;
		return (0);
	}
}

FireSecondary()
{
	if( Static_Var_2 == 0 )
	{
		emit-sfx 1025 from flare2a;
		move barrel2a to z-axis [-1.] speed [500.];
		sleep 150;
		move barrel2a to z-axis [0.] speed [3.];
		Static_Var_2 = 1;
		return (0);
	}
	if( Static_Var_2 == 1 )
	{
		emit-sfx 1025 from flare2b;
		move barrel2b to z-axis [-1.] speed [500.];
		sleep 150;
		move barrel2b to z-axis [0.] speed [3.];
		Static_Var_2 = 0;
		return (0);
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	if( Static_Var_4 == 0 )
	{
		piecenum = flare1a;
	}
	if( Static_Var_4 == 1 )
	{
		piecenum = flare1b;
	}
}

AimFromSecondary(piecenum)
{
	piecenum = turret;
}

QuerySecondary(piecenum)
{
	if( Static_Var_2 == 0 )
	{
		piecenum = flare2a;
	}
	if( Static_Var_2 == 1 )
	{
		piecenum = flare2b;
	}
}

AimFromWeapon3(piecenum)
{
	piecenum = gun;
}

QueryWeapon3(piecenum)
{
	piecenum = gun;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel1a type NOHEATCLOUD;
		explode barrel1b type NOHEATCLOUD;
		explode barrel2a type NOHEATCLOUD;
		explode barrel2b type NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode flare1a type NOHEATCLOUD;
		explode flare1b type NOHEATCLOUD;
		explode flare2a type NOHEATCLOUD;
		explode flare2b type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		explode wake1 type NOHEATCLOUD;
		explode wake2 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrel1a type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel1b type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel2a type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel2b type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode flare1a type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode flare1b type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode flare2a type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode flare2b type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode turret type NOHEATCLOUD | NOHEATCLOUD;
		explode wake1 type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode wake2 type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode barrel1a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel1b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel2a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel2b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode flare1a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode flare1b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode flare2a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode flare2b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		explode wake1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode wake2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode barrel1a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode barrel1b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode barrel2a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode barrel2b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode base type NOHEATCLOUD;
	explode flare1a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode flare1b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode flare2a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode flare2b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode turret type NOHEATCLOUD;
	explode wake1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode wake2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	return (corpsetype);
}