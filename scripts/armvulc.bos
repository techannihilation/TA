#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, flare, turret, shell, barrel01, barrel02, barrel03, barrel04,
       housing01, housing02, housing03, housing04, spindle, neck;

static-var  gun_1;

// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

RestoreAfterDelay()
{
	sleep 1200;
	set-signal-mask 0;
	set ARMORED to 0;
}

Create()
{
	hide flare;
	hide shell;
	dont-shade shell;
	dont-cache flare;
	dont-cache barrel01;
	dont-cache barrel02;
	dont-cache barrel03;
	dont-cache barrel04;
	dont-cache housing01;
	dont-cache housing02;
	dont-cache housing03;
	dont-cache housing04;
	dont-cache spindle;
	dont-cache neck;
	dont-cache turret;
	gun_1 = flare;
	spin flare around z-axis speed <250.060440>;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	set ARMORED to 1;
	turn turret to y-axis heading speed <15.000000>;
	turn neck to x-axis <0.000000> - pitch speed <6.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn neck around x-axis;
	start-script RestoreAfterDelay();
	sleep 115;
	return (1);
}

FirePrimary()
{
	if( gun_1 == 1 )
	{
		move barrel01 to z-axis [-10.000000] now;
		emit-sfx 1024 + 0 from flare;
		sleep 100;
		explode shell type NOHEATCLOUD | FALL;
		move barrel01 to z-axis [0.000000] speed [20.000000];
		turn spindle to z-axis <90.016484> speed <400.093407>;
	}
	if( gun_1 == 2 )
	{
		move barrel02 to z-axis [-10.000000] now;
		emit-sfx 1024 + 0 from flare;
		sleep 100;
		explode shell type NOHEATCLOUD | FALL;
		move barrel02 to z-axis [0.000000] speed [20.000000];
		turn spindle to z-axis <180.038462> speed <400.093407>;
	}
	if( gun_1 == 3 )
	{
		move barrel03 to z-axis [-10.000000] now;
		emit-sfx 1024 + 0 from flare;
		sleep 100;
		explode shell type NOHEATCLOUD | FALL;
		move barrel03 to z-axis [0.000000] speed [20.000000];
		turn spindle to z-axis <270.060440> speed <400.093407>;
	}
	if( gun_1 == 4 )
	{
		move barrel04 to z-axis [-10.000000] now;
		emit-sfx 1024 + 0 from flare;
		sleep 100;
		explode shell type NOHEATCLOUD | FALL;
		move barrel04 to z-axis [0.000000] speed [20.000000];
		turn spindle to z-axis <0.000000> speed <400.093407>;
	}
	++gun_1;
	if( gun_1 == 5 )
	{
		gun_1 = flare;
	}
}

TargetCleared(Func_Var_1)
{
	if( Func_Var_1 == 1 )
	{
		signal SIG_AIM;
		stop-spin turret around y-axis;
		stop-spin neck around x-axis;
	}
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

AimFromPrimary(piecenum)
{
	piecenum = spindle;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel01 type NOHEATCLOUD;
		explode barrel02 type NOHEATCLOUD;
		explode barrel03 type NOHEATCLOUD;
		explode barrel04 type NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode housing01 type NOHEATCLOUD;
		explode housing02 type NOHEATCLOUD;
		explode housing03 type NOHEATCLOUD;
		explode housing04 type NOHEATCLOUD;
		explode neck type NOHEATCLOUD;
		explode spindle type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrel01 type NOHEATCLOUD;
		explode barrel02 type NOHEATCLOUD;
		explode barrel03 type NOHEATCLOUD;
		explode barrel04 type NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode housing01 type NOHEATCLOUD | FALL;
		explode housing02 type NOHEATCLOUD | FALL;
		explode housing03 type NOHEATCLOUD | FALL;
		explode housing04 type NOHEATCLOUD | FALL;
		explode neck type NOHEATCLOUD | FALL;
		explode spindle type NOHEATCLOUD | SHATTER;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode barrel01 type NOHEATCLOUD;
		explode barrel02 type NOHEATCLOUD;
		explode barrel03 type NOHEATCLOUD;
		explode barrel04 type NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode housing01 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode housing02 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode housing03 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode housing04 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode neck type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode spindle type NOHEATCLOUD | SHATTER;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode barrel01 type NOHEATCLOUD;
	explode barrel02 type NOHEATCLOUD;
	explode barrel03 type NOHEATCLOUD;
	explode barrel04 type NOHEATCLOUD;
	explode base type NOHEATCLOUD;
	explode housing01 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode housing02 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode housing03 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode housing04 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode neck type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode spindle type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode turret type NOHEATCLOUD;
	return (corpsetype);
}
