#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, rightchunk, leftchunk, turret, arms, sleeve, barrel,
       flare, turret3, sleeve3, barrel3, flare3, feetparent, flfoot, frfoot,
       rlfoot, rrfoot, aimpoint;

static-var  bMoving, bAiming, Static_Var_3, Static_Var_4, Static_Var_5;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_3			4
#define SIG_MOVE			32


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	set ARMORED to 1;
	Static_Var_5 = 1;
	bMoving = FALSE;
	hide flare;
	dont-cache flare;
	start-script SmokeUnit();
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	bMoving = TRUE;
	while( bMoving )
	{
		if( TRUE )
		{
			move feetparent to z-axis [-0.900000] now;
			move flfoot to x-axis [-0.900000] now;
			move flfoot to y-axis [0.359998] now;
			move flfoot to z-axis [0.300000] now;
			move flfoot to z-axis [-0.359998] speed [3.000000];
			move frfoot to x-axis [0.900000] now;
			move frfoot to y-axis [0.359998] now;
			move frfoot to z-axis [2.269983] now;
			move frfoot to z-axis [3.529999] speed [10.000000];
			move rlfoot to x-axis [-0.900000] now;
			move rlfoot to y-axis [0.359998] now;
			move rlfoot to z-axis [-0.679999] now;
			move rlfoot to z-axis [-1.319983] speed [4.000000];
			move rrfoot to x-axis [0.900000] now;
			move rrfoot to y-axis [0.359998] now;
			move rrfoot to z-axis [-1.379999] now;
			move rrfoot to z-axis [-1.729999] speed [3.000000];
			move body to y-axis [1.289984] now;
			move body to z-axis [-0.259998] now;
			move rightchunk to x-axis [0.559998] now;
			move rightchunk to y-axis [1.289984] now;
			move rightchunk to z-axis [-0.300000] now;
			move leftchunk to x-axis [-0.559998] now;
			move leftchunk to y-axis [1.289984] now;
			move leftchunk to z-axis [-0.300000] now;
			turn frfoot to x-axis <-17.835165> now;
			turn frfoot to x-axis <-14.000000> speed <27.005495>;
			turn rightchunk to x-axis <-4.000000> now;
			turn rightchunk to x-axis <-5.500000> speed <15.500000>;
			sleep 109;
		}
		if( TRUE )
		{
			move flfoot to z-axis [1.479999] speed [16.000000];
			move frfoot to z-axis [3.479999] speed [0.000000];
			move rlfoot to z-axis [-1.629999] speed [1.000000];
			move rrfoot to z-axis [-1.629999] speed [0.000000];
			turn flfoot to x-axis <-12.000000> speed <117.027473>;
			turn frfoot to x-axis <0.000000> speed <141.027473>;
			turn rrfoot to x-axis <9.000000> speed <89.016484>;
			turn rightchunk to x-axis <0.000000> speed <50.000000>;
			turn leftchunk to x-axis <-2.500000> speed <25.500000>;
			sleep 110;
		}
		if( TRUE )
		{
			move flfoot to z-axis [2.829999] speed [12.000000];
			move frfoot to z-axis [2.519983] speed [7.000000];
			move rlfoot to z-axis [-2.059998] speed [3.000000];
			move rrfoot to z-axis [-1.579999] speed [0.000000];
			turn flfoot to x-axis <-30.016484> speed <157.027473>;
			turn rrfoot to x-axis <15.000000> speed <51.005495>;
			turn rightchunk to x-axis <3.500000> speed <37.500000>;
			turn leftchunk to x-axis <-5.500000> speed <25.500000>;
			sleep 111;
		}
		if( TRUE )
		{
			move frfoot to z-axis [2.329999] speed [1.000000];
			move rlfoot to z-axis [-2.469983] speed [3.000000];
			move rrfoot to z-axis [-0.569983] speed [9.000000];
			turn flfoot to x-axis <-18.000000> speed <103.016484>;
			turn rrfoot to x-axis <19.000000> speed <37.005495>;
			turn rightchunk to x-axis <0.500000> speed <27.500000>;
			turn leftchunk to x-axis <-3.000000> speed <20.500000>;
			sleep 110;
		}
		if( TRUE )
		{
			move frfoot to z-axis [1.719983] speed [4.000000];
			move rlfoot to z-axis [-3.229999] speed [6.000000];
			move rrfoot to z-axis [0.609998] speed [10.000000];
			turn flfoot to x-axis <0.000000> speed <164.038462>;
			turn rrfoot to x-axis <3.500000> speed <109.016484>;
			turn leftchunk to x-axis <0.000000> speed <30.500000>;
			sleep 111;
		}
		if( TRUE )
		{
			move flfoot to z-axis [1.969983] speed [7.000000];
			move frfoot to z-axis [0.679999] speed [9.000000];
			move rrfoot to z-axis [0.259998] speed [3.000000];
			turn flfoot to x-axis <0.000000> speed <6.000000>;
			turn rlfoot to x-axis <22.000000> speed <204.049451>;
			turn rrfoot to x-axis <0.000000> speed <62.005495>;
			turn leftchunk to x-axis <4.500000> speed <41.500000>;
			sleep 109;
		}
		if( TRUE )
		{
			move flfoot to z-axis [1.519983] speed [3.000000];
			move frfoot to z-axis [0.700000] speed [4.000000];
			move rlfoot to z-axis [-1.779999] speed [12.000000];
			move rrfoot to z-axis [-0.179999] speed [3.000000];
			turn rlfoot to x-axis <28.016484> speed <58.005495>;
			turn leftchunk to x-axis <5.000000> speed <5.000000>;
			sleep 111;
		}
		if( TRUE )
		{
			move flfoot to z-axis [0.969983] speed [4.000000];
			move frfoot to z-axis [-0.259998] speed [3.000000];
			move rlfoot to z-axis [-0.529999] speed [10.000000];
			move rrfoot to z-axis [-0.729999] speed [4.000000];
			turn rlfoot to x-axis <10.000000> speed <169.038462>;
			turn leftchunk to x-axis <1.000000> speed <34.500000>;
			sleep 110;
		}
		if( TRUE )
		{
			move flfoot to z-axis [0.819983] speed [0.000000];
			move frfoot to z-axis [0.300000] speed [1.000000];
			move rlfoot to z-axis [0.359998] speed [7.000000];
			move rrfoot to z-axis [-0.919983] speed [1.000000];
			turn frfoot to x-axis <-10.000000> speed <99.016484>;
			turn rlfoot to x-axis <0.000000> speed <96.016484>;
			turn rightchunk to x-axis <-0.500000> speed <13.500000>;
			turn leftchunk to x-axis <-1.000000> speed <24.000000>;
			sleep 111;
		}
		if( TRUE )
		{
			move flfoot to z-axis [0.369983] speed [3.000000];
			move frfoot to z-axis [1.219983] speed [10.000000];
			move rlfoot to z-axis [-0.429999] speed [6.000000];
			move rrfoot to z-axis [-1.369983] speed [3.000000];
			turn frfoot to x-axis <-12.000000> speed <20.000000>;
			turn rightchunk to x-axis <-2.000000> speed <13.500000>;
			sleep 110;
		}
	}
	turn rightchunk to x-axis <0.000000> speed <150.027473>;
	turn rrfoot to x-axis <0.000000> speed <150.027473>;
	turn frfoot to x-axis <0.000000> speed <150.027473>;
	turn leftchunk to x-axis <0.000000> speed <150.027473>;
	turn rlfoot to x-axis <0.000000> speed <150.027473>;
	turn flfoot to x-axis <0.000000> speed <150.027473>;
}

StopMoving()
{
	bMoving = FALSE;
}

RestoreAfterDelay()
{
	sleep 18000;
	set-signal-mask 0;
	turn turret to y-axis <0.000000> speed <60.000000>;
	turn sleeve to x-axis <0.000000> speed <60.000000>;
}

RestoreTertiary()
{
	sleep 9000;
	set-signal-mask 0;
	turn turret3 to y-axis <0.000000> speed <90.000000>;
	turn sleeve3 to x-axis <0.000000> speed <90.000000>;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	turn turret to y-axis heading speed <60.000000>;
	turn sleeve to x-axis <0.000000> - pitch speed <60.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	emit-sfx 1024 + 0 from flare;
	explode flare type NOHEATCLOUD;
	move barrel to z-axis [-4.000000] speed [500.000000];
	turn arms to y-axis <-50.000000> speed <500.000000>;
	turn sleeve to y-axis <50.000000> speed <500.000000>;
	sleep 150;
	move barrel to z-axis [0.000000] speed [2.000000];
	turn arms to y-axis <0.000000> speed <23.000000>;
	turn sleeve to y-axis <0.000000> speed <23.000000>;
}

AimFromPrimary(piecenum)
{
	piecenum = aimpoint;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	turn turret3 to y-axis heading speed <90.000000>;
	turn sleeve3 to x-axis <0.000000> - pitch speed <90.000000>;
	wait-for-turn turret3 around y-axis;
	wait-for-turn sleeve3 around x-axis;
	start-script RestoreTertiary();
	return (1);
}

FireTertiary()
{
	move barrel3 to z-axis [-1.500000] speed [500.000000];
	sleep 150;
	move barrel3 to z-axis [0.000000] speed [1.000000];
}

AimFromTertiary(piecenum)
{
	piecenum = aimpoint;
}

QueryTertiary(piecenum)
{
	piecenum = flare3;
}

SweetSpot(piecenum)
{
	piecenum = body;
}

Killed(severity, corpsetype)
{
	var Func_Var_3, Func_Var_4;
	hide flare;
	corpsetype = 2 - ( 0 == Rand( 0, 4 ) );
	explode turret type NOHEATCLOUD;
	explode barrel type NOHEATCLOUD;
	explode flare type NOHEATCLOUD;
	explode sleeve type NOHEATCLOUD;
	return (corpsetype);
}
