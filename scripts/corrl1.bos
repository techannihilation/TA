#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, rocket1, rocket2, rocket3, rocket4, rocket5, rocket6,turret, gun1, gun2, gun3, gun4, gun5, gun6;

static-var  gun_1;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

Create()
{
	dont-cache turret;
	dont-shade turret;
	dont-cache gun1;
	dont-shade gun1;
	dont-cache gun2;
	dont-shade gun2;
	dont-cache gun3;
	dont-shade gun3;
	gun_1 = rocket1;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	turn turret to y-axis heading speed <450.000000>;
	turn turret to x-axis <0.000000> - pitch speed <450.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn turret around x-axis;
	return (1);
}

FirePrimary()
{
	++gun_1;
	if( gun_1 == 7 )
	{
		gun_1 = 0;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 1 )
	{
		piecenum = rocket1;
	}
	if( gun_1 == 2 )
	{
		piecenum = rocket2;
	}
	if( gun_1 == 3 )
	{
		piecenum = rocket3;
	}
	if( gun_1 == 4 )
	{
		piecenum = rocket4;
	}
	if( gun_1 == 5 )
	{
		piecenum = rocket5;
	}
	if( gun_1 == 6 )
	{
		piecenum = rocket6;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode gun1 type NOHEATCLOUD;
		explode gun2 type NOHEATCLOUD;
		explode gun3 type NOHEATCLOUD;
		explode rocket1 type NOHEATCLOUD;
		explode rocket2 type NOHEATCLOUD;
		explode rocket3 type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD;
		explode gun1 type NOHEATCLOUD | FALL;
		explode gun2 type NOHEATCLOUD | FALL;
		explode gun3 type NOHEATCLOUD | SHATTER;
		explode rocket1 type NOHEATCLOUD | FALL;
		explode rocket2 type NOHEATCLOUD | FALL;
		explode rocket3 type NOHEATCLOUD | FALL;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD;
		explode gun1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode gun2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode gun3 type NOHEATCLOUD | SHATTER;
		explode rocket1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rocket2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rocket3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD;
	explode gun1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode gun2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode gun3 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode rocket1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rocket2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rocket3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret type NOHEATCLOUD;
	return (corpsetype);
}
