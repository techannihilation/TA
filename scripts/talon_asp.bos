#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, landpad, body, face;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	dont-shade body;
	dont-shade face;
	start-script SmokeUnit();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

QueryLandingPad(Func_Var_1, Func_Var_2)
{
	Func_Var_1 = 1;
	Func_Var_2 = 1;
}

QueryNanoPiece(piecenum)
{
	piecenum = landpad;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD  | BITMAP1;
		explode face type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD ;
		explode landpad type NOHEATCLOUD ;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | NOHEATCLOUD ;
		explode face type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD ;
		explode landpad type NOHEATCLOUD ;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | NOHEATCLOUD ;
		explode face type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD ;
		explode landpad type NOHEATCLOUD ;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | NOHEATCLOUD ;
	explode face type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD ;
	explode landpad type NOHEATCLOUD ;
	return (corpsetype);
}
