#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, storage, glow, ring, bridge, pod1, pod2, pod3, pod4, pod5, pod6, nanobeam;

static-var  statechg_DesiredState, statechg_StateChanging;


activatescr()
{
	if( TRUE )
	{
		spin ring around y-axis speed <120.000000> accelerate <0.600000>;
		spin storage around y-axis speed <-120.000000> accelerate <-0.600000>;
		sleep 1400;
	}
	sleep 50;
}

deactivatescr()
{
	if( TRUE )
	{
		stop-spin ring around y-axis decelerate <0.600000>;
		stop-spin storage around y-axis decelerate <-0.600000>;

		sleep 1400;
	}
	sleep 7;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script activatescr();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script deactivatescr();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	call-script InitState();
	start-script SmokeUnit();
	move body to y-axis [0] speed [10];
	dont-cache glow;
}

Activate()
{
	set ARMORED to 1;
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartBuilding()
{
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	set INBUILDSTANCE to 0;
}

QueryNanoPiece(piecenum)
{
	piecenum = nanobeam;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode ring type NOHEATCLOUD;
		explode bridge type NOHEATCLOUD;
		explode pod1 type NOHEATCLOUD;
		explode pod2 type NOHEATCLOUD;
		explode pod3 type NOHEATCLOUD;
		explode pod4 type NOHEATCLOUD;
		explode pod5 type NOHEATCLOUD;
		explode pod6 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode ring type NOHEATCLOUD;
		explode bridge type NOHEATCLOUD;
		explode pod1 type NOHEATCLOUD;
		explode pod2 type NOHEATCLOUD;
		explode pod3 type NOHEATCLOUD;
		explode pod4 type NOHEATCLOUD;
		explode pod5 type NOHEATCLOUD;
		explode pod6 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode ring type NOHEATCLOUD;
		explode bridge type NOHEATCLOUD;
		explode pod1 type NOHEATCLOUD;
		explode pod2 type NOHEATCLOUD;
		explode pod3 type NOHEATCLOUD;
		explode pod4 type NOHEATCLOUD;
		explode pod5 type NOHEATCLOUD;
		explode pod6 type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
		explode ring type NOHEATCLOUD;
		explode bridge type NOHEATCLOUD;
		explode pod1 type NOHEATCLOUD;
		explode pod2 type NOHEATCLOUD;
		explode pod3 type NOHEATCLOUD;
		explode pod4 type NOHEATCLOUD;
		explode pod5 type NOHEATCLOUD;
		explode pod6 type NOHEATCLOUD;
		return (corpsetype);
}
