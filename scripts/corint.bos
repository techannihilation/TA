#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, flare, turret, gun, barrel;

// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

RestoreAfterDelay()
{
	sleep 1200;
	set-signal-mask 0;
	set ARMORED to 0;
}

Create()
{
	hide flare;
	dont-cache flare;
	dont-cache turret;
	dont-cache gun;
	dont-cache barrel;
	dont-shade flare;
	dont-shade turret;
	dont-shade gun;
	dont-shade barrel;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	set ARMORED to 1;
	turn turret to y-axis heading speed <5.000000>;
	turn gun to x-axis <0.000000> - pitch speed <3.500000>;
	wait-for-turn turret around y-axis;
	wait-for-turn gun around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	move barrel to z-axis [-7.500000] speed [500.000000];
	move gun to z-axis [-4.000000] speed [500.000000];
	wait-for-move barrel along z-axis;
	emit-sfx 1024 + 0 from flare;
	sleep 200;
	move barrel to z-axis [0.000000] speed [3.500000];
	move gun to z-axis [0.000000] speed [3.500000];
}

TargetCleared(Func_Var_1)
{
	if( Func_Var_1 == 1 )
	{
		signal SIG_AIM;
		stop-spin turret around y-axis;
		stop-spin gun around x-axis;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = gun;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide flare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel type NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode flare type NOHEATCLOUD;
		explode gun type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrel type NOHEATCLOUD | FALL;
		explode base type NOHEATCLOUD;
		explode flare type NOHEATCLOUD | FALL;
		explode gun type NOHEATCLOUD | SHATTER;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode barrel type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode base type NOHEATCLOUD;
		explode flare type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode gun type NOHEATCLOUD | SHATTER;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode barrel type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode base type NOHEATCLOUD;
	explode flare type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode gun type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode turret type NOHEATCLOUD;
	return (corpsetype);
}
