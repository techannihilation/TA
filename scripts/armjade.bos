#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  Base, Body, Barrel1, barrel2, Flash1, Flash2;

static-var  restore_delay, unitviewer, gun_1;

// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from Base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	unitviewer = FALSE;
	restore_delay = 2000;
	hide Flash1;
	hide Flash2;
	gun_1 = Body;
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

RestoreAfterDelay()
{
	sleep restore_delay;
}

Demo()
{
	unitviewer = TRUE;
}

SweetSpot(piecenum)
{
	piecenum = Base;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 1 )
	{
		piecenum = Flash1;
	}
	if( gun_1 == 0 )
	{
		piecenum = Flash2;
	}
}

AimFromPrimary(piecenum)
{
	if( gun_1 == 1 )
	{
		piecenum = Barrel1;
	}
	if( gun_1 == 0 )
	{
		piecenum = barrel2;
	}
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 == 1 )
	{
		show Flash1;
		sleep 500;
		hide Flash1;
	}
	if( gun_1 == 0 )
	{
		show Flash2;
		sleep 500;
		hide Flash2;
	}
	gun_1 = !gun_1;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode Base type NOHEATCLOUD;
		explode Body type NOHEATCLOUD;
		explode Barrel1 type NOHEATCLOUD;
		explode barrel2 type NOHEATCLOUD;
		explode Flash1 type NOHEATCLOUD;
		explode Flash2 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode Base type NOHEATCLOUD | SHATTER;
		explode Body type NOHEATCLOUD | SHATTER;
		explode Barrel1 type NOHEATCLOUD | SHATTER;
		explode barrel2 type NOHEATCLOUD | SHATTER;
		explode Flash1 type NOHEATCLOUD | SHATTER;
		explode Flash2 type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode Base type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode Body type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode Barrel1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode Flash1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode Flash2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode Base type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Body type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Barrel1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Flash1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Flash2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
