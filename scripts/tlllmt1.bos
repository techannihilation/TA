#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, tower, bearing, turret, barrel1, barrel2, barrel3, barrel4, barrel5, barrel6, barrel7, barrel8,
       flare1, flare2, flare3, flare4, flare5, flare6, flare7, flare8, turret2;

static-var  gun_1;

// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from turret;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flare1;
	hide flare2;
	hide flare3;
	hide flare4;
	hide flare5;
	hide flare6;
	hide flare7;
	hide flare8;
	dont-shade tower;
	dont-shade turret;
	dont-shade flare1;
	dont-shade flare2;
	dont-shade flare3;
	dont-shade flare4;
	dont-shade flare5;
	dont-shade flare6;
	dont-shade flare7;
	dont-shade flare8;	
	dont-shade barrel1;
	dont-shade barrel2;
	dont-shade barrel3;
	dont-shade barrel4;
	dont-shade barrel5;
	dont-shade barrel6;
	dont-shade barrel7;
	dont-shade barrel8;
	dont-cache tower;
	dont-cache turret2;
	dont-cache turret;
	dont-cache flare1;
	dont-cache flare2;
	dont-cache flare3;
	dont-cache flare4;
	dont-cache flare5;
	dont-cache flare6;
	dont-cache flare7;
	dont-cache flare8;
	dont-cache barrel1;
	dont-cache barrel2;
	dont-cache barrel3;
	dont-cache barrel4;
	dont-cache barrel5;
	dont-cache barrel6;
	dont-cache barrel7;
	dont-cache barrel8;
	gun_1 = 0;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn bearing to y-axis heading speed <450.060440>;
	wait-for-turn bearing around y-axis;
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		show flare1;
		sleep 200;
		hide flare1;
		turn turret to y-axis <315.000000> speed <450.038462>;
		gun_1 = 1;
		return (0);
	}
	if( gun_1 == 1 )
	{
		show flare5;
		sleep 200;
		hide flare5;
		turn turret to y-axis <270.000000> speed <450.038462>;
		gun_1 = 2;
		return (0);
	}
	if( gun_1 == 2 )
	{
		show flare2;
		sleep 200;
		hide flare2;
		turn turret to y-axis <225.000000> speed <450.038462>;
		gun_1 = 3;
		return (0);
	}
	if( gun_1 == 3 )
	{
		show flare6;
		sleep 200;
		hide flare6;
		turn turret to y-axis <180.000000> speed <450.038462>;
		gun_1 = 4;
		return (0);
	}
	if( gun_1 == 4 )
	{
		show flare3;
		sleep 200;
		hide flare3;
		turn turret to y-axis <135.000000> speed <450.038462>;
		gun_1 = 5;
		return (0);
	}
	if( gun_1 == 5 )
	{
		show flare7;
		sleep 200;
		hide flare7;
		turn turret to y-axis <90.000000> speed <450.038462>;
		gun_1 = 6;
		return (0);
	}
	if( gun_1 == 6 )
	{
		show flare4;
		sleep 200;
		hide flare4;
		turn turret to y-axis <45.000000> speed <450.038462>;
		gun_1 = 7;
		return (0);
	}
	if( gun_1 == 7 )
	{
		show flare8;
		sleep 200;
		hide flare8;
		turn turret to y-axis <0.000000> speed <450.038462>;
		gun_1 = 0;
		return (0);
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare1;
	}
	if( gun_1 == 1 )
	{
		piecenum = flare5;
	}
	if( gun_1 == 2 )
	{
		piecenum = flare2;
	}
	if( gun_1 == 3 )
	{
		piecenum = flare6;
	}
	if( gun_1 == 4 )
	{
		piecenum = flare3;
	}
	if( gun_1 == 5 )
	{
		piecenum = flare7;
	}
	if( gun_1 == 6 )
	{
		piecenum = flare4;
	}
	if( gun_1 == 7 )
	{
		piecenum = flare8;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide flare1;
	hide flare2;
	hide flare3;
	hide flare4;
	explode barrel1 type NOHEATCLOUD | FALL | SMOKE | EXPLODE_ON_HIT;
	explode barrel2 type NOHEATCLOUD | FALL | SMOKE | EXPLODE_ON_HIT;
	explode barrel3 type NOHEATCLOUD | FALL | SMOKE | EXPLODE_ON_HIT;
	explode barrel4 type NOHEATCLOUD | FALL | SMOKE | EXPLODE_ON_HIT;
	explode turret type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	if( severity <= 25 )
	{
		corpsetype = 1;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		return (corpsetype);
	}
	corpsetype = 3;
	return (corpsetype);
}
