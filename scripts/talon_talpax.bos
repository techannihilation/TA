#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, glow, spin1, spin2, spin3, circles, circle1, circle2, circle3, circle4, circle5, circle6, circle7;

Create()
{
	dont-shade body;
	dont-shade glow;
	dont-shade circle1;
	dont-shade circle2;
	dont-shade circle3;
	dont-shade circle4;
	dont-shade circle5;
	dont-shade circle6;
	dont-shade circle7;

	dont-cache glow;
	dont-cache circle1;
	dont-cache circle2;
	dont-cache circle3;
	dont-cache circle4;
	dont-cache circle5;
	dont-cache circle6;
	dont-cache circle7;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 100;
	}
	while(1)
	{
		//spin circle1 around y-axis speed rand(<-100>,<100>);
		//sleep rand(0,1000);
		spin circle2 around y-axis speed rand(<-100>,<100>);
		//sleep rand(0,1000);
		//spin circle3 around y-axis speed rand(<-100>,<100>);
		//sleep rand(0,1000);
		//spin circle4 around y-axis speed rand(<-100>,<100>);
		//sleep rand(0,1000);
		//spin circle5 around y-axis speed rand(<-100>,<100>);
		//sleep rand(0,1000);
		//spin circle6 around y-axis speed rand(<-100>,<100>);
		//sleep rand(0,1000);
		//spin circle7 around y-axis speed rand(<-100>,<100>);
		sleep rand(0,1500);
		spin circles around y-axis speed rand(<-100>,<100>);
		sleep rand(0,1500);
	}
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode circle2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD;
		explode circle2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD;
		explode circle2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD;
	explode circle2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
