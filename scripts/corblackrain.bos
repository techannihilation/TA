#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, frw, flw, rrw, rlw, wings, body, noze, ribbon1, ribbon2, ribbon3, ribbon4,
	   flak1, flak2, flak3, flak4, flak5, flak6, flak7, flak8, flak9, flak10, flak11, flak12, flak13,
	   flare1, flare2, flare3, flare4, flare5, flare6, flare7, flare8, flare9, flare10, flare11, flare12, flare13,
	   launcher1, launcher2, launcher3, launcher4, launcher5, launcher6, launcher7, launcher8, launcher9, launcher10, launcher11, launcher12, launcher13,
	   scream1, scream2, flareS1, flareS2;

static-var  Static_Var_12, Static_Var_13;

#define SIG_AIM 		2
#define SIG_AIM2 		4
#define SIG_AIM3 		8
#define SIG_AIM4 		16
#define SIG_AIM5 		32
#define SIG_AIM6 		64
#define SIG_AIM7 		128
#define SIG_AIM8 		256
#define SIG_AIM9 		512
#define SIG_AIM10		1024
#define SIG_AIM11		2048
#define SIG_AIM12		3072
#define SIG_AIM13		4096
#define SIG_AIM14		5120
#define SIG_AIM15		6244

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			Func_Var_4 = Rand( 1, 4 );
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from base;
			}
			if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from flw;
			}
			if( Func_Var_4 == 3 )
			{
				emit-sfx smoketype from rlw;
			}
			if( Func_Var_4 == 4 )
			{
				emit-sfx smoketype from rrw;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Go()
{
	turn frw to z-axis <0.000000> speed <50.027473>;
	turn flw to z-axis <0.000000> speed <50.027473>;
	turn rrw to z-axis <0.000000> speed <50.027473>;
	turn rlw to z-axis <0.000000> speed <50.027473>;
}

Stop()
{
	turn frw to z-axis <110.000000> speed <50.027473>;
	turn flw to z-axis <-110.000000> speed <50.027473>;
	turn rrw to z-axis <110.000000> speed <50.027473>;
	turn rlw to z-axis <-110.000000> speed <50.027473>;
}

InitState()
{
	Static_Var_12 = 1;
	Static_Var_13 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_13 )
	{
		Static_Var_12 = requestedstate;
		return (0);
	}
	Static_Var_13 = 1;
	currentstate = Static_Var_12;
	Static_Var_12 = requestedstate;
	while( Static_Var_12 != currentstate )
	{
		if( Static_Var_12 == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( Static_Var_12 == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	Static_Var_13 = 0;
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

Create()
{
	turn flak1 to y-axis <180.000000> now;
	turn flak13 to y-axis <180.000000> now;
	call-script InitState();
	start-script SmokeUnit();
	call-script Stop();
}

AimFromPrimary(piecenum)
{
	piecenum = flareS1;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	return (1);
}

QueryPrimary(piecenum)
{
	piecenum = flareS1;
}

AimFromSecondary(piecenum)
{
	piecenum = flareS2;
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2;
	return (1);
}

QuerySecondary(piecenum)
{
	piecenum = flareS2;
}

// FLAK SCRIPT
AimFromWeapon3(piecenum)
{
	piecenum = flak3;
}

AimFromWeapon4(piecenum)
{
	piecenum = flak4;
}

AimFromWeapon5(piecenum)
{
	piecenum = flak5;
}
AimFromWeapon6(piecenum)
{
	piecenum = flak6;
}
AimFromWeapon7(piecenum)
{
	piecenum = flak7;
}
AimFromWeapon8(piecenum)
{
	piecenum = flak8;
}
AimFromWeapon9(piecenum)
{
	piecenum = flak9;
}
AimFromWeapon10(piecenum)
{
	piecenum = flak10;
}
AimFromWeapon11(piecenum)
{
	piecenum = flak11;
}
AimFromWeapon12(piecenum)
{
	piecenum = flak12;
}
AimFromWeapon13(piecenum)
{
	piecenum = flak13;
}
AimFromWeapon14(piecenum)
{
	piecenum = flak1;
}
AimFromWeapon15(piecenum)
{
	piecenum = flak2;
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3;
	turn flak3 to y-axis heading speed <300.000000>;
	turn launcher3 to x-axis <0.000000> - pitch speed <250.000000>;
	wait-for-turn flak3 around y-axis;
	wait-for-turn launcher3 around x-axis;
	return (1);
}
AimWeapon4(heading, pitch)
{
	signal SIG_AIM4;
	set-signal-mask SIG_AIM4;
	turn flak4 to y-axis heading speed <300.000000>;
	turn launcher4 to x-axis <0.000000> - pitch speed <250.000000>;
	wait-for-turn flak4 around y-axis;
	wait-for-turn launcher4 around x-axis;
	return (1);
}
AimWeapon5(heading, pitch)
{
	signal SIG_AIM5;
	set-signal-mask SIG_AIM5;
	turn flak5 to y-axis heading speed <300.000000>;
	turn launcher5 to x-axis <0.000000> - pitch speed <250.000000>;
	wait-for-turn flak5 around y-axis;
	wait-for-turn launcher5 around x-axis;
	return (1);
}
AimWeapon6(heading, pitch)
{
	signal SIG_AIM6;
	set-signal-mask SIG_AIM6;
	turn flak6 to y-axis heading speed <300.000000>;
	turn launcher6 to x-axis <0.000000> - pitch speed <250.000000>;
	wait-for-turn flak6 around y-axis;
	wait-for-turn launcher6 around x-axis;
	return (1);
}
AimWeapon7(heading, pitch)
{
	signal SIG_AIM7;
	set-signal-mask SIG_AIM7;
	turn flak7 to y-axis heading speed <300.000000>;
	turn launcher7 to x-axis <0.000000> - pitch speed <250.000000>;
	wait-for-turn flak7 around y-axis;
	wait-for-turn launcher7 around x-axis;
	return (1);
}
AimWeapon8(heading, pitch)
{
	signal SIG_AIM8;
	set-signal-mask SIG_AIM8;
	turn flak8 to y-axis heading speed <300.000000>;
	turn launcher8 to x-axis <0.000000> - pitch speed <250.000000>;
	wait-for-turn flak8 around y-axis;
	wait-for-turn launcher8 around x-axis;
	return (1);
}
AimWeapon9(heading, pitch)
{
	signal SIG_AIM9;
	set-signal-mask SIG_AIM9;
	turn flak9 to y-axis heading speed <300.000000>;
	turn launcher9 to x-axis <0.000000> - pitch speed <250.000000>;
	wait-for-turn flak9 around y-axis;
	wait-for-turn launcher9 around x-axis;
	return (1);
}
AimWeapon10(heading, pitch)
{
	signal SIG_AIM10;
	set-signal-mask SIG_AIM10;
	turn flak10 to y-axis heading speed <300.000000>;
	turn launcher10 to x-axis <0.000000> - pitch speed <250.000000>;
	wait-for-turn flak10 around y-axis;
	wait-for-turn launcher10 around x-axis;
	return (1);
}
AimWeapon11(heading, pitch)
{
	signal SIG_AIM11;
	set-signal-mask SIG_AIM11;
	turn flak11 to y-axis heading speed <300.000000>;
	turn launcher11 to x-axis <0.000000> - pitch speed <250.000000>;
	wait-for-turn flak11 around y-axis;
	wait-for-turn launcher11 around x-axis;
	return (1);
}
AimWeapon12(heading, pitch)
{
	signal SIG_AIM12;
	set-signal-mask SIG_AIM12;
	turn flak12 to y-axis heading speed <300.000000>;
	turn launcher12 to x-axis <0.000000> - pitch speed <250.000000>;
	wait-for-turn flak12 around y-axis;
	wait-for-turn launcher12 around x-axis;
	return (1);
}
AimWeapon13(heading, pitch)
{
	signal SIG_AIM13;
	set-signal-mask SIG_AIM13;
	turn flak13 to y-axis heading speed <300.000000>;
	turn launcher13 to x-axis <0.000000> - pitch speed <250.000000>;
	wait-for-turn flak13 around y-axis;
	wait-for-turn launcher13 around x-axis;
	return (1);
}
AimWeapon14(heading, pitch)
{
	signal SIG_AIM14;
	set-signal-mask SIG_AIM14;
	turn flak1 to y-axis heading speed <300.000000>;
	turn launcher1 to x-axis <0.000000> - pitch speed <250.000000>;
	wait-for-turn flak1 around y-axis;
	wait-for-turn launcher1 around x-axis;
	return (1);
}
AimWeapon15(heading, pitch)
{
	signal SIG_AIM15;
	set-signal-mask SIG_AIM15;
	turn flak2 to y-axis heading speed <300.000000>;
	turn launcher2 to x-axis <0.000000> - pitch speed <250.000000>;
	wait-for-turn flak2 around y-axis;
	wait-for-turn launcher2 around x-axis;
	return (1);
}

QueryWeapon3(piecenum)
{
	piecenum = flare3;
}
QueryWeapon4(piecenum)
{
	piecenum = flare4;
}
QueryWeapon5(piecenum)
{
	piecenum = flare5;
}
QueryWeapon6(piecenum)
{
	piecenum = flare6;
}
QueryWeapon7(piecenum)
{
	piecenum = flare7;
}
QueryWeapon8(piecenum)
{
	piecenum = flare8;
}
QueryWeapon9(piecenum)
{
	piecenum = flare9;
}
QueryWeapon10(piecenum)
{
	piecenum = flare10;
}
QueryWeapon11(piecenum)
{
	piecenum = flare11;
}
QueryWeapon12(piecenum)
{
	piecenum = flare12;
}
QueryWeapon13(piecenum)
{
	piecenum = flare13;
}
QueryWeapon14(piecenum)
{
	piecenum = flare1;
}
QueryWeapon15(piecenum)
{
	piecenum = flare2;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type SHATTER | NOHEATCLOUD;
		explode frw type NOHEATCLOUD;
		explode flw type NOHEATCLOUD;
		explode rlw type NOHEATCLOUD;
		explode rrw type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type SHATTER | NOHEATCLOUD;
		explode frw type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode flw type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode rlw type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode rrw type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type SHATTER | NOHEATCLOUD;
		explode frw type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode flw type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode rlw type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode rrw type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type SHATTER | NOHEATCLOUD;
	explode frw type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode flw type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rlw type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rrw type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	return (corpsetype);
}
