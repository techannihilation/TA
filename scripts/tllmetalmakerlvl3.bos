#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, pumpingrotor, sphere, top5, smoke1, smoke2, smoke3, smoke4,
       top1, top2, top3, top4, smoke5, smoke6, smoke7, smoke8,
       teeth1, teeth2, teeth3, teeth4, globe1, globe2, globe3, globe4;

static-var  Static_Var_1, Static_Var_2, Static_Var_3;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

activatescr()
{
	if( TRUE )
	{
		move top1 to y-axis [0.] now;
		move top1 to y-axis [4.] speed [1.];
		move top2 to y-axis [0.] now;
		move top2 to y-axis [4.] speed [1.];
		move top3 to y-axis [0.] now;
		move top3 to y-axis [4.] speed [1.];
		move top4 to y-axis [0.] now;
		move top4 to y-axis [4.] speed [1.];
		turn teeth1 to x-axis <25.> speed <3.>;
		turn teeth2 to z-axis <25.> speed <3.>;
		turn teeth3 to x-axis <-25.> speed <3.>;
		turn teeth4 to z-axis <-25.> speed <3.>;
		
		spin sphere around y-axis speed <-150.> accelerate <-50.>;
		sleep 100;
		spin pumpingrotor around y-axis speed <35.> accelerate <5.>;
		sleep 600;
	}
	
	signal 2;
	set-signal-mask 2;
	
	while( Static_Var_3 )
	{
		emit-sfx 256 | 1 from smoke1;
		emit-sfx 256 | 1 from smoke2;
		emit-sfx 256 | 1 from smoke3;
		emit-sfx 256 | 1 from smoke4;
		emit-sfx 256 | 1 from smoke5;
		emit-sfx 256 | 1 from smoke6;
		emit-sfx 256 | 1 from smoke7;
		emit-sfx 256 | 1 from smoke8;
		sleep 250;
		emit-sfx 256 | 1 from smoke1;
		emit-sfx 256 | 1 from smoke2;
		emit-sfx 256 | 1 from smoke3;
		emit-sfx 256 | 1 from smoke4;
		emit-sfx 256 | 1 from smoke5;
		emit-sfx 256 | 1 from smoke6;
		emit-sfx 256 | 1 from smoke7;
		emit-sfx 256 | 1 from smoke8;
		sleep 250;
		emit-sfx 256 | 1 from smoke1;
		emit-sfx 256 | 1 from smoke2;
		emit-sfx 256 | 1 from smoke3;
		emit-sfx 256 | 1 from smoke4;
		emit-sfx 256 | 1 from smoke5;
		emit-sfx 256 | 1 from smoke6;
		emit-sfx 256 | 1 from smoke7;
		emit-sfx 256 | 1 from smoke8;
		sleep 250;
	}
}

deactivatescr()
{
	if( TRUE )
	{
		move top1 to y-axis [0.] speed [2.];
		move top2 to y-axis [0.] speed [2.];
		move top3 to y-axis [0.] speed [2.];
		move top4 to y-axis [0.] speed [2.];
		turn teeth1 to x-axis <0.> speed <5.>;
		turn teeth2 to z-axis <0.> speed <5.>;
		turn teeth3 to x-axis <0.> speed <5.>;
		turn teeth4 to z-axis <0.> speed <5.>;
		spin sphere around y-axis speed <0.000000> accelerate <15.>;
		spin pumpingrotor around y-axis speed <0.000000> accelerate <5.>;
	}
}

Go()
{
	Static_Var_3 = 1;
	call-script activatescr();
}

Stop()
{
	Static_Var_3 = 0;
	call-script deactivatescr();
}

Create()
{
	dont-cache top1;
	dont-cache top2;
	dont-cache top3;
	dont-cache top4;
	dont-cache top5;
	dont-cache sphere;
	dont-cache globe1;
	dont-cache globe2;
	dont-cache globe3;
	dont-cache globe4;
	Static_Var_3 = 0;
	start-script SmokeUnit();
}

MMStatus(Func_Var_1)
{
	Static_Var_1 = Func_Var_1;
}

ImAMetalMaker()
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 150;
	}
	Static_Var_2 = -1;
	while( TRUE )
	{
		if( Static_Var_1 == 1 )
		{
			if( Static_Var_2 != 1 )
			{
				call-script Go();
				Static_Var_2 = 1;
			}
		}
		else if( Static_Var_2 != 0 )
		{
			call-script Stop();
			Static_Var_2 = 0;
		}
		sleep 1000;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Activate()
{
	Static_Var_3 = 1;
	start-script activatescr();
}

Deactivate()
{
	Static_Var_3 = 0;
	start-script deactivatescr();
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode pumpingrotor type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode sphere type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode sphere type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode pumpingrotor type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode sphere type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode pumpingrotor type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode pumpingrotor type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode sphere type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
	return (corpsetype);
}
