#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, dish1, dish2, dish3, dish4, wheel, arm;

static-var  tidal_Spd, statechg_DesiredState, statechg_StateChanging;


HitByWeapon(anglex, anglez)
{
	signal 16;
	set-signal-mask 16;
	set ACTIVATION to 0;
	sleep 8000;
	set ACTIVATION to 1;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Tangue(Func_Var_1, Func_Var_2, Func_Var_3)
{
	Func_Var_1 = -18;
	Func_Var_2 = -18;
	while( TRUE )
	{
		while( get ABS(Func_Var_2) < 238 )
		{
			Func_Var_3 = 263 - get ABS(Func_Var_2);
			turn base to x-axis Func_Var_2 speed Func_Var_3 * <0.027473>;
			turn base to z-axis Func_Var_2 speed Func_Var_3 * <0.027473>;
			wait-for-turn base around x-axis;
			wait-for-turn base around z-axis;
			Func_Var_2 = Func_Var_2 + Func_Var_1;
		}
		Func_Var_1 = 0 - Func_Var_1;
		Func_Var_2 = Func_Var_2 + Func_Var_1 + Func_Var_1;
	}
}

TidalSpeed(Func_Var_1)
{
	tidal_Spd = Func_Var_1;
}

Go()
{
	set ARMORED to 0;
	spin wheel around y-axis speed tidal_Spd * <1.000000>;
	turn dish1 to y-axis <180.000000> speed <180.000000>;
	turn dish2 to y-axis <180.000000> speed <180.000000>;
	turn dish3 to y-axis <180.000000> speed <180.000000>;
	turn dish4 to y-axis <180.000000> speed <180.000000>;
	wait-for-turn dish1 around y-axis;
	wait-for-turn dish2 around y-axis;
	wait-for-turn dish3 around y-axis;
	wait-for-turn dish4 around y-axis;
	turn dish1 to x-axis <-60.000000> speed <85.000000>;
	turn dish3 to x-axis <60.000000> speed <85.000000>;
	turn dish2 to z-axis <60.000000> speed <85.000000>;
	turn dish4 to z-axis <-60.000000> speed <85.000000>;
}

Stop()
{
	turn dish1 to x-axis <0.000000> speed <105.000000>;
	turn dish3 to x-axis <0.000000> speed <105.000000>;
	turn dish2 to z-axis <0.000000> speed <105.000000>;
	turn dish4 to z-axis <0.000000> speed <105.000000>;
	wait-for-turn dish1 around x-axis;
	wait-for-turn dish2 around x-axis;
	wait-for-turn dish3 around z-axis;
	wait-for-turn dish4 around z-axis;
	turn dish1 to y-axis <0.000000> speed <250.000000>;
	turn dish2 to y-axis <0.000000> speed <250.000000>;
	turn dish3 to y-axis <0.000000> speed <250.000000>;
	turn dish4 to y-axis <0.000000> speed <250.000000>;
	set ARMORED to 1;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	dont-cache body;
	dont-cache arm;
	dont-cache wheel;
	dont-cache dish1;
	dont-cache dish2;
	dont-cache dish3;
	dont-cache dish4;
	turn body to y-axis <-225.000000> now;
	call-script InitState();
	start-script SmokeUnit();
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}
	start-script Tangue();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode dish1 type NOHEATCLOUD;
		explode dish2 type NOHEATCLOUD;
		explode dish3 type NOHEATCLOUD;
		explode dish4 type NOHEATCLOUD;
		explode body type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode dish1 type NOHEATCLOUD | FALL;
		explode dish2 type NOHEATCLOUD | FALL;
		explode dish3 type NOHEATCLOUD | FALL;
		explode dish4 type NOHEATCLOUD | FALL;
		explode body type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode dish1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode dish2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode dish3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode dish4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode body type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode dish1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode dish2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode dish3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode dish4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode body type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	return (corpsetype);
}
