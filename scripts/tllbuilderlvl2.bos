#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base ,body ,engine1 ,engine2 ,p1 ,p2 ,nano1 ,nano2;

static-var spray, statechg_DesiredState, statechg_StateChanging;


activatescr()
{
	turn engine1 to x-axis <0> speed <30>;	
	turn engine2 to x-axis <0> speed <30>;
}

deactivatescr()
{
	turn engine1 to x-axis <-45> speed <60>;	
	turn engine2 to x-axis <-45> speed <60>;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script activatescr();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script deactivatescr();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	spray = 0;
	turn engine1 to x-axis <-45> now;	
	turn engine2 to x-axis <-45> now;
	call-script InitState();
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartBuilding()
{
	move p1 to x-axis [-3] speed [2];
	move p2 to x-axis [3] speed [2];
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	set INBUILDSTANCE to 0;
	move p1 to x-axis [0] speed [3];
	move p2 to x-axis [0] speed [3];
}

QueryNanoPiece(piecenum)
{
	if( spray == 0 )
	{
		piecenum = nano1;
	}
	if( spray != 0 )
	{
		piecenum = nano2;
	}
	spray = !spray;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD |	BITMAPONLY | BITMAP1;
		explode p1 type NOHEATCLOUD | BITMAPONLY | BITMAP2;
		explode p2 type NOHEATCLOUD | BITMAPONLY | BITMAP3;
		explode engine2 type NOHEATCLOUD | BITMAPONLY | BITMAP5;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD | SHATTER | BITMAP4;
		explode p2 type NOHEATCLOUD | SHATTER | BITMAP1;
		explode engine2 type NOHEATCLOUD | SHATTER | BITMAP4;
		explode engine1 type NOHEATCLOUD | SHATTER | BITMAP5;
		explode p1 type NOHEATCLOUD | SHATTER | BITMAP3;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type NOHEATCLOUD | SHATTER | BITMAP4;
		explode p2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode p1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode engine2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode engine1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD | SHATTER | BITMAP4;
	explode engine1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode p2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode p1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode engine2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	return (corpsetype);
}
