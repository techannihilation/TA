#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  beam, base, cover1, cover2, cover3, cover4, cover5, cover6,
       nano, turret, wheel1, wheel2, wheel3, wheel4;

static-var  Static_Var_1, Static_Var_2, statechg_DesiredState, statechg_StateChanging;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

ShieldOn()
{
	Static_Var_1 = 1;
}

ShieldOff()
{
	Static_Var_1 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script ShieldOn();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script ShieldOff();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

Create()
{
	Static_Var_1 = 0;
	Static_Var_2 = 4;
	call-script InitState();
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

AimPrimary(heading, pitch)
{
	sleep 100;
	return (Static_Var_1);
}

setSFXoccupy(state)
{
	Static_Var_2 = state;
}

StartMoving()
{
	spin wheel1 around x-axis speed <120.000000> accelerate <15.000000>;
	spin wheel2 around x-axis speed <120.000000> accelerate <15.000000>;
	spin wheel3 around x-axis speed <120.000000> accelerate <15.000000>;
	spin wheel4 around x-axis speed <120.000000> accelerate <15.000000>;
}

StopMoving()
{
	stop-spin wheel1 around x-axis;
	stop-spin wheel2 around x-axis;
	stop-spin wheel3 around x-axis;
	stop-spin wheel4 around x-axis;
}

QueryNanoPiece(piecenum)
{
	piecenum = beam;
}


SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode nano type BITMAPONLY | BITMAP1;
		explode base type BITMAPONLY | BITMAP1;
		explode beam type BITMAPONLY | BITMAP1;
		explode cover1 type BITMAPONLY | BITMAP1;
		explode cover2 type BITMAPONLY | BITMAP5;
		explode nano type BITMAPONLY | BITMAP1;
		explode cover5 type BITMAPONLY | BITMAP1;
		explode turret type BITMAPONLY | BITMAP1;
		explode wheel1 type FALL | BITMAP1;
		explode wheel2 type FALL | BITMAP1;
		explode wheel3 type FALL | BITMAP1;
		explode wheel4 type FALL | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode nano type FALL | BITMAP1;
		explode base type BITMAPONLY | BITMAP1;
		explode beam type FALL | BITMAP1;
		explode cover1 type BITMAPONLY | BITMAP1;
		explode cover2 type BITMAPONLY | BITMAP5;
		explode nano type SHATTER | BITMAP1;
		explode cover5 type BITMAPONLY | BITMAP1;
		explode turret type FALL | BITMAP1;
		explode wheel1 type FALL | BITMAP1;
		explode wheel2 type FALL | BITMAP1;
		explode wheel3 type FALL | BITMAP1;
		explode wheel4 type FALL | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode nano type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode base type BITMAPONLY | BITMAP1;
		explode beam type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode cover1 type BITMAPONLY | BITMAP1;
		explode cover2 type BITMAPONLY | BITMAP5;
		explode nano type SHATTER | BITMAP1;
		explode cover5 type BITMAPONLY | BITMAP1;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode wheel1 type FALL | BITMAP1;
		explode wheel2 type FALL | BITMAP1;
		explode wheel3 type FALL | BITMAP1;
		explode wheel4 type FALL | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode nano type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode base type BITMAPONLY | BITMAP1;
	explode beam type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode cover1 type BITMAPONLY | BITMAP1;
	explode cover2 type BITMAPONLY | BITMAP5;
	explode nano type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode cover5 type BITMAPONLY | BITMAP1;
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode wheel1 type FALL | BITMAP1;
	explode wheel2 type FALL | BITMAP1;
	explode wheel3 type FALL | BITMAP1;
	explode wheel4 type FALL | BITMAP1;
}
