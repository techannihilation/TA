#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, flare3, flare4, barrel1, barrel2,
       barrel3, barrel4,  base, body, turret1, sleeve1,
       turret2, sleeve2, w1, w2, w3, w4, w5, w6,
       w7, w8, w9, w10, w11, w12, w13, w14,
       w15, w16, w17, w18, w19, w20, w21, w22,
       w23, w24, wakes, boob, miss;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7, Static_Var_8, Static_Var_9, Static_Var_10;


ProjXPW(Func_Var_1, Func_Var_2)
{
	if( Func_Var_2 < -21840 )
	{
		Static_Var_9 = Func_Var_1 * ( Func_Var_2 + 32760 ) / 10920;
	}
	else if( Func_Var_2 > 21840 )
	{
		Static_Var_9 = Func_Var_1 * ( 32760 - Func_Var_2 ) / 10920;
	}
	else if( Func_Var_2 < -10920 )
	{
		Static_Var_9 = 0 - Func_Var_1;
	}
	else if( Func_Var_2 > 10920 )
	{
		Static_Var_9 = Func_Var_1;
	}
	else
	{
		Static_Var_9 = Func_Var_1 * Func_Var_2 / 10920;
	}
}

RockZ(Func_Var_1, Func_Var_2)
{
	signal 16;
	set-signal-mask 16;
	call-script ProjXPW(10920 / Func_Var_2,Func_Var_1);
	Static_Var_10 = Static_Var_10 + Static_Var_9;
	Static_Var_9 = get ABS(Static_Var_10);
	while( Static_Var_9 > 91 )
	{
		turn base to z-axis Static_Var_10 speed Static_Var_9 * <0.>;
		wait-for-turn base around z-axis;
		Static_Var_10 = Static_Var_10 * -1 / 2;
		Static_Var_9 = get ABS(Static_Var_10);
	}
	turn base to z-axis <0.> speed <2.>;
}

RockUnit(anglex, anglez)
{
	signal 8;
	set-signal-mask 8;
	turn body to x-axis anglex speed <50.>;
	turn body to z-axis anglez speed <50.>;
	wait-for-turn body around z-axis;
	wait-for-turn body around x-axis;
	turn body to z-axis <0.> speed <20.>;
	turn body to x-axis <0.> speed <20.>;
}

WobbleUnit()
{
	while( TRUE )
	{
		if( Static_Var_7 )
		{
			move base to y-axis [1.] speed [3.];
		}
		else
		{
			move base to y-axis [-1.] speed [3.];
		}
		Static_Var_7 = !Static_Var_7;
		sleep 750;
	}
}

HitByWeapon(anglex, anglez)
{
	signal 8;
	set-signal-mask 8;
	turn body to z-axis <0.> * anglez speed <105.>;
	turn body to x-axis <0.> * anglex speed <105.>;
	wait-for-turn body around z-axis;
	wait-for-turn body around x-axis;
	turn body to z-axis <0.> speed <30.>;
	turn body to x-axis <0.> speed <30.>;
}

BankClerck(Func_Var_1, Func_Var_2, Func_Var_3)
{
	while( TRUE )
	{
		Func_Var_1 = get PIECE_XZ(base);
		Func_Var_3 = 0;
		if( get XZ_HYPOT(Func_Var_1 - Func_Var_2) >= 163840 )
		{
			Func_Var_3 = 0 - get XZ_ATAN(Func_Var_2 - Func_Var_1) * 40 / 20;
		}
		turn body to z-axis Func_Var_3 speed <20.>;
		Func_Var_2 = Func_Var_1;
		sleep 300;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script WobbleUnit();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

wakes2()
{
	while( TRUE )
	{
		if( Static_Var_6 == 2 OR Static_Var_6 == 1 )
		{
			emit-sfx 3 from w1;
			emit-sfx 3 from w2;
			emit-sfx 3 from w3;
			emit-sfx 3 from w4;
			emit-sfx 3 from w5;
			emit-sfx 3 from w6;
			emit-sfx 3 from w7;
			emit-sfx 3 from w8;
			emit-sfx 3 from w9;
			emit-sfx 3 from w10;
			emit-sfx 3 from w11;
			emit-sfx 3 from w12;
			emit-sfx 3 from w13;
			emit-sfx 3 from w14;
			emit-sfx 3 from w15;
			emit-sfx 3 from w16;
			emit-sfx 3 from w17;
			emit-sfx 3 from w18;
			emit-sfx 3 from w19;
			emit-sfx 3 from w20;
			emit-sfx 3 from w21;
			emit-sfx 3 from w22;
			emit-sfx 3 from w23;
			emit-sfx 3 from w24;
			emit-sfx 5 from w1;
			emit-sfx 5 from w2;
			emit-sfx 5 from w3;
			emit-sfx 5 from w4;
			emit-sfx 5 from w5;
			emit-sfx 5 from w6;
			emit-sfx 5 from w7;
			emit-sfx 5 from w8;
			emit-sfx 5 from w9;
			emit-sfx 5 from w10;
			emit-sfx 5 from w11;
			emit-sfx 5 from w12;
			emit-sfx 5 from w13;
			emit-sfx 5 from w14;
			emit-sfx 5 from w15;
			emit-sfx 5 from w16;
			emit-sfx 5 from w17;
			emit-sfx 5 from w18;
			emit-sfx 5 from w19;
			emit-sfx 5 from w20;
			emit-sfx 5 from w21;
			emit-sfx 5 from w22;
			emit-sfx 5 from w23;
			emit-sfx 5 from w24;
		}
		sleep 325;
	}
}

Create()
{
	hide flare1;
	hide flare2;
	hide flare3;
	hide flare4;
	
	start-script wakes2();
	Static_Var_3 = 0;
	Static_Var_4 = 0;
	Static_Var_1 = 0;
	Static_Var_2 = 0;
	turn turret2 to y-axis <180.> now;
	//turn turret2 to y-axis <180.000000> now;
	start-script BankClerck();
	Static_Var_5 = 3000;
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	Static_Var_5 = Func_Var_1 * 2;
}

RestoreAfterDelay()
{
	sleep Static_Var_5;
	turn sleeve2 to x-axis <0.> speed <60.>;
	turn turret2 to y-axis <180.> speed <30.>;
	turn sleeve1 to x-axis <0.> speed <60.>;
	turn turret1 to y-axis <0.> speed <30.>;
}

setSFXoccupy(state)
{
	Static_Var_6 = state;
}

StartMoving()
{
	signal 8;
	set-signal-mask 8;
}

StopMoving()
{
	signal 8;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn turret1 to y-axis heading speed <30.>;
	turn sleeve1 to x-axis <0.> - pitch speed <60.>;
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeve1 around x-axis;
	start-script RestoreAfterDelay();
	Static_Var_8 = heading;
	++Static_Var_1;
	return (1);
}

FirePrimary()
{
	//start-script RockZ(-5,Static_Var_8);
	if( Static_Var_1 == 0 )
	{
		emit-sfx 1025 from flare1;
		move barrel1 to z-axis [-2.] now;
		sleep 150;
		move barrel1 to z-axis [0.] speed [2.];
		sleep 150;
	}
	if( Static_Var_1 == 1 )
	{
		emit-sfx 1025 from flare2;
		move barrel2 to z-axis [-2.] now;
		sleep 150;
		move barrel2 to z-axis [0.] speed [2.];
		sleep 150;
	}
	
	++Static_Var_1;
	
	if (Static_Var_1 == 2)
	{
		Static_Var_1 = 0;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret1;
}

QueryPrimary(piecenum)
{
	if( Static_Var_1 == 0 )
	{
		piecenum = flare1;
	}
	if( Static_Var_1 == 1 )
	{
		piecenum = flare2;
	}
}

AimWeapon2(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	turn turret2 to y-axis heading speed <30.>;
	turn sleeve2 to x-axis <0.> - pitch speed <60.>;
	wait-for-turn turret2 around y-axis;
	wait-for-turn sleeve2 around x-axis;
	start-script RestoreAfterDelay();
	Static_Var_8 = heading;
	return (1);
}

FireWeapon2()
{
	//start-script RockZ(-5,Static_Var_8);	
	if( Static_Var_2 == 0 )
	{
		emit-sfx 1025 from flare3;
		move barrel3 to z-axis [-3.] now;
		sleep 150;
		move barrel3 to z-axis [0.] speed [1.];
		sleep 150;
	}
	if( Static_Var_2 == 1 )
	{
		emit-sfx 1025 from flare4;
		move barrel4 to z-axis [-3.] now;
		sleep 150;
		move barrel4 to z-axis [0.] speed [1.];
		sleep 150;
	}
	
	++Static_Var_2;
	
	if (Static_Var_2 == 2)
	{
		Static_Var_2 = 0;
	}

}

AimFromWeapon2(piecenum)
{
	piecenum = turret2;
}

QueryWeapon2(piecenum)
{
	if( Static_Var_2 == 0 )
	{
		piecenum = flare3;
	}
	if( Static_Var_2 == 1 )
	{
		piecenum = flare4;
	}
	
}

AimWeapon3(heading, pitch)
{
	signal 8;
	set-signal-mask 8;
	return (1);
}

FireWeapon3()
{

}

AimFromWeapon3(piecenum)
{
	piecenum = miss;
}

QueryWeapon3(piecenum)
{
	piecenum = miss;	
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode body type NOHEATCLOUD;
		explode sleeve2 type NOHEATCLOUD;
		explode turret2 type NOHEATCLOUD;
		explode sleeve1 type NOHEATCLOUD;
		explode turret1 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD | FALL;
		explode body type NOHEATCLOUD | FALL;
		explode sleeve2 type NOHEATCLOUD | FALL;
		explode turret2 type NOHEATCLOUD | FALL;
		explode sleeve1 type NOHEATCLOUD | FALL;
		explode turret1 type NOHEATCLOUD | FALL;
		return (corpsetype);
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode body type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeve2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeve1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode body type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeve2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeve1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
