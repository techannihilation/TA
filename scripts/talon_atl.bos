#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, turret, base, sleeve, body;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 3;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 3;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

bubble1()
{
	Static_Var_3 = 0;
	while( Static_Var_3 < 5 )
	{
		emit-sfx 256 | 3 from flare1;
		sleep 200;
		++Static_Var_3;
	}
}

bubble2()
{
	Static_Var_4 = 0;
	while( Static_Var_4 < 5 )
	{
		emit-sfx 256 | 3 from flare2;
		sleep 200;
		++Static_Var_4;
	}
}

Create()
{
	hide flare1;
	hide flare2;
	dont-cache flare1;
	dont-cache flare2;
	dont-cache turret;
	dont-cache sleeve;
	dont-shade turret;
	dont-shade sleeve;
	dont-shade base;
	dont-shade body;
	Static_Var_2 = 0;
	Static_Var_3 = 0;
	Static_Var_4 = 0;
	Static_Var_1 = 3000;
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	Static_Var_1 = Func_Var_1 * 2;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn turret to y-axis heading speed <75.>;
	turn sleeve to x-axis <0.> - pitch speed <50.>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	return (1);
}

FirePrimary()
{
	if( Static_Var_2 == 0 )
	{
		start-script bubble1();
	}
	if( Static_Var_2 == 1 )
	{
		start-script bubble2();
	}
	Static_Var_2 = !Static_Var_2;
}

QueryPrimary(piecenum)
{
	piecenum = Static_Var_2;
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide flare1;
	hide flare2;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode flare1 type NOHEATCLOUD;
		explode flare2 type NOHEATCLOUD;
		explode sleeve type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD;
		explode flare1 type FALL | NOHEATCLOUD;
		explode flare2 type FALL | NOHEATCLOUD;
		explode sleeve type SHATTER | NOHEATCLOUD;
		explode turret type FALL | NOHEATCLOUD;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD;
		explode flare1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode flare2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode sleeve type SHATTER | NOHEATCLOUD;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		return (0);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD;
	explode flare1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode flare2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode sleeve type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
}
