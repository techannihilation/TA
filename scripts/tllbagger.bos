#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, turret, sleeve, wheel1, wheel2, 
		barrel1, barrel2, barrel3, barrel4, barrel5, barrel6, barrel7, barrel8, 
		flare1, flare2,
		support1, support2, support3, support4, support5, support6, support7, support8;

static-var  Static_Var_1;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

Create()
{
	turn support1 to y-axis <0.000000>  now;
	turn support2 to y-axis <-90.000000>  now;
	turn support3 to y-axis <-180.000000>  now;
	turn support4 to y-axis <-270.000000>  now;
	turn support5 to y-axis <0.000000>  now;
	turn support6 to y-axis <-90.000000>  now;
	turn support7 to y-axis <-180.000000> now;
	turn support8 to y-axis <-270.000000> now;
	Static_Var_1 = 1;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn turret to y-axis heading speed <15.000000>;
	turn sleeve to x-axis <0.000000> - pitch speed <6.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn turret around x-axis;
	return (1);
}


FirePrimary()
{
	if( Static_Var_1 == 1 )
	{
		move barrel1 to z-axis [-10.000000] now;
		emit-sfx 1024 + 0 from flare1;
		sleep 50;
		turn wheel1 to y-axis <90.000000> speed <120.000000>;
		move barrel1 to z-axis [0.000000] speed [20.000000];
	}
		if( Static_Var_1 == 2 )
	{
		move barrel5 to z-axis [-10.000000] now;
		emit-sfx 1024 + 0 from flare2;
		sleep 50;
		turn wheel2 to y-axis <90.000000> speed <120.000000>;
		move barrel5 to z-axis [0.000000] speed [20.000000];
	}
		if( Static_Var_1 == 3 )
	{
		move barrel2 to z-axis [-10.000000] now;
		emit-sfx 1024 + 0 from flare1;
		sleep 50;
		turn wheel1 to y-axis <180.000000> speed <120.000000>;
		move barrel2 to z-axis [0.000000] speed [20.000000];
	}
		if( Static_Var_1 == 4 )
	{
		move barrel6 to z-axis [-10.000000] now;
		emit-sfx 1024 + 0 from flare2;
		sleep 50;
		turn wheel2 to y-axis <180.000000> speed <120.000000>;
		move barrel6 to z-axis [0.000000] speed [20.000000];
	}
	if( Static_Var_1 == 5 )
	{
		move barrel3 to z-axis [-10.000000] now;
		emit-sfx 1024 + 0 from flare1;
		sleep 50;
		turn wheel1 to y-axis <270.000000> speed <120.000000>;
		move barrel3 to z-axis [0.000000] speed [20.000000];
	}
	if( Static_Var_1 == 6 )
	{
		move barrel7 to z-axis [-10.000000] now;
		
		emit-sfx 1024 + 0 from flare2;
		sleep 50;
		turn wheel2 to y-axis <270.000000> speed <120.000000>;
		move barrel7 to z-axis [0.000000] speed [20.000000];
	}
	if( Static_Var_1 == 7 )
	{
		move barrel4 to z-axis [-10.000000] now;
		emit-sfx 1024 + 0 from flare1;
		sleep 50;
		turn wheel1 to y-axis <0.000000> speed <120.000000>;
		move barrel4 to z-axis [0.000000] speed [20.000000];
	}
	if( Static_Var_1 == 8 )
	{
		move barrel8 to z-axis [-10.000000] now;
		emit-sfx 1024 + 0 from flare2;
		sleep 50;
		turn wheel2 to y-axis <0.000000> speed <120.000000>;
		move barrel8 to z-axis [0.000000] speed [20.000000];
	}
	++Static_Var_1;
	if( Static_Var_1 == 9 )
	{
		Static_Var_1 = 1;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	if( Static_Var_1 == 1 )
	{
		piecenum = flare1;
	}
	if( Static_Var_1 == 2 )
	{
		piecenum = flare2;
	}
	if( Static_Var_1 == 3 )
	{
		piecenum = flare1;
	}
	if( Static_Var_1 == 4 )
	{
		piecenum = flare2;
	}
	if( Static_Var_1 == 5 )
	{
		piecenum = flare1;
	}
	if( Static_Var_1 == 6 )
	{
		piecenum = flare2;
	}
	if( Static_Var_1 == 7 )
	{
		piecenum = flare1;
	}
	if( Static_Var_1 == 8 )
	{
		piecenum = flare2;
	}
}

SweetSpot(piecenum)
{
	piecenum = turret;
}

Killed(severity, corpsetype)
{
	hide flare1;

	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		explode wheel1 type NOHEATCLOUD;
		explode wheel2 type NOHEATCLOUD;
		explode sleeve type NOHEATCLOUD;		
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD;
		explode turret type NOHEATCLOUD | FALL;
		explode wheel1 type NOHEATCLOUD | FALL;
		explode wheel2 type NOHEATCLOUD | FALL;
		explode sleeve type NOHEATCLOUD | FALL;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD;
		explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode wheel1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode wheel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeve type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD;
	explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode wheel1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode wheel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeve type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
