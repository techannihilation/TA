#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  Basis, Sockel, Turm, Lafette, Lauf, Federung, Punkt, Blitz, emit;

// Signal definitions
#define SIG_AIM				2

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			Func_Var_4 = Rand( 1, 3 );
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from Sockel;
			}
			if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from Lafette;
			}
			if( Func_Var_4 == 3 )
			{
				emit-sfx smoketype from Turm;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide Blitz;
	turn lafette to x-axis <-50> now;
	dont-shade Turm;
	dont-shade Lafette;
	dont-shade Lauf;
	dont-shade Federung;
	dont-shade Blitz;
	dont-cache Blitz;

	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn Punkt to y-axis heading speed <875.000000>;
	turn Lafette to x-axis <0.000000> - pitch speed <690.000000>;
	wait-for-turn Punkt around y-axis;
	wait-for-turn Lafette around x-axis;
	return (1);
}

FirePrimary()
{
	show Blitz;
	sleep 150;
	hide Blitz;
}

QueryPrimary(piecenum)
{
	piecenum = Blitz;
}

AimFromPrimary(piecenum)
{
	piecenum = Lafette;
}

SweetSpot(piecenum)
{
	piecenum = Sockel;
}

Killed(severity, corpsetype)
{
	hide Blitz;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode Sockel type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode Turm type NOHEATCLOUD | BITMAPONLY | BITMAP3;
		explode Lauf type NOHEATCLOUD | BITMAPONLY | BITMAP5;
		explode Federung type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode Sockel type NOHEATCLOUD | SHATTER | BITMAP1;
		explode Turm type NOHEATCLOUD | SHATTER | BITMAP3;
		explode Lafette type NOHEATCLOUD | FALL| SMOKE | BITMAP4;
		explode Lauf type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode Federung type NOHEATCLOUD | FALL | BITMAP5;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode Sockel type NOHEATCLOUD | SHATTER | BITMAP2;
		explode Turm type NOHEATCLOUD | SHATTER | BITMAP3;
		explode Lauf type NOHEATCLOUD | BITMAPONLY | BITMAP4;
		explode Lafette type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode Federung type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		return (corpsetype);
	}
	corpsetype = 3;
	explode Sockel type NOHEATCLOUD | SHATTER | BITMAP5;
	explode Turm type NOHEATCLOUD | SHATTER | BITMAP3;
	explode Lafette type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode Lauf type NOHEATCLOUD | BITMAPONLY | BITMAP1;
	explode Federung type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	return (corpsetype);
}
