#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, winga1, wingb1,
       winga2, wingb2, turret1, turret2, sleeve1, sleeve2, barrel1, barrel2, flare1, flare2, bomb;

static-var  Static_Var_1, Static_Var_2, Static_Var_3;


activatescr()
{
	if( TRUE )
	{
		turn winga1 to z-axis <0.> speed <60.>;
		turn wingb1 to z-axis <0.> speed <60.>;
		turn winga2 to z-axis <0.> speed <120.>;
		turn wingb2 to z-axis <0.> speed <120.>;
		sleep 1000;
	}
	sleep 23;
}

deactivatescr()
{
	if( TRUE )
	{
		turn winga1 to z-axis <60.> speed <62.>;
		turn winga2 to z-axis <-120.> speed <62.>;
		turn wingb1 to z-axis <-60.> speed <62.>;
		turn wingb2 to z-axis <120.> speed <62.>;
		sleep 1445;
	}
	sleep 24;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

InitState()
{
	Static_Var_2 = 1;
	Static_Var_3 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_3 )
	{
		Static_Var_2 = requestedstate;
		return (0);
	}
	Static_Var_3 = 1;
	currentstate = Static_Var_2;
	Static_Var_2 = requestedstate;
	while( Static_Var_2 != currentstate )
	{
		if( Static_Var_2 == 0 )
		{
			call-script activatescr();
			currentstate = 0;
		}
		if( Static_Var_2 == 1 )
		{
			call-script deactivatescr();
			currentstate = 1;
		}
	}
	Static_Var_3 = 0;
}

MoveRate2()
{
	if( Rand( 1, 10 ) == 1 AND !Static_Var_1 )
	{
		Static_Var_1 = 1;
		turn base to z-axis <240.> speed <120.>;
		wait-for-turn base around z-axis;
		turn base to z-axis <120.> speed <180.>;
		wait-for-turn base around z-axis;
		turn base to z-axis <0.> speed <120.>;
		Static_Var_1 = 0;
	}
}

Create()
{
	Static_Var_1 = 0;
	call-script InitState();
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

RestoreAfterDelay()
{
	sleep 1000;
	spin barrel1 around z-axis speed <0.000000> accelerate <-10.000000>;
	spin barrel2 around z-axis speed <0.000000> accelerate <-10.000000>;
	sleep 2000;
	turn turret1 to y-axis <0.000000> speed <90.000000>;
	turn sleeve1 to x-axis <0.000000> speed <50.000000>;
	turn turret2 to y-axis <0.000000> speed <90.000000>;
	turn sleeve2 to x-axis <0.000000> speed <50.000000>;
}


AimPrimary()
{
	signal 2;
	set-signal-mask 2;
}
AimSecondary(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	turn turret1 to y-axis <180.000000> + heading speed <100.000000>;
	turn sleeve1 to x-axis <0.000000> - pitch speed <100.000000> ;
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeve1 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}
AimTertiary(heading, pitch)
{
	signal 8;
	set-signal-mask 8;
	turn turret2 to y-axis <180.000000> + heading speed <100.000000>;
	turn sleeve2 to x-axis <0.000000> - pitch speed <100.000000> ;
	wait-for-turn turret2 around y-axis;
	wait-for-turn sleeve2 around x-axis;

	start-script RestoreAfterDelay();
	return (1);
}

AimFromPrimary(piecenum)
{
	piecenum = bomb;
}

AimFromSecondary(piecenum)
{
	piecenum = turret1;
}

AimFromTertiary(piecenum)
{
	piecenum = turret2;
}

QueryPrimary(piecenum)
{
	piecenum = bomb;
}

FirePrimary()
{
	
}

FireSecondary() 
{
	emit-sfx 1025 from flare1;
	move sleeve1 to z-axis [-1.] now;
	move sleeve1 to z-axis [0.] speed [1.];
	move barrel1 to z-axis [-1.] now;
	move barrel1 to z-axis [0.] speed [1.];
	
	spin barrel1 around z-axis speed <300.000000>;	
	sleep 300;
	
}

QuerySecondary(piecenum)
{
	piecenum = flare1;
}

FireTertiary() 
{
	emit-sfx 1025 from flare2;
	move sleeve2 to z-axis [-1.] now;
	move sleeve2 to z-axis [0.] speed [1.];
	move barrel2 to z-axis [-1.] now;
	move barrel2 to z-axis [0.] speed [1.];
	
	spin barrel2 around z-axis speed <300.000000>;	
	sleep 300;

}

QueryTertiary(piecenum)
{
	piecenum = flare2;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode winga1 type NOHEATCLOUD;
		explode wingb1 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD;
		explode winga1 type NOHEATCLOUD;
		explode wingb1 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD;
		explode winga1 type NOHEATCLOUD;
		explode wingb1 type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
		explode base type NOHEATCLOUD;
		explode winga1 type NOHEATCLOUD;
		explode wingb1 type NOHEATCLOUD;
		return (corpsetype);
}
