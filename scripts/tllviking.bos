#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1a, flare1b, flare1c, flare1d, flare2a, flare2b, barrel1d, base,
       turret1, sleeve1, sleeve2, sleeve3, turret2, turret3, wake1, wake2,
       barrel1a, barrel1b, barrel1c, barrel2a, barrel2b, body, barrel3a, barrel3b,
       ignite1, ignite2, ignite3, ignite4, ignite5, aimpoint, flare3a, flare3b;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7, Static_Var_8, Static_Var_9;


SetDirection(heading)
{
	var Func_Var_2;
	Func_Var_2 = get ABS(heading);
	turn body to y-axis heading speed Func_Var_2;
	turn base to y-axis <0.> - heading speed Func_Var_2;
}

RockOnWaves()
{
	while( TRUE )
	{
		turn body to x-axis <1.> speed <1.>;
		move body to y-axis [0.] speed [0.];
		wait-for-turn body around x-axis;
		turn body to x-axis <-1.> speed <1.>;
		move body to y-axis [0.] speed [0.];
		wait-for-move body along y-axis;
		move body to y-axis [0.] speed [0.];
		wait-for-turn body around x-axis;
		turn body to x-axis <1.> speed <1.>;
		move body to y-axis [0.] speed [0.];
		wait-for-move body along y-axis;
	}
}

ProjXPW(Func_Var_1, Func_Var_2)
{
	if( Func_Var_2 < -21840 )
	{
		Static_Var_8 = Func_Var_1 * ( Func_Var_2 + 32760 ) / 10920;
	}
	else if( Func_Var_2 > 21840 )
	{
		Static_Var_8 = Func_Var_1 * ( 32760 - Func_Var_2 ) / 10920;
	}
	else if( Func_Var_2 < -10920 )
	{
		Static_Var_8 = 0 - Func_Var_1;
	}
	else if( Func_Var_2 > 10920 )
	{
		Static_Var_8 = Func_Var_1;
	}
	else
	{
		Static_Var_8 = Func_Var_1 * Func_Var_2 / 10920;
	}
}

RockZ(Func_Var_1, Func_Var_2)
{
	signal 16;
	set-signal-mask 16;
	call-script ProjXPW(10920 / Func_Var_2,Func_Var_1);
	Static_Var_9 = Static_Var_9 + Static_Var_8;
	Static_Var_8 = get ABS(Static_Var_9);
	while( Static_Var_8 > 91 )
	{
		turn base to z-axis Static_Var_9 speed Static_Var_8 * <0.>;
		wait-for-turn base around z-axis;
		Static_Var_9 = Static_Var_9 * -1 / 2;
		Static_Var_8 = get ABS(Static_Var_9);
	}
	turn base to z-axis <0.> speed <2.>;
}

FlameControl(Func_Var_1)
{
	while( TRUE )
	{
		Func_Var_1 = get HEALTH;
		if( Func_Var_1 <= 80 )
		{
			emit-sfx 1026 from ignite1;
			if( Func_Var_1 <= 60 )
			{
				emit-sfx 1026 from ignite2;
				if( Func_Var_1 <= 45 )
				{
					emit-sfx 1026 from ignite3;
					if( Func_Var_1 <= 25 )
					{
						emit-sfx 1026 from ignite4;
						if( Func_Var_1 <= 10 )
						{
							emit-sfx 1026 from ignite5;
						}
					}
				}
			}
			sleep 66;
		}
		else
		{
			sleep 333;
		}
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flare1a;
	hide flare1b;
	hide flare1c;
	hide flare1d;
	hide flare2b;
	hide flare2a;
	hide flare3a;
	hide flare3b;
	hide ignite1;
	hide ignite2;
	hide ignite3;
	hide ignite4;
	hide ignite5;
	Static_Var_1 = 1;
	Static_Var_2 = 1;
	Static_Var_4 = 0;
	Static_Var_5 = 0;
	Static_Var_6 = 0;
	Static_Var_3 = 3000;
	Static_Var_9 = 0;
	turn flare3a to y-axis <180.> speed <100.>;
	turn flare3b to y-axis <180.> speed <100.>;
	start-script SmokeUnit();
	start-script RockOnWaves();
	start-script FlameControl();
}

SetMaxReloadTime(Func_Var_1)
{
	Static_Var_3 = Func_Var_1 * 8;
}

RestoreAfterDelay()
{
	sleep Static_Var_3;
	turn turret1 to y-axis <0.> speed <30.>;
	turn sleeve1 to x-axis <0.> speed <20.>;
	turn turret2 to y-axis <0.> speed <40.>;
	turn sleeve2 to x-axis <0.> speed <20.>;
	turn turret3 to y-axis <0.> speed <40.>;
	turn sleeve3 to x-axis <0.> speed <20.>;
	Static_Var_1 = 0;
}

StartMoving()
{
	signal 8;
	set-signal-mask 8;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		sleep 150;
	}
}

StopMoving()
{
	signal 8;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	Static_Var_1 = 0;
	turn turret1 to y-axis heading speed <20.>;
	turn sleeve1 to x-axis <0.> - pitch speed <20.>;
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeve1 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimSecondary(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	Static_Var_1 = 1;
	turn turret2 to y-axis <0.> + heading speed <80.>;
	turn sleeve2 to x-axis <0.> - pitch speed <80.>;
	wait-for-turn turret2 around y-axis;
	wait-for-turn sleeve2 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon3(heading, pitch)
{
	signal 16;
	set-signal-mask 16;
	Static_Var_1 = 1;
	turn turret3 to y-axis <180.> + heading speed <80.>;
	turn sleeve3 to x-axis pitch speed <80.>;
	wait-for-turn turret3 around y-axis;
	wait-for-turn sleeve3 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	start-script RockZ(-5,Static_Var_7);
	if( Static_Var_4 == 0 )
	{
		emit-sfx 1024 from flare1a;
		move barrel1a to z-axis [-1.] speed [500.];
		sleep 150;
		move barrel1a to z-axis [0.] speed [3.];
		Static_Var_4 = 1;
		return (0);
	}
	if( Static_Var_4 == 1 )
	{
		emit-sfx 1024 from flare1b;
		move barrel1b to z-axis [-1.] speed [500.];
		sleep 150;
		move barrel1b to z-axis [0.] speed [3.];
		Static_Var_4 = 2;
		return (0);
	}
	if( Static_Var_4 == 2 )
	{
		emit-sfx 1024 from flare1c;
		move barrel1c to z-axis [-1.] speed [500.];
		sleep 150;
		move barrel1c to z-axis [0.] speed [3.];
		Static_Var_4 = 3;
		return (0);
	}
	if( Static_Var_4 == 3 )
	{
		emit-sfx 1024 from flare1d;
		move barrel1d to z-axis [-1.] speed [500.];
		sleep 150;
		move barrel1d to z-axis [0.] speed [3.];
		Static_Var_4 = 0;
		return (0);
	}
}

FireSecondary()
{
	if( Static_Var_2 == 0 )
	{
		emit-sfx 1024 from flare2a;
		move barrel2a to z-axis [1.] speed [500.];
		sleep 150;
		move barrel2a to z-axis [0.] speed [3.];
		Static_Var_2 = 1;
		return (0);
	}
	if( Static_Var_2 == 1 )
	{
		emit-sfx 1024 from flare2b;
		move barrel2b to z-axis [1.] speed [500.];
		sleep 150;
		move barrel2b to z-axis [0.] speed [3.];
		Static_Var_2 = 0;
		return (0);
	}
}

FireWeapon3()
{
	if( Static_Var_6 == 0 )
	{
		emit-sfx 1024 from flare3a;
		move barrel3a to z-axis [1.] speed [500.];
		sleep 150;
		move barrel3a to z-axis [0.] speed [3.];
		Static_Var_6 = 1;
		return (0);
	}
	if( Static_Var_6 == 1 )
	{
		emit-sfx 1024 from flare3b;
		move barrel3b to z-axis [1.] speed [500.];
		sleep 150;
		move barrel3b to z-axis [0.] speed [3.];
		Static_Var_6 = 0;
		return (0);
	}
}

AimFromPrimary(piecenum)
{
	piecenum = aimpoint;
}

QueryPrimary(piecenum)
{
	if( Static_Var_4 == 0 )
	{
		piecenum = flare1a;
	}
	if( Static_Var_4 == 1 )
	{
		piecenum = flare1b;
	}
	if( Static_Var_4 == 2 )
	{
		piecenum = flare1c;
	}
	if( Static_Var_4 == 3 )
	{
		piecenum = flare1d;
	}
}

AimFromSecondary(piecenum)
{
	piecenum = aimpoint;
}

QuerySecondary(piecenum)
{
	if( Static_Var_2 == 0 )
	{
		piecenum = flare2a;
	}
	if( Static_Var_2 == 1 )
	{
		piecenum = flare2b;
	}
}

AimFromWeapon3(piecenum)
{
	piecenum = aimpoint;
}

QueryWeapon3(piecenum)
{
	if( Static_Var_6 == 0 )
	{
		piecenum = flare3a;
	}
	if( Static_Var_6 == 1 )
	{
		piecenum = flare3b;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide flare1a;
	hide flare1b;
	hide flare2a;
	hide flare2b;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel1a type NOHEATCLOUD;
		explode barrel1b type NOHEATCLOUD;
		explode barrel1c type NOHEATCLOUD;
		explode barrel2a type NOHEATCLOUD;
		explode barrel2b type NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode flare1a type NOHEATCLOUD;
		explode flare1b type NOHEATCLOUD;
		explode flare1c type NOHEATCLOUD;
		explode flare2a type NOHEATCLOUD;
		explode flare2b type NOHEATCLOUD;
		explode turret1 type NOHEATCLOUD;
		explode turret2 type NOHEATCLOUD;
		explode wake1 type NOHEATCLOUD;
		explode wake2 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrel1a type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel1b type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel1c type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel2a type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel2b type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode flare1a type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode flare1b type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode flare1c type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode flare2a type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode flare2b type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode turret1 type NOHEATCLOUD | NOHEATCLOUD;
		explode turret2 type SHATTER | NOHEATCLOUD;
		explode wake1 type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode wake2 type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode barrel1a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel1b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel1c type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel2a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel2b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode flare1a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode flare1b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode flare1c type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode flare2a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode flare2b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode turret1 type NOHEATCLOUD;
		explode turret2 type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode wake1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode wake2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode barrel1a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode barrel1b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode barrel1c type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode barrel2a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode barrel2b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode base type NOHEATCLOUD;
	explode flare1a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode flare1b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode flare1c type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode flare2a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode flare2b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode turret1 type NOHEATCLOUD;
	explode turret2 type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode wake1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode wake2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	return (corpsetype);
}
