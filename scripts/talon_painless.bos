#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, flare, flare1, flare2, flare3, turretbase, turret, shell,
       barrel1, barrel2, barrel3, cover1, cover2, cover3, roller, neck;

static-var  Static_Var_1;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flare1;
	hide flare2;
	hide flare3;
	hide shell;
	Static_Var_1 = 1;
	spin flare1 around z-axis speed <250.>;
	spin flare2 around z-axis speed <250.>;
	spin flare3 around z-axis speed <250.>;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn turret to y-axis heading speed <75.>;
	turn turretbase to x-axis <0.> - pitch speed <75.>;
	wait-for-turn turret around y-axis;
	wait-for-turn neck around x-axis;
	sleep 115;
	return (1);
}

FirePrimary()
{
	if( Static_Var_1 == 1 )
	{
		move barrel1 to z-axis [-4.] speed [200.];
		show flare1;
		sleep 150;
		explode shell type FALL;
		hide flare1;
		move barrel1 to z-axis [0.] speed [20.];
		turn roller to z-axis <120.> speed <400.>;
		turn barrel1 to z-axis <-120.> speed <400.>;
		turn barrel2 to z-axis <-120.> speed <400.>;
		turn barrel3 to z-axis <-120.> speed <400.>;
	}
	if( Static_Var_1 == 2 )
	{
		move barrel3 to z-axis [-4.] speed [200.];
		show flare3;
		sleep 150;
		explode shell type FALL;
		hide flare3;
		move barrel3 to z-axis [0.] speed [20.];
		turn roller to z-axis <240.> speed <400.>;
		turn barrel1 to z-axis <-240.> speed <400.>;
		turn barrel2 to z-axis <-240.> speed <400.>;
		turn barrel3 to z-axis <-240.> speed <400.>;
	}
	if( Static_Var_1 == 3 )
	{
		move barrel2 to z-axis [-4.] speed [200.];
		show flare2;
		sleep 150;
		hide flare2;
		explode shell type FALL;
		move barrel2 to z-axis [0.] speed [20.];
		turn roller to z-axis <0.> speed <400.>;
		turn barrel1 to z-axis <0.> speed <400.>;
		turn barrel2 to z-axis <0.> speed <400.>;
		turn barrel3 to z-axis <0.> speed <400.>;
	}
	++Static_Var_1;
	if( Static_Var_1 == 4 )
	{
		Static_Var_1 = 1;
	}
}

TargetCleared(Func_Var_1)
{
	if( Func_Var_1 == 1 )
	{
		signal 2;
		stop-spin turret around y-axis;
		stop-spin neck around x-axis;
	}
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

AimFromPrimary(piecenum)
{
	piecenum = flare;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel1 type NOHEATCLOUD ;
		explode barrel2 type NOHEATCLOUD ;
		explode barrel3 type NOHEATCLOUD;
		explode base type NOHEATCLOUD ;
		explode cover1 type NOHEATCLOUD ;
		explode cover2 type NOHEATCLOUD ;
		explode cover3 type NOHEATCLOUD;
		explode neck type NOHEATCLOUD ;
		explode roller type NOHEATCLOUD ;
		explode turret type NOHEATCLOUD ;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrel1 type NOHEATCLOUD | FALL;
		explode barrel2 type NOHEATCLOUD | FALL;
		explode barrel3 type NOHEATCLOUD | FALL;
		explode base type NOHEATCLOUD | FALL;
		explode cover1 type NOHEATCLOUD | FALL ;
		explode cover2 type NOHEATCLOUD | FALL ;
		explode cover3 type NOHEATCLOUD | FALL;
		explode neck type NOHEATCLOUD | FALL ;
		explode roller type NOHEATCLOUD | FALL ;
		explode turret type NOHEATCLOUD | FALL ;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode barrel1 type NOHEATCLOUD | FALL;
		explode barrel2 type NOHEATCLOUD | FALL;
		explode barrel3 type NOHEATCLOUD | FALL;
		explode base type NOHEATCLOUD | FALL;
		explode cover1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode cover2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode cover3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode neck type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode roller type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
		explode barrel1 type NOHEATCLOUD | FALL;
		explode barrel2 type NOHEATCLOUD | FALL;
		explode barrel3 type NOHEATCLOUD | FALL;
		explode base type NOHEATCLOUD | FALL;
		explode cover1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode cover2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode cover3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode neck type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode roller type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
}
