#define TA

#include "sfxtype.h"
#include "exptype.h"

piece  body, base, turn1, engine1, thrust11, thrust12, engine2, thrust21, 
		thrust22, turn2, engine3, thrust3, engine4, thrust4, system, plates, barrel, beam;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	start-script SmokeUnit();
}

SweetSpot(pieceNum)
{
	pieceNum = body;
}

Activate()
{
	set-signal-mask 256;
	turn engine1 to x-axis <100.00> speed <1.00>;
	turn engine2 to x-axis <100.00> speed <1.00>;
	sleep 100;
}

Deactivate()
{
	signal 256;
	turn engine1 to x-axis <0.00> speed <1.00>;
	turn engine2 to x-axis <0.00> speed <1.00>;
}

StartBuilding()
{
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	set INBUILDSTANCE to 0;
}

QueryNanoPiece(piecenum)
{
		piecenum = beam;
}

Killed(severity, corpseType)
{
	corpseType = 3;
	explode plates type NOHEATCLOUD;
	explode system type NOHEATCLOUD;
	explode engine1 type NOHEATCLOUD;
	explode engine2 type NOHEATCLOUD;
	explode engine3 type NOHEATCLOUD;
	explode engine4 type NOHEATCLOUD;	
	return corpseType;
}
