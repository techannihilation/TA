#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, flare, launcher, turret;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	dont-shade turret;
	dont-shade launcher;
	dont-shade base;
	dont-cache launcher;
	dont-cache turret;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn turret to y-axis heading speed <80.>;
	wait-for-turn turret around y-axis;
	return (1);
}

FirePrimary()
{
	move launcher to z-axis [-2.] speed [200.];
	emit-sfx 256 | 3 from flare;
	sleep 250;
	move launcher to z-axis [0.] speed [3.];
}

AimFromPrimary(piecenum)
{
	piecenum = launcher;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD | SHATTER ;
		explode flare type NOHEATCLOUD | SHATTER ;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD | SHATTER ;
		explode flare type NOHEATCLOUD | SHATTER ;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD | SHATTER ;
		explode flare type NOHEATCLOUD | SHATTER ;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD | SHATTER;
	explode flare type NOHEATCLOUD | SHATTER ;
	return (corpsetype);
}
