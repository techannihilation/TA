#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, turret, sleeve, mainsleeve, barrel1a, barrel1b, flare,
       flare1, flare2, flare3, flare4, flare5, flare6, flare7, flare8,
       flare9, flare10;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7, Static_Var_8;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

activatescr()
{
	if( TRUE )
	{
		turn mainsleeve to x-axis <-75.> speed <25.>;
		wait-for-turn mainsleeve around x-axis;
		sleep 150;
	}
}

deactivatescr()
{
	if( TRUE )
	{
		turn mainsleeve to x-axis <0.> speed <25.>;
		wait-for-turn mainsleeve around x-axis;
		sleep 150;
	}
}

Go()
{
	call-script activatescr();
	Static_Var_4 = 1;
}

Stop()
{
	Static_Var_4 = 0;
	call-script deactivatescr();
}

InitState()
{
	Static_Var_7 = 1;
	Static_Var_8 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_8 )
	{
		Static_Var_7 = requestedstate;
		return (0);
	}
	Static_Var_8 = 1;
	currentstate = Static_Var_7;
	Static_Var_7 = requestedstate;
	while( Static_Var_7 != currentstate )
	{
		if( Static_Var_7 == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( Static_Var_7 == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	Static_Var_8 = 0;
}

Create()
{
	Static_Var_1 = 0;
	Static_Var_4 = 0;
	Static_Var_3 = 0;
	Static_Var_4 = 0;
	Static_Var_2 = 5000;
	
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}

	call-script InitState();
	start-script RequestState(0);
	start-script SmokeUnit();
}

RestoreAfterDelay2()
{
	sleep Static_Var_2;
	set-signal-mask 0;
	turn turret to y-axis <0.> speed <45.>;
	turn sleeve to x-axis <0.> speed <15.>;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	return (1);
}

FirePrimary()
{
	emit-sfx 1024 + 0 from flare;
	move barrel1b to z-axis [-2.] speed [500.];
	sleep 250;
	move barrel1b to z-axis [0.] speed [1.];
}

AimFromPrimary(piecenum)
{
	piecenum = body;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

AimTertiary(heading, pitch)
{
	signal 8;
	set-signal-mask 8;
	turn turret to y-axis heading speed <60.>;
	wait-for-turn turret around y-axis;
	turn sleeve to x-axis <0.> - pitch speed <30.>;
	wait-for-turn sleeve around x-axis;
	start-script RestoreAfterDelay2();
	return (1);
}

Shot3()
{
	++Static_Var_1;
	if( Static_Var_1 == 10 )
	{
		Static_Var_1 = 0;
	}
}

QueryTertiary(piecenum)
{
	if( Static_Var_1 == 0 )
	{
		piecenum = flare1;
	}
	if( Static_Var_1 == 1 )
	{
		piecenum = flare2;
	}
	if( Static_Var_1 == 2 )
	{
		piecenum = flare3;
	}
	if( Static_Var_1 == 3 )
	{
		piecenum = flare4;
	}
	if( Static_Var_1 == 4 )
	{
		piecenum = flare5;
	}
	if( Static_Var_1 == 5 )
	{
		piecenum = flare6;
	}
	if( Static_Var_1 == 6 )
	{
		piecenum = flare7;
	}
	if( Static_Var_1 == 7 )
	{
		piecenum = flare8;
	}
	if( Static_Var_1 == 8 )
	{
		piecenum = flare9;
	}
	if( Static_Var_1 == 9 )
	{
		piecenum = flare10;
	}
}

AimFromTertiary(piecenum)
{
	piecenum = turret;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type 128;
		explode sleeve type 128;
		explode base type 128;
		explode turret type 128;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type FALL | 128;
		explode sleeve type FALL | 128;
		explode base type 128;
		explode turret type FALL | 128;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | 128;
		explode sleeve type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | 128;
		explode base type 128;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | 128;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | 128;
	explode sleeve type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | 128;
	explode base type 128;
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | 128;
	return (corpsetype);
}
