#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, turret, base, sleeve, barrel1, barrel2, attach;

static-var  Static_Var_1, bAiming, Static_Var_3, Static_Var_4, Static_Var_5,
            gun_1;

// Signal definitions
#define SIG_AIM				2
#define SIG_MOVE			32


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

RockUnit(anglex, anglez)
{
	signal 4;
	set-signal-mask 4;
	anglex = anglex < 3;
	anglez = anglez / 3;
	turn base to x-axis anglex speed <50.005495>;
	turn base to z-axis anglez speed <50.005495>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <20.000000>;
	turn base to x-axis <0.000000> speed <20.000000>;
}

Create()
{
	Static_Var_5 = 0;
	set ARMORED to 1;
	hide flare1;
	hide flare2;
	dont-cache flare1;
	dont-cache flare2;
	bAiming = FALSE;
	Static_Var_3 = 0;
	gun_1 = flare1;
	start-script SmokeUnit();
	Static_Var_4 = 0;
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
}

StopMoving()
{
	signal SIG_MOVE;
}

RestoreAfterDelay()
{
	sleep 16000;
	set-signal-mask 0;
	turn turret to y-axis <0.000000> speed <25.000000>;
	turn sleeve to x-axis <0.000000> speed <20.000000>;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	while( Static_Var_5 == 1 )
	{
		sleep 888;
	}
	turn turret to y-axis heading speed <25.000000>;
	turn sleeve to x-axis <0.000000> - pitch speed <20.005495>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	while( gun_1 )
	{
		wait-for-move barrel1 along z-axis;
		wait-for-move barrel2 along z-axis;
		bAiming = FALSE;
		gun_1 = flare1;
	}
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( bAiming == 0 )
	{
		show flare1;
		move barrel1 to z-axis [-3.000000] speed [500.000000];
		sleep 150;
		hide flare1;
		wait-for-move barrel1 along z-axis;
		move barrel1 to z-axis [0.000000] speed [0.800000];
	}
	if( bAiming == 1 )
	{
		gun_1 = flare2;
		show flare2;
		move barrel2 to z-axis [-3.000000] speed [500.000000];
		sleep 150;
		hide flare2;
		wait-for-move barrel2 along z-axis;
		move barrel2 to z-axis [0.000000] speed [0.800000];
	}
	++bAiming;
}

QueryPrimary(piecenum)
{
	if( bAiming == 0 )
	{
		piecenum = flare1;
	}
	if( bAiming == 1 )
	{
		piecenum = flare2;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = sleeve;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide flare1;
	hide flare2;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel1 type NOHEATCLOUD;
		explode barrel2 type NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode flare1 type NOHEATCLOUD;
		explode flare2 type NOHEATCLOUD;
		explode sleeve type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrel1 type NOHEATCLOUD | FALL;
		explode barrel2 type NOHEATCLOUD | FALL;
		explode base type NOHEATCLOUD;
		explode flare1 type NOHEATCLOUD | FALL;
		explode flare2 type NOHEATCLOUD | FALL;
		explode sleeve type NOHEATCLOUD | SHATTER;
		explode turret type NOHEATCLOUD | FALL;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode barrel1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode base type NOHEATCLOUD;
		explode flare1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode flare2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeve type NOHEATCLOUD | SHATTER;
		explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode barrel1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode base type NOHEATCLOUD;
	explode flare1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode flare2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeve type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
