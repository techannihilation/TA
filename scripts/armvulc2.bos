#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  barrel01, barrel02, barrel03, barrel04, barrel05, barrel06, barrel07, barrel08,  
       block01, block02, block03, block04, block05, block06, block07, block08,
       housing01, housing02, housing03, housing04, housing05, housing06, housing07, housing08,
       Flare, spindle, neck, turret, base, shell;

static-var  gun_1;

// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide Flare;
	hide shell;
	dont-shade shell;
	dont-cache Flare;
	dont-cache barrel01;
	dont-cache barrel02;
	dont-cache barrel03;
	dont-cache barrel04;
	dont-cache barrel05;
	dont-cache barrel06;
	dont-cache barrel07;
	dont-cache barrel08;
	dont-cache housing01;
	dont-cache housing02;
	dont-cache housing03;
	dont-cache housing04;
	dont-cache housing05;
	dont-cache housing06;
	dont-cache housing07;
	dont-cache housing08;

	dont-cache spindle;
	dont-cache neck;
	dont-cache turret;
	gun_1 = 1;
	spin Flare around z-axis speed <250.000000>;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <5.000000>;
	turn neck to x-axis <0.000000> - pitch speed <2.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn neck around x-axis;
	return (1);
}

FirePrimary()
{
	if( gun_1 == 1 )
	{
		move block01 to z-axis [-8.000000] now;
		emit-sfx 1024 + 0 from Flare;
		sleep 250;
		explode shell type NOHEATCLOUD | FALL;
		move block01 to z-axis [0.000000] speed [20.000000];
		turn spindle to z-axis <45.000000> speed <400.000000>;
	}
	if( gun_1 == 2 )
	{
		move block02 to z-axis [-8.000000] now;
		emit-sfx 1024 + 0 from Flare;
		sleep 250;
		explode shell type NOHEATCLOUD | FALL;
		move block02 to z-axis [0.000000] speed [20.000000];
		turn spindle to z-axis <90.000000> speed <400.000000>;
	}
	if( gun_1 == 3 )
	{
		move block03 to z-axis [-8.000000] now;
		emit-sfx 1024 + 0 from Flare;
		sleep 250;
		explode shell type NOHEATCLOUD | FALL;
		move block03 to z-axis [0.000000] speed [20.000000];
		turn spindle to z-axis <135.000000> speed <400.000000>;
	}
	if( gun_1 == 4 )
	{
		move block04 to z-axis [-8.000000] now;
		emit-sfx 1024 + 0 from Flare;
		sleep 250;
		explode shell type NOHEATCLOUD | FALL;
		move block04 to z-axis [0.000000] speed [20.000000];
		turn spindle to z-axis <180.000000> speed <400.000000>;
	}
	if( gun_1 == 5 )
	{
		move block05 to z-axis [-8.000000] now;
		emit-sfx 1024 + 0 from Flare;
		sleep 250;
		explode shell type NOHEATCLOUD | FALL;
		move block05 to z-axis [0.000000] speed [20.000000];
		turn spindle to z-axis <225.000000> speed <400.000000>;
	}
	if( gun_1 == 6 )
	{
		move block06 to z-axis [-8.000000] now;
		emit-sfx 1024 + 0 from Flare;
		sleep 250;
		explode shell type NOHEATCLOUD | FALL;
		move block06 to z-axis [0.000000] speed [20.000000];
		turn spindle to z-axis <270.000000> speed <400.000000>;
	}
		if( gun_1 == 7 )
	{
		move block07 to z-axis [-8.000000] now;
		emit-sfx 1024 + 0 from Flare;
		sleep 250;
		explode shell type NOHEATCLOUD | FALL;
		move block07 to z-axis [0.000000] speed [20.000000];
		turn spindle to z-axis <315.000000> speed <400.000000>;
	}
		if( gun_1 == 8 )
	{
		move block08 to z-axis [-8.000000] now;
		emit-sfx 1024 + 0 from Flare;
		sleep 250;
		explode shell type NOHEATCLOUD | FALL;
		move block08 to z-axis [0.000000] speed [20.000000];
		turn spindle to z-axis <0.000000> speed <400.000000>;
	}
	++gun_1;
	if( gun_1 == 9 )
	{
		gun_1 = 1;
	}
}

TargetCleared(Func_Var_1)
{
	if( Func_Var_1 == 1 )
	{
		signal SIG_AIM;
		stop-spin turret around y-axis;
		stop-spin neck around x-axis;
	}
}

QueryPrimary(piecenum)
{
	piecenum = Flare;
}

AimFromPrimary(piecenum)
{
	piecenum = spindle;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel01 type NOHEATCLOUD;
		explode barrel02 type NOHEATCLOUD;
		explode barrel03 type NOHEATCLOUD;
		explode barrel04 type NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode housing01 type NOHEATCLOUD;
		explode housing02 type NOHEATCLOUD;
		explode housing03 type NOHEATCLOUD;
		explode housing04 type NOHEATCLOUD;
		explode neck type NOHEATCLOUD;
		explode spindle type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrel01 type NOHEATCLOUD;
		explode barrel02 type NOHEATCLOUD;
		explode barrel03 type NOHEATCLOUD;
		explode barrel04 type NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode housing01 type NOHEATCLOUD | FALL;
		explode housing02 type NOHEATCLOUD | FALL;
		explode housing03 type NOHEATCLOUD | FALL;
		explode housing04 type NOHEATCLOUD | FALL;
		explode neck type NOHEATCLOUD | FALL;
		explode spindle type NOHEATCLOUD | SHATTER;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode barrel01 type NOHEATCLOUD;
		explode barrel02 type NOHEATCLOUD;
		explode barrel03 type NOHEATCLOUD;
		explode barrel04 type NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode housing01 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode housing02 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode housing03 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode housing04 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode neck type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode spindle type NOHEATCLOUD | SHATTER;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode barrel01 type NOHEATCLOUD;
	explode barrel02 type NOHEATCLOUD;
	explode barrel03 type NOHEATCLOUD;
	explode barrel04 type NOHEATCLOUD;
	explode base type NOHEATCLOUD;
	explode housing01 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode housing02 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode housing03 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode housing04 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode neck type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode spindle type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode turret type NOHEATCLOUD;
	return (corpsetype);
}
