#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, laserl, laserr, rocket;

static-var  restore_delay;

// Signal definitions

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	restore_delay = 3000;
	start-script SmokeUnit();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

QueryPrimary(piecenum)
{
	piecenum = rocket;
}

QuerySecondary(piecenum)
{
	piecenum = laserl;
}

QueryTertiary(piecenum)
{
	piecenum = laserr;
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

RestoreAfterDelay()
{
	sleep restore_delay;
}

AimPrimary(heading, pitch)
{
	return (1);
}

AimSecondary(heading, pitch)
{
	return (1);
}

AimTertiary(heading, pitch)
{
	return (1);
}

FirePrimary()
{
}

FireSecondary()
{
}

FireTertiary()
{
}

Killed(severity, corpsetype)
{
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAPNUKE;
		return (0);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAPNUKE;
}
