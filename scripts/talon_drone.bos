#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  sleeve, barrel1, barrel2,  turd, body, base;

static-var gun_1;
// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from turd;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

Create()
{	
	gun_1 = 0;
	start-script SmokeUnit();
}

RestorePrimary()
{
	sleep 2000;
	turn turd to y-axis 0 speed <300.000000>;
	turn body to y-axis 0 speed <300.000000>;
	turn sleeve to x-axis 0 speed <200.000000>;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turd to y-axis heading speed <300.000000>;
	turn body to y-axis 0-heading speed <300.000000>;
	turn sleeve to x-axis <0.000000> - pitch speed <200.000000>;
	wait-for-turn turd around y-axis;
	wait-for-turn sleeve around x-axis;
	start-script RestorePrimary();
	return (1);
}

FirePrimary()
{

		if (gun_1 == 0) 
	{
		move barrel1 to z-axis [-1] now;
		move barrel1 to z-axis [0] speed [3];
	} 
	
		if (gun_1 == 1) 
	{
		move barrel2 to z-axis [-1] now;
		move barrel2 to z-axis [0] speed [3];
	} 
	
	++gun_1;
	
	if (gun_1 == 2) 
	{
		gun_1 = 0;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = body;
}

QueryPrimary(piecenum)
{
		if (gun_1 == 0) 
	{
		piecenum = barrel1;
	} 
		if (gun_1 == 1) 
	{
		piecenum = barrel2;
	} 
}

SweetSpot(piecenum)
{
	piecenum = turd;
}

Killed(severity, corpsetype)
{

	corpsetype = 3;
	explode base type NOHEATCLOUD;
	explode barrel1 type NOHEATCLOUD;
	explode barrel2 type NOHEATCLOUD;
	return (corpsetype);
}
