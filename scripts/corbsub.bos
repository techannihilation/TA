#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, turret2, flare2, turret3, flare3, turret4, flare4, 
	   bubbles1, bubbles2, bubbles3, bubbles4, mainflare1, mainflare2 ;


// Signal definitions
#define SIG_AIM				2
#define SIG_AIM2			4
#define SIG_AIM3			8
#define SIG_AIM4			16
#define SIG_AIM5			32
#define SIG_MOVE			64


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	healthpercent = get HEALTH;
	sleeptime = healthpercent*healthpercent;
	if( healthpercent < 66 )
	{
		emit-sfx 256 | 3 from base;
		sleep sleeptime;
		emit-sfx 256 | 3 from turret3;
		
		if( Rand( 1, 66 ) > healthpercent )
		{
			emit-sfx 256 | 3 from body;
			sleep sleeptime;
			emit-sfx 256 | 3 from turret2;
			sleep sleeptime;
			emit-sfx 256 | 3 from turret4;
			sleep sleeptime;
		}
	}
	start-script smokeunit();
}

Create()
{
	turn turret4 to y-axis <180.000000> now;
	start-script SmokeUnit();
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		emit-sfx 256 | 3 from bubbles1;
		emit-sfx 256 | 3 from bubbles2;
		emit-sfx 256 | 3 from bubbles3;
		emit-sfx 256 | 3 from bubbles4;
		sleep 300;
	}
}

StopMoving()
{
	signal SIG_MOVE;
}


Restore1()
{
	sleep 5000;
	set-signal-mask 0; 
	turn turret2 to y-axis <0.000000> speed <40.000000>;
}
Restore2()
{
	sleep 5000;
	set-signal-mask 0; 
	turn turret3 to y-axis <0.000000> speed <40.000000>;
}
Restore3()
{
	sleep 5000;
	set-signal-mask 0; 
	turn turret4 to y-axis <180.000000> speed <40.000000>;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	return (1);
}

FirePrimary()
{

}

AimFromPrimary(piecenum)
{
	piecenum = mainflare1;
}

QueryPrimary(piecenum)
{
	piecenum = mainflare1;
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2;
	return (1);
}

FireSecondary()
{

}

AimFromSecondary(piecenum)
{
	piecenum = mainflare2;
}

QuerySecondary(piecenum)
{
	piecenum = mainflare2;
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3;
	turn turret2 to y-axis heading speed <40.000000>;
	wait-for-turn turret2 around y-axis;
	start-script Restore1();
	return (1);
}

FireWeapon3()
{

}

AimFromWeapon3(piecenum)
{
	piecenum = turret2;
}

QueryWeapon3(piecenum)
{
	piecenum = flare2;
}

AimWeapon4(heading, pitch)
{
	signal SIG_AIM4;
	set-signal-mask SIG_AIM4;
	turn turret3 to y-axis heading speed <40.000000>;
	wait-for-turn turret3 around y-axis;
	start-script Restore2();
	return (1);
}

FireWeapon4()
{

}

AimFromWeapon4(piecenum)
{
	piecenum = turret3;
}

QueryWeapon4(piecenum)
{
	piecenum = flare3;
}

AimWeapon5(heading, pitch)
{
	signal SIG_AIM5;
	set-signal-mask SIG_AIM5;
	turn turret4 to y-axis heading speed <40.000000>;
	wait-for-turn turret4 around y-axis;
	start-script Restore3();
	return (1);
}

FireWeapon5()
{

}

AimFromWeapon5(piecenum)
{
	piecenum = turret4;
}

QueryWeapon5(piecenum)
{
	piecenum = flare4;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode turret2 type NOHEATCLOUD;
		explode turret3 type NOHEATCLOUD;
		explode turret4 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD;
		explode bubbles1 type FALL | NOHEATCLOUD;
		explode bubbles2 type FALL | NOHEATCLOUD;
		explode turret2 type NOHEATCLOUD | FALL;
		explode turret3 type FALL | NOHEATCLOUD;
		explode turret4 type FALL | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD;
		explode bubbles1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode bubbles2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode turret2 type NOHEATCLOUD;
		explode turret3 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode turret4 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type BITMAPONLY;
	explode bubbles1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode bubbles2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode turret2 type NOHEATCLOUD;
	explode turret3 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode turret4 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	return (corpsetype);
}
