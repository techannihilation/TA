#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, gate1, gate2, socle1, socle2,
		flare1a, flare1b, flare2a, flare2b;

static-var  statechg_DesiredState, statechg_StateChanging, cstate;


activatescr()
{
	sleep 250;
}

deactivatescr()
{
	sleep 250;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

OpenYard()
{
	set YARD_OPEN to 1;
	while( !get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 1;
	}
	set BUGGER_OFF to 0;
}

CloseYard()
{
	set YARD_OPEN to 0;
	while( get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 0;
	}
	set BUGGER_OFF to 0;
}

Go()
{

	call-script activatescr();
	call-script CloseYard();
}

Stop()
{
	call-script OpenYard();
	call-script deactivatescr();
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != cstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			cstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			cstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	set ARMORED to 1;
	cstate = 1;
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
		corpsetype = 1;
		explode socle1 type NOHEATCLOUD;
		explode socle2 type NOHEATCLOUD;
		explode gate1 type NOHEATCLOUD;
		explode gate2 type NOHEATCLOUD;
		return (corpsetype);
}